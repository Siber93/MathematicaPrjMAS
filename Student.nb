(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    385630,       8681]
NotebookOptionsPosition[    365170,       8023]
NotebookOutlinePosition[    368235,       8112]
CellTagsIndexPosition[    367961,       8100]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[1, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAKiEGSLED8//9/gvjRo0fsN27cELp69arY+fPnpZExPn137tzhBqrRBGJ/
ID4CxMfRMTZ9L168YL5w4YIaUD4AiC8C8Qcg/gvE/9AxFreC7PQD4gtA/BGq
7j8ujKz3+fPnLFC9b6H24dSHTf/FixfVofYSpRdZPzSsAqBuJkovsn5oOF8k
5F9s+h88eMBBjt0w/devXxcGso+S4m9k/ZcuXRKHpgeS3A7TD0wrkpToPw9J
ywOmn1L3Uxp+lMYfpemH0vRLjfwDjQey8y9a+fGOWDPwlF+gsPhEKDywlZ8g
d0D9EniexPITGd++fZv3PBnlN6764zxa3QHCAIDESDs=
         "], {{0, 26}, {16, 
         0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2V1vVFUUBuBGTfTSSygthYYKNHyVinrrpbcYfwBEJN5gUkyMfw9KKaVw
KCkQKCW1RNIQKg1gEE3QtdN10pMRZCaBzNQ+kzxt5nzstfeZfbPOu/vkD8e/
e6+vr+/sR/Hn+ImfvpyYOPHz1x/Hl2/OnP3+9JlT33515sdTp09NfHHy/TjY
H6592Nf3QfyvqmpHBwbCYNr5GoMNAw2d1AEAADa3/obtLba1aJ7rb4xR9x1D
YVfYHYbDnjASPgn7wv4wGg6Eg+FQOByOhLEwnj4Nx8Jn6fM21dcfyzHq8cay
xuGseTDnMJpz2pdzHMk5D+caduWa6v6p+czafU71s6p1+/cGAADYqt52/9va
++6tXt331j3v0TTeoj5e966v6lv3Vv/uWfWr9LJm9tzMpN+UW3eaVV9s00yY
CzfC7bAQFhvuhjt57maYD9er9c+VcDlcCtMd1AQAADafqXQhTabz6VyL+vhk
Xl/uLX1D6UFmw9VwrVrvL0o/cqta7ztKD3Iv/BLuh1/DSngYHoXfwlp4Ep6F
38Pz8Ed4Ef5Mf71Gff5F3vM8x3iWY65ljUdZcyXncD/ndC/neDvnfCPXcC3X
NJtrnG48r3afU/2s6uc11QO/OwAAwFbzLvrfksWVjK30kSV3KxncUlgOD6qN
vnc1PK42+t7iaaq/r+U1q9VG3/ogx1rKse9krfmsrV+l15R9WDLmkjWXzLl8
yvuVsmdLJl3eu5R9XN7BNLPrhTxX3seUvT3TQc2Xbfr7LWq3JgAAwH95m33K
u9Dt5wMAAMDmp2dlK+vGnu/2+yQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPN42aZu
1AQAAAAAAICtrNsZIXRTN/b8xTbNhLlwI9wOC2Gx4W64k+duhvlwvVr/XAmX
w6Uw3UFNAAAAAAAA6EVT6UKaTOfTuRb18cm8vtxbcrOSwc2Gq9V6FlcytlvV
eu5WMrilsBwehJXwMKyGx2EtPElPU/19La9ZzXtWcozlHHMxa9zKmnM5h9mc
03Rjfe2uq15bvb6pHvid2NzKPiwZc8maS+ZcPiWDLnu2ZNIlmy77uGTVzex6
Ic+VbLvs7ZkOau7owEAYTDtfY7BhoKGTOgAAAAAAANDr+hu2t9jWonmuvzFG
nbsNhd1hOOwJI2Fv2B9Gw4FwMBwKR8JYOJrGW9THx/LaQ3nvgRxrf449krWG
s/ZQtZH3NdfY7rrqtdW6/fvw/9LMnpuZ9Jty646y6n8AhCP7tg==
         "], {{0, 26}, {
         2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lktLQkEUxyVdCBIELaxctYq+QduWbcKMPoCSRRsDC6JPp+Lj4vuq+EBc
iBtFfIYrpU7nPzQiN++9vmrgp/dx5j8z55w5c099z56HPYvF8mLnH4/37TIY
9L7fHvDNXeDl6THgv78KvPof/cELn5UfnjBHjI3J5/OudVBV9bhUKjmbzaad
iCxmcB9lAxKMmzmv1+v7JvpfG/DJjJkic8NrOut0OlYdfdoCjPXBqMx1q9Vy
7FhfgvX0MUa73bYZ6edyuTnrvPsZQ4Wv9PTRL5vNroTOGIiJu9FoOLT6UjuT
yVAqlaJkMin+0+m0YPEZbHTGQDwKyKtl+ugHjdFoRIVCgeLxOCUSCQGua7Ua
9Xo9YQNbozXI/aHVZ//RcDik2WxG5XKZwuGwANdo0JfrNIhDvFqtHi7zD+YW
i8VoMBgIvWKxKEDrdrtiHbAxiAF8pHAf5zJ9+Bca0WiUxuMxydbv98U64CvY
wNZgTyioI9r8QR/EEvrQUhRlrh8Kheb6sDHTZ1xG84ePMP/pdPpr/tvoL/of
Mcb9Jv7X+mcxP2X+QCMSiYh5VyoVMQbXMbP81I2vzM/JZCLyX+a+BPmPvbFN
fmr36pr713B/rVp7THy/tD6Y1cjF5zrahvVtB5jW5y21B/kVzpc1kecjfK53
Pu7kfNfO+x+/T/70++ob7NUEtQ==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 CellChangeTimes->{{3.733999395636707*^9, 3.733999398982295*^9}},
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<Package.m\>\"", "]"}]}], "Input"],

Cell[BoxData["\<\"C:\\\\Users\\\\Simone\\\\Documents\\\\GitHub\\\\\
MathematicaPrjMAS\"\>"], "Output",
 CellChangeTimes->{3.7346123665978107`*^9, 3.7346165997785516`*^9, 
  3.734661079976951*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Rappresentazione Grafica delle Funzioni ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
TGxap5/pzTmDfi6EG4pHAzoJQBvwDJccR8cHt451GMHwXCK6jTFtWRwyL46a
icOGuQ49pl012irraZC8fs4tL2bcPEq98iO18Efq1cOMm2dY969wHpdwnt4A
ALJcXbpcUyqourdcdU/w8i78orqU//wOt/wm+8mNpdIi5i24oQPlyj6wBXrJ
YfajS6L6MllXg3rotX6qDc6MxvWbiUNW0qCNPunkkbwyXtiiScAldpOI9zyo
XzEtjNnomDgcOf/TKjtz60jKe+tGv/wYs/XPZtIUFA1na2ym02tuIjCyBXQr
C8d3Tm5ZJ2l5YaZgEuEgcrqQQCwEhO0snGa0wS2iSztqAPEWNz518XHqoVoH
jwS7qNKp3MJvDeO/5keUt7z9ag1lLFkV5pGyVIMvHVyCYqB1ZucX4qZnLj5e
O9FkW8JmCiTmRGWOxWSvU5jgoZ9Ca+AR4ahRr1tY93Dok3fwx3f7VEL00swt
iOZu55R7RkqvemKcJo+U7WDjrdQJa6ZLNRDR2tEmWfcrYV0Z68FF2pX91KL9
zLtnAdaJGsplXa/Uo626yVYA7FbyiJM97xYQXQKCS7DgFiw4OVjwcHGwDta8
i4sHf3KDP/HwTh4BfG6ljABVrp14rR5pkffUgSMgeHl/6f4FWvEhGviKO2f4
L0ulrS/Uw/VAsIOR2KjjNsqojTHrEtLDZjWEpuEkIwHEv5Nahbtc4BL8Scik
wB/bPfjxOyutlXGfCz1ib+eGw7PBdvbj4tENH8h7G5KREKDPKbSgx1vnMZ2G
z91AtUtI0Yx1zu39mv/iDtgv9WiDjTkP1zhCPUprTnwayh3kPFjmLW8/ZbkE
N4BxXhlbNVQLLrGV9pfTO75Q9DXb2fPasQaneAnKthVIoQUKUyhVREt+5eqV
5dTf6qUHZ9v5VOLFs3sGP36XU3YtGfTkQBTZEhrinIUFZDzxkN+n4Frp0xbS
sJUMszITvk/R/ZL/4h7z9gVK4T76tcO8ihvSjlr1SIdhrseE77HTJ+1Ls1ba
lIU8bpzr1ozUK3qeyzrKVlofg4e8s1zWXiZpLl1pewyzYkK/qr9K1v5E1v54
BTy/eQoW1ow3mBf6AD90sOftrDnwpTAg47qNcz3aiU55b+NyzQPGzROUS3sZ
Jad5z27L2ioM0+1WGsYGvpQ4bCFPuoS0uNeG1nJcdeis3j5gR0/KMNc7vnEd
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
i5gJg0Zcv5U+D7S2uLncswIn40fdhnzt8bz9K9hfMZxVRufgEACX84goc/u3
8sqvu0VUZX8VkH5re5uik2xQDg9y8JVe8wmcAxKLSpoejW34xCthZFRhrilV
GhHrABNMxGHwjXYWXlD9YH7/FmHNAweLYMQNGOd7AlppriVWFh7jUSePzLx9
WlBVYib0eUQkK3lEPVzPe1a00v4SzhnJhULmGs2senUzCJ2IA94YD7gVA83E
Mz+I6u5LX5epR1qgWMivEUkaS1UDjeqhZkHlVVnHU8KJHYyb5/iV1wAAxrz2
3D6Cp6BRLnpVunTnFL3kKK+i2CPlJgJuKBrM6d41M4Spt24KEGRj4Jg3Twgq
iy2kEaTsj6j2FrXooJk0BfB/7ZIho8pEHNJPdTiYGGVPHe7YFvr1U5bFEfPC
gH6mM2RSIU528EWJgMtCnjLMD9Cvnxn+/L2xDX+Sd9ZGbHo00SY7GGj14EBh
s6L3D78hnNiKlD6D1tDsmM+unWi2Lc2pRzqmtq4zYAdsS/Pg1om41FEJgJyZ
fD3JvP3a7K86fmZhJGxcUQ3WBA1yAAsLJ7Z5ZRxlX5VHupQt2Z3I+migXDBJ
GnVBp9DWLxCEuiEymXHJpF+zMrHpY3rJcaCXg4aVTB8EKEsenUbdVIcJ12uh
TTJunsUd3Mh5cgUQG2VvtZ2OibgsKN7mKmonvUoJ+/ElPpwJ+NKI67ZSRoz4
biDDpa2PWffOaMY70yk0RhyFgty9AIqGYl5bUC+zM2fs4NofbWLeOSl4eUs9
1Kgaaoz77BG7XtlbtfziurihVIvp1k51Yw9sWrp/WTVUJ667Y2cvprITf5ld
i8eCJu3Km2ra1YOSplIb2CZrLmiUJXyOZMiXymUkoZE9aXRuIqCVsB/CoZjy
zqdOFgYAkZNLUPZV854VgqPkEtCzk72oATD3SJjaiSbD3BsLZRZ/9HvCyT2G
WbhmiGq4wa/gZqYIwHgi+pmOuf3fDXzwu4mvP1CPtcd9rlwmNXovy51yeI2Q
caXvj7+Z2vop0OzoCYVyfw5ZNIreF14RlVtWNLdvq0/K0E61OPiL0NoNoqvk
ETJvvyqDsiVV0aks+DkZCwMy5lXyV9pfTG1b51xmaqY7bOTRTKALvGxQsyys
uWOhTCQytWhQeobM3ueurASKgAhdgeKhAP36YcBqxPW34x5LMjuFmQibVKrB
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
2m8iAq4rgHfW1bPUsixizmHC2UMzGXsxR3+dTts1dWTH2K4to79uHtnxfe83
//XxH/+778fP8dkHtJPvk23doP8iPoNieeCZXcKaPrFzebDFxp6087F/kFO/
IRvylxKE/8HqUEQ93urRSJlXcthXsoE+qJl4G3I7kkV0/09ux1QONXjzm5ZG
tn+jGnqB1I0AAw2MFEVn3apmlnu3YOrIzxG/W/7+ng+u6wJ2HFpdgRlHNBrw
OaR0elnm4E/fzL+8C0fiwVsNh5IR4wIyUHVhLTuBHFUsEoqFglCP2lAw4nOb
qaPcW+eXup6wr53TYTqEtUXkC4cmD2xi38hVdDWyr+WSCzJUAy/YVWfopelz
LbftXIxDTAy7LAAt9IBD3gJadh/gkIB8AqUVn7WLWZ4lbijTTXUoB95wb+Wp
h9/69ApAwzTjrfTyrLE9302nbQWwI3pUDnCeX3OBc+Mso+w483Im4HW0i8cY
lyDWJ31+m19XqpnsRhBSS5pCNdaEbqabkLOPX1uyIhfw66sGN38xvncTUKUJ
Z/dYBYxYKARpwYm4S84T1pXOpG8Dr4W3NdisvTMnd0zs2zT0yxcA/7m3oBDH
iQOAKhcF7QYo2geOGLeLiMLaEmZFBj5z1+SBn0Z2fje8/Zver/8ufnwl4vfE
4QTqaDggb6sN2Q2c67ngXPxOw2zL9fCKOXlf49G5l7e6P/9b1+f/0ffNP3q+
+/vw1q+Gt30NXmDvk4c3TxzaPJ22DX/qV/yZPeBEwPQhargUcpoR7w+YW820
IQOhS/HhITbr0KpSohpuCTuQtgsbILkhf3lBWR9C1azcGTN9SDX8CnN8u11A
Vw2/WFXPxZAsmHjiU1otsqHkkI9B9bQBHHV99h8zab+Evd4kBgPlV8GWvasJ
WNQj27+ff30bqOFL3Y+iEM+B0DlgVjln2fz60qEtX04c3LE8+DJFM+DIwJBT
RKKVnHQgHFJChjrehAIrC7z5V7dEjWXSp1fEjWWyd/fkH+rYV08Dtjm89UuA
h/qpdknTVdHDS+zrZ8WPKjWjb/j3i6YO/8S/XwK+YlRmUy4c4dcUzr+5D9RD
NNqnT/ahcTrtZ8Lp3bPPbrkXGEB35lQXAiDCZu4a+/UHWumJuWc3VP0twgeX
WFehDjjUi8cAcQX8jQzI6tMq5WAL+3qeoOairLWGmHtofP9mbvUFRmWmZrzT
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
gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
gICAgICAgICAgICAgICA+F9DLpd77Zafb3/Lz99x5zcd8V+I9+vMP2QIv7aR
t+z/2n+94/7veAXf7+jv0fhrf/L2r29p891P8q89h7+2qb+n8Z+fn3dv5H//
2Xz3Hv6vUUEORSKReMf9syjyRT0EK69seaX94q+ZTCaZTL7H6DLZLPgh+DnW
4Xfsajqdxvr29wMcOpFMZnMvtfbKo/SmjoHTW9yNd+l/KpX6ec+Lfwg6E4/H
X9nn54928XommwEnhPyazeWwU/qmQ2CnGgz558N87XFfi3dhmzd1GKyD7kVm
Zjxer9vjDoZCiWTilabAiOKJOPh8FyrAVrAbI0eAHGBhdG/oLrY/6FLx8MF6
8T1JPiBv6swv4rWCx8/bfMejgN3AfRIIBl1ul8vtDgQCsXj8lYv+pm5gQytu
/x1v+De1UPz11+5fvFL8QP0qFk2lwYOVekufX9tIMBTs7u0NhcO/uHM6k7E7
HFMSyQSXw+VxwcLhckWTkwaDIZ549db9eQ/BjWUwGhlMRjQa/VWdBDBbLOOc
Cbvd/u4/cTgcY+PjZrP51x7rtdAbDDQG3R/wY1/f/WUHBtvX3+/z+3+VZEKj
08VT4jc99eABZ7HZz6uqevp6R0ZGRmm0EWQBf2kMBoPJYjGYzNHR0RFs++go
aA38b2BwgD0+Rj4d4UhEKBKxWCywP4vNYjKZNLSR4VHQ4ijSFp1OZyDdKL6p
wKHdbrdUJgNXf4IzweXxxsfH6QwGtoBeiSZFJrM5Fo+9y3P0Fm4ErwCtVjsw
OPissrLk9u2r16/fvnunprZ2ZHTE4XSSL+Vp9XRza0trW+sQlYJ1GwwBfNKR
E8EEQwOjQLYgZwMf1BBlCDSLXJF8PhQKTWvUPB6Pg9zSPPTG5qm1muTPniOs
e6FwSKFS8vh8sD/4BGdAJpcDDid3cHu9UrmMAwCeD2Q3Lo3oDLjzQQfAMj4x
wRcIVNMqMJBfFE5As+BKyWQy0BT2xE1wOJNiMXgS334vgRtPqVQOj442Njc/
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
agSdgy3DaDGyt+LvoCUwmP8HVGeFDA==
     "], {{0, 318}, {438, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{149., Automatic},
   ImageSizeRaw->{438, 318},
   PlotRange->{{0, 438}, {0, 318}}]]],
 "\n",
 StyleBox[">< Versione Studente ><", "Chapter",
  FontColor->RGBColor[0.9490196078431372, 0.4, 0.4117647058823529]]
}], "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.733997097004491*^9, 3.733997106359313*^9}, {
   3.7339972171329017`*^9, 3.73399722857377*^9}, {3.73399762815193*^9, 
   3.733997675658998*^9}, {3.7339977519055576`*^9, 3.7339977785914526`*^9}, {
   3.733997880525403*^9, 3.733997890833058*^9}, {3.733998261137269*^9, 
   3.7339982661024284`*^9}, {3.7339983036115665`*^9, 
   3.7339983168307953`*^9}, {3.7340021238503313`*^9, 3.734002128241235*^9}, {
   3.7340022350245*^9, 3.7340022615129633`*^9}},
 TextAlignment->Center,
 CellTags->"Home"],

Cell[TextData[StyleBox["a cura di",
 FontSlant->"Italic"]], "Subtitle",
 CellChangeTimes->{{3.733997679911029*^9, 3.7339976893847747`*^9}, {
  3.733998308332799*^9, 3.733998311301587*^9}},
 TextAlignment->Center],

Cell["Simone Bertolini, Alessio Francesconi, Matteo Grillini", "Text",
 CellChangeTimes->{{3.7339992978858657`*^9, 3.733999352144992*^9}, {
  3.734002085322394*^9, 3.734002111162717*^9}},
 TextAlignment->Center],

Cell[BoxData[
 ButtonBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAABgPf8HFuQ/5A==
     "], {{0, 512}, {512, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{106., Automatic},
   ImageSizeRaw->{512, 512},
   PlotRange->{{0, 512}, {0, 512}}],
  BaseStyle->"Hyperlink",
  ButtonData->"Introduction"]], "Input",
 CellChangeTimes->{{3.7340029252155623`*^9, 3.734002928071149*^9}, {
   3.734003207619581*^9, 3.734003208571777*^9}, {3.734003452815892*^9, 
   3.7340035280423846`*^9}, 3.7340061579562335`*^9, 3.734006251399482*^9, {
   3.7340069784590645`*^9, 3.7340069896060653`*^9}},
 FontSize->14]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["1.1 Introduzione", "Section",
 CellChangeTimes->{{3.734002437896296*^9, 3.734002450726939*^9}},
 CellTags->"Introduction"],

Cell["\<\
Text lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam \
nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. \
Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit \
lobortis nisl ut aliquip ex ea commodo consequat.\
\>", "Text"],

Cell[CellGroupData[{

Cell["\<\
Item duis autem vel eum iriure dolor in hendrerit in vulputate velit esse \
molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros \
et accumsan et iusto odio dignissim qui blandit praesent luptatum zril \
delenit augue duis dolore te feugait nulla facilisi.\
\>", "Item"],

Cell[CellGroupData[{

Cell["\<\
Subitem nam liber tempor cum soluta nobis eleifend option congue nihil \
imperdiet doming id quod mazim placerat facer possim assum.\
\>", "Subitem"],

Cell["\<\
Subitem typi non habent claritatem insitam; est usus legentis in is qui facit \
eorum claritatem.\
\>", "Subitem"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 RowBox[{
  ButtonBox[
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3V3In/V9x/FvHhojGPUgPtAONbEUWq32TI01o0fxicEcYWVbC7ZLZCcK
thA8GbKjMNqObgedBx3UMQY52EkPEx9WGJ3RuB2M+FQ8iEbojAmbMyzRZP1e
+/ePab29k/u+/9f1vR5eL3gXuqPcOfh9RpNc323feuyhvesj4jub8z8eenjf
1x5//OEn/uDq/C+7H/3Onz3y6J4/ve/R7+55ZM/jd35rQ/4fY/2sjQEAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAz92cPZx9P/vH7J+yp7O/zL6efa7u
lwYALNCmbE/2cvZ/F+lc9s/ZH2brK36xAMCarMu+kR2Li+/+Uv1HtqPzXzUA
sFp3ZD+P1e3+hX2U/XnM/n8JAKCfPpv9JDsfa9/+C/u78OcBANA3m7Mnsvdj
sbt/Yd/v7KcBAC7moezNaG/3L+z3O/qZAICl3ZY9G93s/rz/zK7q4ocDAH7D
1uxHMfu7eV1u/7wnW/8JAYC5z2SPZSejZvfnnfj1rwUAaNeu7GjU7v6FPdDu
jwsAk/aF7KdRv/e/3Q/a/KEBYKKav2P3vexM1G/9Uv2svR8dACan+cZO863+
X0b9xi/Xm239BgDAxOyMS7vR04dOtvR7AABTsS36+Wf8y/U/rfxOAMD4bcn2
Z6ejfs/tPwC0q7ml983s7ajfcfsPAO27Kzsc9ftt/wGgfddnT8fi7/LafwDo
n+Yu75Mx28vqzbb/ANC+3dkvon6r7T8AtK+5y/tM1G+0/QeA9l2TPZV9GPX7
bP8BoF2bsn1Rf5fX/gNAN+7PXo36Pbb/ANC+L2YHo36H7T8AtO/K7IfZ2ajf
YPsPAO3akD2WvRv129uH7D8AY3dPdiTqN7dP2X8AxuqmGN5dXvsPAKtzRczu
8n4Q9Tvb1+w/AGMxhru89h8ALt2d2QtRv6tDyf4DMGTXxewu77mo39QhZf8B
GKLLYpx3ee0/ACytucv7RtRv6JCz/wAMxa3ZoajfzjFk/wHou60xnbu89h+A
qdsYs2/2vhf1ezm27D8AfXRv9krU7+RYs/8A9Mn28M1e+w/AVMzv8p6J+m2c
QvYfgErrs73ZO1G/iVPK/gNQ5e7spajfwilm/wHo2o3Zgex81O/gVLP/AHTl
8ph9s9dd3vrsPwBtm9/lfSvqd0/2H4D2fSV7Pur3TvYfgPa5y9vv7D8Ai9Tc
5d2XnYr6jZP9B6B9D2avR/22yf4D0L5bsoNRv2my/wC0b36X92zU75nsPwDt
2hDu8g49+w/ASuzKjkb9fsn+A9C+beEu75iy/wAsZ0u4yzvG7D8AS5nf5T0e
9Vsl+w9A+3ZkL0b9Rsn+A9C+G8Jd3qlk/wHYHLO7vM0mVO+S7D8A7Wvu8h6L
+j2S/Qegfbdlz0b9Dsn+A9C+a8NdXtl/gKnYFLO7vCejfntUn/0HGL8Hstei
fnPUn+w/wHh9Kdzl1dLZf4DxuSpm3+x1l1eflv0HGI/5Xd4TUb8v6nf2H2Ac
dmYvR/2uaBjZf4Bhuync5dXKs/8Aw9Tc5d2fnY76LdHwsv8Aw7IuZt/sfTvq
N0TDzf4DDMdd2eGo3w4NP/sP0H/Xx+ybve7yalHZf4D+cpdXbWX/Afppd/ZG
1O+Expn9B+iXL2fPRP0+aNzZf4B+uCZ7Kvsw6rdB48/+A9TaGLNv9rrLqy6z
/wB17stejfot0PSy/wDduzl8s1e12X+A7lwZ7vKqH9l/gPbN7/K+G/XvvtRk
/wHa9dXsSNS/99KF2X+AdtwY/oxf/c3+AyzWFTG7y/tB1L/x0qdl/wEWY36X
962of9uli2X/Adbujuxfo/5Nly41+w+wetfF7C7vuah/z6WVZP8BVu6ymN3l
fT/q33FpNdl/gJVp7vK+HvXvt7SW7D/Apbk1OxT177a0iOw/wPK2hru8Gl/2
H2Bp87u870X9Wy0tOvsP8En3Zq9E/RsttZX9B/jY9vDNXk0j+w/w8V3eM1H/
LktdZP+BKVuf7c3eifr3WOoy+w9M1d3Zi1H/DksV2X9gam7IDmTno/4Nlqqy
/8BUbI7ZN3vd5ZXsPzB+7vJKn8z+A2N2e/Zc1L+1Ut+y/8AYXRvu8krLZf+B
MWnu8u7LTkX9+yr1OfsPjMWD2WtR/65KQ8j+A0N3S3Yw6t9TaUjZf2Coro7Z
N3vPRv1bKg0t+w8MzYZwl1daa/YfGJKd2b9F/dspDT37DwzBtnCXV1pk9h/o
sy3Z/ux01L+X0piy/0Afze/yHo/6d1IaY/Yf6Jsd2eGofx+lMWf/gb5o/j3f
j8M3e6Uusv9AH/xuuM8ndZn9B6p9PfvfqH8PpSll/4FKzTf7P4r6t1CaWvYf
qLI9+6+ofwelKWb/gQrrskNR/wZKU83+AxXui/r3T5py9h+o8GzUv3/SlLP/
QNc+F/6Nv1Sd/Qe6tifq3z5p6tl/oGt/G/VvnzT17D/QtWei/u2Tpp79B7r2
UtS/fdLUs/9A145E/dsnTT37D3TN//4v1Wf/ga75+39SffYf6NreqH/7pKln
/4Gu/U52PurfP2nK2X+gwnNR//5JU87+AxUeiPr3T5py9h+o0Nz/9e8ApLrs
P1Dl89l/R/07KE0x+w9U+r1wC1CqyP4D1f4oOxP176E0pew/0Adfy45H/Zso
TSX7D/TF1dmPw58HSF1k/4G+2ZG9GPXvozTm7D/QR+tj9p1gfyYgtZP9B/ps
S/bD8PcDpUVn/4Eh2Jb9NOrfTGks2X9gSHZlR6P+7ZSGnv0HhmZD9lj2XtS/
odJQs//AUDX/XrD5uwFno/4tlYaW/QeG7pbsYNS/p9KQsv/AWDyYvRb176o0
hOw/MCaXZfuyU1H/vkp9zv4DY3Rd9nT4lrD0adl/YMxuz56P+rdW6lv2Hxi7
ddk3s7ei/s2V+pL9B6bi8uzJ7IOof3ul6uw/MDU3Zgey81H/BktV2X9gqu7O
Xor6d1iqyP4DUza/M/xO1L/HUpfZf4CIK8OdYU0r+w/wse3hzrCmkf0H+KR7
s1ei/o2W2sr+AyxtY7gzrPFm/wGWtzV7Kvsw6t9saVHZf4BLc2t2KOrfbWkR
2X+AldmdvR7177e0luw/wMo1d4afjNkbWv2OS6vJ/gOsnjvDGmr2H2Dt7sxe
iPo3XbrU7D/AYszvDL8d9W+7dLHsP8BiXZHtD3eG1e/sP0A7bgrfElZ/s/8A
7bonOxL17710YfYfoH0bYvYt4Xej/t2Xmuw/QHfmd4bPRv37r2ln/wG698Xs
YNRvgKab/Qeoc3/2atRvgaaX/QeotSnbl52M+k3QdLL/AP1wTbgzrO6y/wD9
clv2TNTvg8ad/Qfop+bO8BtRvxMaZ/YfoL82hzvDaif7D9B/18fszvD5qN8N
jSP7DzAcd2WHo347NPzsP8CwuDOsRWT/AYZpS8zuDJ+O+i3R8LL/AMO2LdwZ
1sqz/wDjsDN7Oep3RcPI/gOMx/zO8Imo3xf1O/sPMD5XhTvDWj77DzBet4Q7
w1o6+w8wfg9kr0X95qg/2X+AaZjfGT4V9duj+uw/wLRcG7NvCZ+L+g2S/Qeg
W7dnz0X9Dsn+A9C95lvCx6J+j2T/AejW/M7wB1G/S7L/AHTrhuxAuDM8hew/
AL9tR/Zi1G+U7D8A3Vqf7c2OR/1Wyf4D0K3mznDzLeEzUb9Zsv8AdGt7uDM8
puw/ACuxKzsa9fsl+w9At+Z3ht+L+h2T/QegW1uzp8Kd4SFm/wFYK3eGh5f9
B2BRdmevR/22yf4D0K3LYvYt4fejfuNk/wHo1nXhznCfs/8AtOkr2fNRv3ey
/wB0a13M7gy/FfW7J/sPQLcuD3eG+5L9B6BrN4Y7w9XZfwCqfDV7Keq3cIrZ
fwAqze8MvxP1mzil7D8AfXBlzO4M+5aw/Qdgem4Od4btPwBTdV/2StTv5Fiz
/wD01cZwZ9j+AzBV18TszvCHUb+bY8n+AzAUX84ORf12jiH7D8DQNHeG34j6
DR1y9h+AIZrfGW52rHpLh5j9B2DIro/ZnWHfErb/AEzPndkLUb+rQ8n+AzAW
8zvDb0f9vvY9+w/A2FyR7c9OR/3O9jX7D8BY3RS+JWz/AZiqe7IjUb+5fcr+
AzAFG2L2LeETUb+9fcj+AzAlV4U7w/YfgKn6UnYw6nfY/gNA9+7PXo36Pbb/
ANCtTdm+7GTU77L9B4BuNXeGm28Jn4v6fbb/ANCt27Jno36j7T8AdK/5lvCx
qN9q+w8A3doc47wzbP8B4OLGdmfY/gPApbsrOxz1+23/AaBb8zvDx6N+x+0/
AHRrSwz3zrD9B4C12RbDuzNs/wFgMXZmL0f9tl9KJ1v6PQCAKVqf7cl+GfUb
v1xvtvUbAAAT1twZ/l52Juq3fql+1t6PDgCT94Xo598N+Ks2f2gA4P/tyo5G
/e7Pe7DdHxcA+LX5neFTUbv9J7LPtPyzAgC/aWv2o+yjqNn/v2j/RwQAPkXF
neF3s6u7+OEAgGU9FLN/j9fF/u/u6GcCAC6uuTP8RPZ+tLf9f9PZTwMArMRn
s5/E4u8M/33Mvk0EAPTXHdnPY+27fy5mf99vXbe/fABglZrN/kZ2LFa3/c33
Bu7p/FcNACxC892AR7J/j4tvfvPnBv+S/XG2oeIXCwAs3Oezb2d/nR2I2beF
/yH7QfYn2Q11vzQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACm7Fd0Oj/k

      "], {{0, 512}, {512, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{106., Automatic},
    ImageSizeRaw->{512, 512},
    PlotRange->{{0, 512}, {0, 512}}],
   BaseStyle->"Hyperlink",
   ButtonData->"Home"], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAABgPf8HFuQ/5A==
     "], {{0, 512}, {512, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{106., Automatic},
   ImageSizeRaw->{512, 512},
   PlotRange->{{0, 512}, {0, 512}}]}]], "Input"]], "Title",
 CellChangeTimes->{3.7340068820185647`*^9}],

Cell["", "PageBreak",
 PageBreakBelow->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Equazioni di 1\[Degree] Grado (Rette)", "Subsection",
 CellChangeTimes->{{3.734264156011918*^9, 3.734264174551561*^9}, {
  3.7342647671947713`*^9, 3.7342647691117325`*^9}}],

Cell[CellGroupData[{

Cell["Teoria", "Subsubtitle",
 CellChangeTimes->{{3.7342647720608826`*^9, 3.7342647844254065`*^9}}],

Cell["Esercizi", "Subsubtitle",
 CellChangeTimes->{{3.7342647720608826`*^9, 3.7342648062551336`*^9}}],

Cell["Equazioni di 2\[Degree] Grado (Parabole)", "Subsection",
 CellChangeTimes->{{3.734264156011918*^9, 3.734264174551561*^9}, {
  3.7342642766773386`*^9, 3.7342643066454735`*^9}, {3.734328641837165*^9, 
  3.7343286437612753`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Teoria", "Subsubtitle",
 CellChangeTimes->{{3.7342647720608826`*^9, 3.7342647844254065`*^9}}],

Cell["Esercizi", "Subsubtitle",
 CellChangeTimes->{{3.7342647720608826`*^9, 3.7342647844254065`*^9}, {
  3.7342648210253296`*^9, 3.7342648237490826`*^9}}],

Cell["Equazioni di 3\[Degree] Grado", "Subsection",
 CellChangeTimes->{{3.734264156011918*^9, 3.734264174551561*^9}, {
  3.734264280070696*^9, 3.7342642801609745`*^9}, {3.734264316170017*^9, 
  3.7342643174315257`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Teoria", "Subsubtitle",
 CellChangeTimes->{{3.7342647720608826`*^9, 3.7342647844254065`*^9}}],

Cell["Esercizi", "Subsubtitle",
 CellChangeTimes->{{3.7342647720608826`*^9, 3.7342647844254065`*^9}, {
  3.7342648313996153`*^9, 3.734264833278369*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[TextData[StyleBox["Equazioni di 1 \[Degree]Grado", "Section"]], "Text",
 CellChangeTimes->{{3.734265091372779*^9, 3.7342651012527695`*^9}}],

Cell[CellGroupData[{

Cell["Introduzione ", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}}],

Cell["\<\
Conosciamo la forma delle funzioni di primo grado : f (x) = m X + q ma cosa \
vogliono dire i parametri m e q?

Ma soprattutto non ti ricorda la forma della retta?
\
\>", "Text",
 CellChangeTimes->{{3.7345006715616665`*^9, 3.734500680325534*^9}, {
  3.7345007282947474`*^9, 3.734500731374178*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "x"}], "+", "1"}], ",", 
     RowBox[{
      RowBox[{"4", "x"}], "-", "2"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], "x"}], "+", "3"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7345007524053965`*^9, 3.7345007883036575`*^9}, {
  3.7345008229814744`*^9, 3.7345008826352205`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1GtMk2cYxvFS7SzCREorFis9PIhaLdSXRxnI0htZU5yCrAhzGpVVMIQx
YUIcBnESOSgzgpxUsB9EhhDiWLYM1Li8jwNFRTvmAszhaXaCtcuGnGTEjrH0
/nDl9/X/6VJbssxpQoFAEDe7/y0YjhudmSHMLceG8hdNDL4hKMfiFz553fEP
QTmmish2ZY0RlGM/llWKnw4RlGPikIFAdo+gHKvOTdl0pJ6gHGv1yGkUhBOU
Y6I0EyffqUHXML9fb2Q2nFKjemburNuz8o6KNZas7TZXh7L8v9/NrLArUR27
/HldRtuWQHQ1i69MUv17VoFqmcn6Q3zsnwHoCtbUfbA/Z4ccXc52FVXLfmr2
R5exwylzvvbyW4QGMYFOyccUS1EN++3Ls6WtfRJUxRTz01vGN/iyd6S9Zkdx
IPtkrVY0qPBBl7A94Y+bOzu9UH+mzYuc2dcoRqXs/KPEroPRItSXDRfKokyL
hcw2Z1XeSb03u1qzwvgi2cW7FTG948F4qHWST7n/nWN3pIt/7+qgpyt5hD+W
2+E3fWmEz25pm/L1s/NHNhXcKD9zi0/eS87fP3Sb79u8r6022m7ovvugLCzx
loHLaX92VzppiNRd/zbhtN1grU35qLnHA4QHZA9T5SMGt2KY551QaPlr0uB2
ARx92h+z/4LLsCHbqb7yswS+qS9JODzqgcogqyF14R/JIlQOuzLqlpYWilEF
HP/gQETYOS9UCXOlNUNfTC8AYdn7Y4YCNQz0FI8U+fiiBJLyLevqOiVoEGR6
OTW27VI0GJStN2vfeilDl0P+5ZhEn3p/dCVkN2W2rwuVo6vAWxhuCXkegK4G
46dba7RVCjQEFl9ZmmUMCoQTD092aCR6qNx/7JR+QAkbI7pizzj1YC7ZorO2
q9A1oN1RlNQ42+2Wg/4hz4aqJA0aBjbL82iJkqAUfp97capGQ1AK403pbfJg
glKQO50KtY6gFFJzRl+HricohemjM5fiPiQoheCv5AHHywlKIcI02OtdRVAK
mx3nSitqCUrhM51q4rSVoBSufR/c29RKUArmm2ElXd0EpZCWPhEV20NQCnnz
O8Z6bASlYI2P/PiXPoJSeNEPUc/sBJ3tzROOpQ0TlMLbS7paHC8JSoHbbfJ/
9YqgFIwenrbcCYJS2HbhTtHUFEEpZBhPrD/0hqAU8L9QCv8BzO82pg==
       "]]},
     Annotation[#, "Charting`Private`Tag$13954#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1H9QE3QYx/GxwJgDkR8ThnNj+3qYuwbIlMmY7eHLduMqkCCw00tpgkcE
QcIZHmqR/BDrSoHBCewKJILjkq47kbhqT4GiUsSVjggsDQURr/gp5EFkx/PH
517/fv56K605ielCgUAQ92T/e3w8bmZlheGqJhwr3DA/vMRIE8av/2Ph0j+M
NGFQZO5yziwjTfj96Qr322OMNKF7yKAcf2SkCavyU194t46RJmxzyWsS6Bhp
Qrd0S7j0VRUZg76/Xs5qPKskOSZ21x7cej2IjMbCv3dlnRlV4LcL8oir04Cd
b9dmtu+W40hU3MXBLYDxFclB/56Tkc+hxf5NfOzDQNKAzb1HnXn7pGQU7i+u
kvzU4k9G4onUpy6IfTeQO1GgUThiSvzICPzt/XNlbTd9yO0oW5vROse9SS2+
sUPtNizzwo5A23vZH27Dg7rfW7q7xWQoqgv0K282uZPPYsOtpJ6j0W7kVhwv
khgsAUIyGLtsz5jvpyw7bj1fpcpvU2HYxNBcqP2RY1U5mrqGRcspU45VAzC3
tX3R23fU0Xljz9Kpcm9MOcQafj52zVE9FNuy/cAa7P1h6LQ26aqxXlqpP+Sc
deg1332ZUDNqHHhdVF3SNWIUHpGMpEmnjK4P1Z3XwgXwtEdCkfWvR8Z1AZ8I
L494wsnbzpjD55eNq0rgi7rShBMzLpCq82xYursRchrT1t9NcSOVsD+zdlNZ
kTu5GcpfOhKprReTW8DVzzb2zuN1pBoG+0qmir284UKN+I5IEQLJhdaI2m4f
MgyyxJOq/r1+ZDgo2q5Ur3kgIbVQ2BmT5FXnT+6A3OasjohQKakDD6HOGnIv
kNwJ5uyXbepKGamHgK825Zg3y0kDVBw+dTZsUEHugsTS3Rp7RxA0eXy8V59t
BPW+4uSm40oSwDkmaqxMVpHR0G+9F+2jYCSHO66fLdpUjOQw15zRLg1mJAfp
5KRMqWEkh7S8mYXQKEZyeHxy5fO4PYzkEPypNLD8I0ZyiLQMD3hUMpLDixP1
ZWeqGcnhLU3QfI2dkRy+vhg80NzGSA6JV7SlPb2M5JCeMW+I7WMkh4K1l2b7
+hnJwR6vf+2Xm4zkcN8Jhj9HGfnkb4FwNn2ckRw8N/a0TjxgJIfwAxb/6WlG
cjC7iPrz5xnJ4ZXz14sXFxnJIdP8QdSxJUZyoH6RHP4DHQA44w==
       "]]},
     Annotation[#, "Charting`Private`Tag$13954#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1H1QE3Qcx3GYUCAoz+DmZGM/YjAc/AIc8ZD7KuzgSpB4qpMiQzCOhhBy
hIdiKEJaKvIgMdiVsEhcSucdaB61r7F4kCTOEDTERBIETHkGCVrUrz8+9/r3
/dfHJSkjOoVjZGQUsbp/PTQaMW0wEGTKYCTPcW5gmSBTBpHWvy9ceU6QKQNh
QOZKxgxBpgx+PFFq9mCEIFMGZl79zniTIFMG5dm7X/+4miBTBlrj/Rojf4JM
GZimhPlw3xEhcwvY3flJWXvGBZl+EN2q2uNxQ4hMX8h79qqyZFiAPyw4yzqm
fODqR6q0xp3OeC8ooqlf7AORpXHCv6v4KO6UWBt2vAxh6u8jw5/wUNOdKHbN
oVDffqBvfwIXmd6QWFju8Mt5J2RKIX/3mksWdo7I3AxGUoEu5Jg9MiXw26dV
xdrbtsh0B/7a1IbZ7TbIFMMHWySmA3wrbOZVHEk/9RLs8b9/vrXVAi9vzOgd
GiIgyQ007NOYoUOw+rB/tAjODcboD2wzxZ6nHg9bvhTCaIFDcNgGDjKd4VqF
u+Jx/Ipu8LVyUbaWB3Ts7qy3el73+axyqTLSCUKvDZivxE/qRIN/FuZ72kNm
Q+Oijd2w7u1xz3y93hri95Jztw526rqUrrEqbwto//nuCd+YDvn7bZpTVXMm
ECi9fjmqcljedmtrRGPqspyT43AvmTspXxRfOK1UPZO/aBlVkPR0Xl4iN4z3
c6/Ljz7oC8mqW5FbHkmw6jw5ovu2uigqf9oYcB9v+/POBV1GbbL1H/GmcD+0
U9hxkYOJaapNxQVm0NLrF7R+jTkefyMnwLfGAmzrnmTtfcUKTewrRg4vrQem
LfZ3HZsstLKBS5UWQ+YCR4zLS5KpWm3hwrxe6VfMRaXFhKh7lz3ccexT1DTx
UaBtO/vCuANsjT8pXdcrwLyrITFW1U7AdMHMemWzzJsLTIKWHP8kr0c8YLqi
Ij22QlLGB6YbbvhuU4bC1RmY7lia9ckZ2i8ApgdGF+2UqpuFoLH8YldguidK
EgrjNIdcILbZTBv+12bsGzGvLYsTwTc37ULFWi/sTnq0zVZAgElxyOTrxQoR
ASbF2frURq4bASZF7sQE30VKgEkxef/0gncQASbFpaOGixFvEmBSdPuKyzt+
mgCTYkDYQI9lGQEmxR1jNcUlZwkwKX4oFc5VqgkwKbY0ufXUawkwKUa3+Rbp
2wkwKaakzgWHdxFgUsxde2Wmq5sAk6I6MvC9X28TYFJ83AfBD4cJMFd7czkz
KaOrvf9Jcd1GfcPYOAEmRZ93w5ympggwKSqMzbuz5wgwKb5Vd6NwcZEAk2Ka
4rOgg8sEmPT/3yLApPgPJDA9Fg==
       "]]},
     Annotation[#, "Charting`Private`Tag$13954#3"]& ]}, {{{}, 
     {GrayLevel[0.4], AbsoluteThickness[0.5], 
      StyleBox[{{
         LineBox[{
          Scaled[{0.02, 0}, {10, 20.99999918367347}], 
           Offset[{3, 0}, Scaled[{0.02, 0}, {10, 20.99999918367347}]], 
           Offset[{7, 0}, Scaled[{0.02, 0}, {10, 20.999999178533404`}]], 
           Offset[{12, 0}, Scaled[{0.02, 0}, {10, 20.999999178533404`}]]}], 
         LineBox[{
          Scaled[{0.02, 0}, {10, 37.99999836734694}], 
           Offset[{3, 0}, Scaled[{0.02, 0}, {10, 37.99999836734694}]], 
           Offset[{7, 0}, Scaled[{0.02, 0}, {10, 37.99960468650754}]], 
           Offset[{12, 0}, Scaled[{0.02, 0}, {10, 37.99960468650754}]]}], 
         LineBox[{
          Scaled[{0.02, 0}, {10, -16.99999918367347}], 
           Offset[{3, 0}, Scaled[{0.02, 0}, {10, -16.99999918367347}]], 
           Offset[{7, 0}, Scaled[{0.02, 0}, {10, -16.99999918457844}]], 
           Offset[{12, 0}, Scaled[{0.02, 0}, {10, -16.99999918457844}]]}]}, {
         InsetBox[
          TagBox[
           RowBox[{
            RowBox[{"2", " ", "x"}], "+", "1"}],
           HoldForm], Offset[{15, 0}, 
          Scaled[{0.02, 0}, {10, 20.999999178533404}]], 
          ImageScaled[{0, 0.5}]], InsetBox[
          TagBox[
           RowBox[{
            RowBox[{"4", " ", "x"}], "-", "2"}],
           HoldForm], Offset[{15, 0}, 
          Scaled[{0.02, 0}, {10, 37.99960468650754}]], ImageScaled[{0, 0.5}]],
          InsetBox[
          TagBox[
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "x"}], "+", "3"}],
           HoldForm], Offset[{15, 0}, 
          Scaled[{0.02, 0}, {10, -16.99999918457844}]], 
          ImageScaled[{0, 0.5}]]}, {}, {}},
       FontColor->GrayLevel[0.4]]}}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 65}, {All, All}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-41.99999836734694, 37.99999836734694}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.734500762357285*^9, 3.734500789397403*^9}, 
   3.734500823997093*^9, {3.734500857073833*^9, 3.734500883322728*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.734265411729381*^9, 3.734426123691478*^9, 
  3.7344299354126263`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = 5, $CellContext`q$$ = 2, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`m$$], 5}, -10, 10}, {{
       Hold[$CellContext`q$$], 2}, -10, 10}}, Typeset`size$$ = {
    360., {115., 120.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`m$622$$ = 
    0, $CellContext`q$623$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`m$$ = 5, $CellContext`q$$ = 2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`m$$, $CellContext`m$622$$, 0], 
        Hold[$CellContext`q$$, $CellContext`q$623$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`m$$ $CellContext`x + $CellContext`q$$, \
{$CellContext`x, -3, 
         Plus[3]}, PlotRange -> 10], 
      "Specifications" :> {{{$CellContext`m$$, 5}, -10, 
         10}, {{$CellContext`q$$, 2}, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {175., 182.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7344260406347213`*^9}]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.734500951732555*^9, 3.734500960028581*^9}}],

Cell[CellGroupData[{

Cell["Comprensione guidata del parametro Q", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}}],

Cell[TextData[{
 "Partiamo cercando di capire cosa rappresenta il ",
 StyleBox["q",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " della formula nei grafici :"
}], "Text",
 CellChangeTimes->{{3.7345010630125484`*^9, 3.7345010883905134`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "*", "x"}], "+", " ", "q"}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", " ", 
       RowBox[{"+", "3"}]}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "zoom"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"2", "x"}], "+", "q"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", " ", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"zoom", ",", "10", ",", "1000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.734501161680472*^9, 3.7345011739527473`*^9}, {
  3.734501210780246*^9, 3.734501235434394*^9}, {3.7345012937893457`*^9, 
  3.7345013971899204`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q$$ = -6.199999999999999, \
$CellContext`zoom$$ = 10, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`q$$], -10, 10}, {
      Hold[$CellContext`zoom$$], 10, 1000}}, Typeset`size$$ = {
    360., {122., 128.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`q$52038$$ = 
    0, $CellContext`zoom$52039$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`q$$ = -10, $CellContext`zoom$$ = 10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`q$$, $CellContext`q$52038$$, 0], 
        Hold[$CellContext`zoom$$, $CellContext`zoom$52039$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[2 $CellContext`x + $CellContext`q$$, {$CellContext`x, -3, 
         Plus[3]}, PlotRange -> $CellContext`zoom$$, PlotLabel -> 
        2 $CellContext`x + $CellContext`q$$], 
      "Specifications" :> {{$CellContext`q$$, -10, 10}, {$CellContext`zoom$$, 
         10, 1000}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {182., 189.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7345011768120584`*^9, 3.734501239447301*^9, {3.734501305263352*^9, 
   3.7345013236675696`*^9}, 3.7345013584792557`*^9, 3.734501397705552*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EventHandler", "[", 
   RowBox[{
    RowBox[{"MouseAppearance", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Hai dubbi su come cambia il grafico quando cambia \!\(\*
StyleBox[\"q\",
FontWeight->\"Bold\",
FontSlant->\"Italic\"]\)?\>\"", ",", 
        RowBox[{"FontColor", "\[Rule]", "Blue"}]}], "]"}], ",", "LinkHand"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<MouseClicked\>\"", "\[RuleDelayed]", "  ", 
      RowBox[{
      "MessageDialog", "[", 
       "\"\<Il termine noto q indica l\[CloseCurlyQuote]ordinata del punto di \
intersezione del grafico con l\[CloseCurlyQuote]asse Y\>\"", "]"}]}], "}"}]}],
    "]"}], " "}]], "Input",
 CellChangeTimes->{{3.7345016626353645`*^9, 3.734501673818714*^9}, {
  3.734501998886305*^9, 3.734502208119441*^9}, {3.7345022506776333`*^9, 
  3.7345023266454487`*^9}, {3.734502390696959*^9, 3.734502418916597*^9}, {
  3.734502636711109*^9, 3.734502693697912*^9}, {3.734502733556945*^9, 
  3.734502750359337*^9}, {3.7345028078580184`*^9, 3.7345028416735263`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia \
\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontWeight->\\\"Bold\\\",\\nFontSlant->\\\"\
Italic\\\"]\\)?\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "Il termine noto q indica l\[CloseCurlyQuote]ordinata del punto di \
intersezione del grafico con l\[CloseCurlyQuote]asse Y"], Method -> 
    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
    True}]]], "Output",
 CellChangeTimes->{
  3.734502293057641*^9, 3.734502665103933*^9, 3.734502695993023*^9, {
   3.734502736373279*^9, 3.7345027541026945`*^9}, 3.7345028093861*^9, 
   3.7345028447817307`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione del caso particolare", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", " ", "=", " ", "0"}]], "Input",
 CellChangeTimes->{{3.73450411287928*^9, 3.7345041190967445`*^9}, {
  3.734506869717074*^9, 3.7345068727553315`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.7345044215601273`*^9, 3.7345047717802153`*^9, 3.7345063793696775`*^9, 
   3.7345068875207067`*^9, 3.734686955896422*^9, 3.7346873894163475`*^9, 
   3.7346878617441626`*^9, 3.7346879469301357`*^9, 3.734688514501978*^9, 
   3.7346886904279366`*^9, 3.734688818834793*^9, {3.7346898802004457`*^9, 
   3.734689895324075*^9}, {3.734702961788302*^9, 3.7347029715905333`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7345050052820034`*^9, 3.7346899116367083`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.734689906710699*^9, 3.734689906726299*^9}}],

Cell["\<\
Hai posto attenzione a cosa succede quando q = 0?
\
\>", "Text",
 CellChangeTimes->{{3.7345029675117826`*^9, 3.7345029797414255`*^9}, {
  3.7346883278264246`*^9, 3.7346883360782404`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7346883398740473`*^9, 3.7346883398740473`*^9}, 
   3.7346899161169157`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
        "\"\<AG_C1_G1\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
        "\"\<AG_C1_G1\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
    RowBox[{"Button", "[", 
     RowBox[{"\"\<No\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p1", "\[Equal]", " ", "0"}], ",", 
        RowBox[{
         RowBox[{"p1", "=", "1"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"2", "x"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "5"}], ",", 
              RowBox[{"+", "5"}]}], "}"}], ",", " ", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<y = 2 x + 0\>\""}]}], "]"}], 
          "]"}]}]}], "]"}]}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7345029885305758`*^9, 3.734503011150111*^9}, {
   3.7345030422233295`*^9, 3.7345031442374134`*^9}, {3.734503177721815*^9, 
   3.734503300349271*^9}, {3.7345033508342648`*^9, 3.734503388044582*^9}, {
   3.734504129326068*^9, 3.7345041970183425`*^9}, {3.7345042340631676`*^9, 
   3.7345042509149756`*^9}, {3.7345043086039963`*^9, 3.734504309072737*^9}, 
   3.7345043490496173`*^9, {3.734504383098099*^9, 3.7345044178440657`*^9}, {
   3.7345047324904203`*^9, 3.734504751402792*^9}, {3.734504812045418*^9, 
   3.7345048518122034`*^9}, {3.7345049018776445`*^9, 
   3.7345049206760445`*^9}, {3.7345049562809944`*^9, 
   3.7345049575466523`*^9}, {3.734505069910708*^9, 3.734505100876888*^9}, {
   3.734505135340006*^9, 3.7345051983900146`*^9}, {3.734505263803197*^9, 
   3.7345053055259595`*^9}, {3.7345057308107967`*^9, 3.7345057721089706`*^9}, 
   3.734506266121472*^9, {3.7345068755043697`*^9, 3.7345068855200253`*^9}, {
   3.7346869754592657`*^9, 3.734686976099867*^9}, {3.734687289634714*^9, 
   3.7346872958179283`*^9}, {3.7346873669956985`*^9, 3.734687373466313*^9}, {
   3.734688356002079*^9, 3.734688491861334*^9}, {3.7346886723811016`*^9, 
   3.734688673582304*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
          Automatic, Method -> "Preemptive"], StatusArea[#, "AG_C1_G1"]& , 
         TagBoxNote -> "AG_C1_G1"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
           Automatic, Method -> "Preemptive"], StatusArea[#, "AG_C1_G1"]& , 
          TagBoxNote -> "AG_C1_G1"], {"HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["tcc43_shm", 3, 1]], 50], "AG_C1_G1"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["tcc43_shm", 3, 1]], 50], "AG_C1_G1"}, "Hyperlink"]& ],
   "\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> 
    If[$CellContext`p1 == 0, $CellContext`p1 = 1; Print[
        Plot[2 $CellContext`x, {$CellContext`x, -5, 
          Plus[5]}, PlotLabel -> "y = 2 x + 0"]]], Appearance -> Automatic, 
    Evaluator -> Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.734689924741132*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1FtM02ccxvG2UqHQUdoXxGKlhdcQR1IxkklAzP/nWFMTBzIYaDQ6rbAQ
xgYT4zB4IiKoWzIF0XDohciYhGwsJioazf91MFFxzIwIc+zAxiwic+NUrQes
mv9z8eRz+1x9Y1zFWfkalUqV/mqv3TOaPuX3M6HIhad8nnfoOYNcZIT9+fjC
Ewa5sCWXzBZPM8jF90dqgoY9DHIRtGQwWvzIIBfHd2xZs7+RQS7a1aUtqiQG
udDmO5eZN5lgrGC//FDUfMwIY0RWV8O2N2+GQZso/39l0dERA7SKzs8aCjvW
hsJokVGTY3tRr4cW4XRfyVj9bzCMEq09uwZKN+qgWWyuPB7x05lAGCn2bpnz
bQibC+cJld0qpx0MgOHi18/rq9vvaKBJWIIL2mbeVkOj+OiteO2QxS8rGsS2
pD/OdHU9kxVDRHxZiv+TFp+sGCRO/Z7dvWuVV1bUitGKiFTn/ClZUSMu1S12
3M99KCvOykvH7s4kuD3wkfzOpSHdbO4wnJBL2jp8RtYPR+TcD/mpn3dfhDfk
nlt3jyRmd0qK16UU+9WzmSf74Yik2RnxW555GE5IgfrMCtd/HvhIOjA8kLb9
9EM4K33XWJW5d2oSqqm4OS/sn1yvpKilzYUNC6srfJJiEB1+b2dyYtMzSTGE
AsLrPPuevpAUQ2mw9+BEpUENjZRT7lre0KWBJioKGY/t2xAAw8nafu3E3Ada
GEHlnWnZhsZAGEklrUXnlyfooJn0miTXknvBMIocH79fF1+rhxaaf3FhsWNR
KIymmu2Hji0dNEArZVWttbvPh0EbxW+szGnZY4QxNODRNdfmmGAs9bnurTJZ
GeT0V8DXvrpYBjnNtBZ0mOMY5GQeH7fE2BnklFc69ThhBYOcnh7wf5O+jkFO
cV+Zow5/ySCnZOfQbX0tg5zeHWuqPnqCQU6f2m3ek24GOV0+F3e7tZ1BTlnX
Equ6exjklF/gTV3dyyCnsuAL0719DHJyZ6Rs7b/DIKf7A5T69wiDr/6Waabz
Rxnk9MaC7raxBwxyWvaBM3JykkFODrWub4eXQU7rT9+s9PkY5FTo+GLF7ucM
ckK/IKeXJCM64w==
       "]]},
     Annotation[#, "Charting`Private`Tag$33180#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"y = 2 x + 0\"", TraditionalForm],
  PlotRange->{{-5, 5}, {-9.999999591836735, 9.999999591836735}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.734702983323185*^9}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.7347029636727066`*^9, 3.7347029760935535`*^9}}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.73468993546076*^9, 3.734698469892069*^9}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.7346886973431716`*^9, 3.7346887672711515`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7346899283039384`*^9, 3.7346899283039384`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.7346898817146482`*^9, 3.734689900554287*^9}}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.734688826344805*^9, 3.7346891083556576`*^9}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.734688516566182*^9, 3.7346886683854947`*^9}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.734687951509945*^9, 3.734688475206703*^9}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.7346878641671667`*^9, 3.734687949601741*^9}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.7346873906977525`*^9, 3.734687397136365*^9}}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.7346872274461117`*^9, 3.7346873275206113`*^9}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.734686967317047*^9, 3.7346872195070944`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7346869654244432`*^9, 3.7346869654244432`*^9}}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.734506380998345*^9, 3.734686196911064*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Analisi guidata del coefficiente di primo grado", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}},
 CellTags->"AG_C1_G1"],

Cell["\<\
Ora abbiamo capito cosa vuol dire il termine noto sul grafico ma il \
coefficiente di primo grado m come si traduce sul grafico?\
\>", "Text",
 CellChangeTimes->{{3.734504552225568*^9, 3.7345045605891476`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"m", "*", "x"}], "+", 
      RowBox[{"-", "2"}]}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", " ", 
       RowBox[{"+", "3"}]}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "zoom"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"m", " ", "x"}], "-", "2"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", " ", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"zoom", ",", "10", ",", "1000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7345045914906626`*^9, 3.7345046146448374`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = 10., $CellContext`zoom$$ = 10., 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`m$$], -10, 10}, {
      Hold[$CellContext`zoom$$], 10, 1000}}, Typeset`size$$ = {
    360., {122., 128.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`m$89032$$ = 
    0, $CellContext`zoom$89033$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`m$$ = -10, $CellContext`zoom$$ = 10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`m$$, $CellContext`m$89032$$, 0], 
        Hold[$CellContext`zoom$$, $CellContext`zoom$89033$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`m$$ $CellContext`x - 2, {$CellContext`x, -3, 
         Plus[3]}, PlotRange -> $CellContext`zoom$$, 
        PlotLabel -> $CellContext`m$$ $CellContext`x - 2], 
      "Specifications" :> {{$CellContext`m$$, -10, 10}, {$CellContext`zoom$$, 
         10, 1000}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {182., 189.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7345046195198936`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EventHandler", "[", 
   RowBox[{
    RowBox[{"MouseAppearance", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Hai dubbi su come cambia il grafico quando cambia m?\
\[CloseCurlyDoubleQuote] \>\"", ",", 
        RowBox[{"FontColor", "\[Rule]", "Blue"}]}], "]"}], ",", "LinkHand"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<MouseClicked\>\"", "\[RuleDelayed]", "  ", 
      RowBox[{
      "MessageDialog", "[", 
       "\"\<Il coefficiente di primo grado indica \
l\[CloseCurlyQuote]inclinazione del grafico rispetto \
all\[CloseCurlyQuote]asse X\>\"", "]"}]}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.734506466452481*^9, 3.7345064958257895`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia m?\
\[CloseCurlyDoubleQuote] \"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "Il coefficiente di primo grado indica l\[CloseCurlyQuote]inclinazione \
del grafico rispetto all\[CloseCurlyQuote]asse X"], Method -> "Preemptive", 
    PassEventsDown -> Automatic, PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{3.7345064998864284`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione del caso particolare", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", "=", "0"}]], "Input",
 CellChangeTimes->{{3.734506896208644*^9, 3.734506898543149*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.734506899874256*^9, 3.734506992536625*^9, 
  3.7346899907788754`*^9}]
}, Open  ]],

Cell[TextData[{
 "Hai notato cosa cambia se ",
 StyleBox["m",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " < 0 o ",
 StyleBox["m",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " > 0?"
}], "Text",
 CellChangeTimes->{{3.734506649536941*^9, 3.734506671161417*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", "\"\<\\t\>\"", ",", 
    RowBox[{"Button", "[", 
     RowBox[{"\"\<No\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p2", " ", "\[Equal]", " ", "0"}], ",", 
        RowBox[{
         RowBox[{"p2", "=", "1"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "x"}], "+", "2"}], ",", 
              RowBox[{"x", "+", "2"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "5"}], ",", 
              RowBox[{"+", "5"}]}], "}"}], ",", " ", 
            RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
           "]"}], "]"}], ";", " ", 
         RowBox[{
         "Print", "[", 
          "\"\<Come puoi vedere i grafici formano con l\[CloseCurlyQuote]asse \
X angoli acuti se m>0 e ottusi se m<0\>\"", "]"}]}], ",", 
        RowBox[{"p2", "=", "1"}]}], "]"}]}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7345068076352158`*^9, 3.734506848009202*^9}, {
  3.734506903390159*^9, 3.734506908798191*^9}, {3.7345069573351603`*^9, 
  3.734506988873291*^9}}],

Cell[BoxData[
 TemplateBox[{
  ButtonBox[
   "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> Automatic,
     Method -> "Preemptive"],"\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> 
    If[$CellContext`p2 == 0, $CellContext`p2 = 1; Print[
        Plot[{-$CellContext`x + 2, $CellContext`x + 2}, {$CellContext`x, -5, 
          Plus[5]}, PlotLegends -> "Expressions"]]; 
      Print["Come puoi vedere i grafici formano con l\[CloseCurlyQuote]asse X \
angoli acuti se m>0 e ottusi se m<0"], $CellContext`p2 = 1], Appearance -> 
    Automatic, Evaluator -> Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.734506851435546*^9, 3.7345069097552867`*^9, 
  3.7345069896791353`*^9}],

Cell[CellGroupData[{

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.7346899942108817`*^9, 3.7346984844395323`*^9}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.7346899942108817`*^9, 3.7346984890903535`*^9}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.7346891283383017`*^9, 3.7346891309479074`*^9}}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.7346891283383017`*^9, 3.7346891344045134`*^9}}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.734506993764168*^9, 3.7346891200588856`*^9}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.734506993764168*^9, 3.734689123228092*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.734506614627508*^9, 3.7345066303487577`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione del caso particolare", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p3", "=", "0"}]], "Input",
 CellChangeTimes->{{3.734507153379222*^9, 3.734507154288039*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.734507154888624*^9, 3.7345072057710867`*^9, 
  3.7346900039144993`*^9}]
}, Open  ]],

Cell["Hai notato cosa succede se m = 0?", "Text",
 CellChangeTimes->{{3.7345070642719755`*^9, 3.734507089364261*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Button", "[", "\"\<Si\>\"", " ", "]"}], ",", "\"\<\\t\>\"", ",", 
    
    RowBox[{"Button", "[", 
     RowBox[{"\"\<No\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p3", " ", "\[Equal]", " ", "0"}], ",", 
        RowBox[{
         RowBox[{"p3", "=", "1"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"0", "x"}], "+", "1"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "5"}], ",", 
              RowBox[{"+", "5"}]}], "}"}], ",", " ", 
            RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
           "]"}], "]"}], ";", " ", 
         RowBox[{
         "Print", "[", 
          "\"\<Come puoi vedere il grafico \[EGrave] parallelo all'asse \
X\>\"", "]"}]}], ",", 
        RowBox[{"p3", "=", "1"}]}], "]"}]}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.734507111197999*^9, 3.734507112701412*^9}, {
  3.7345071435683517`*^9, 3.734507165341338*^9}, {3.7345071962081976`*^9, 
  3.7345072007563524`*^9}, {3.7346882819498606`*^9, 3.734688302109898*^9}}],

Cell[BoxData[
 TemplateBox[{
  ButtonBox[
   "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> Automatic,
     Method -> "Preemptive"],"\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> 
    If[$CellContext`p3 == 0, $CellContext`p3 = 1; Print[
        Plot[0 $CellContext`x + 1, {$CellContext`x, -5, 
          Plus[5]}, PlotLegends -> "Expressions"]]; 
      Print["Come puoi vedere il grafico \[EGrave] parallelo all'asse X"], \
$CellContext`p3 = 1], Appearance -> Automatic, Evaluator -> Automatic, Method -> 
    "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.734507167812174*^9, 3.734507203796135*^9}],

Cell[CellGroupData[{

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.7346900049773016`*^9, 3.7346984954831877`*^9}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.734690004992902*^9, 3.734698499308402*^9}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.734688311936316*^9, 3.7346891462317357`*^9}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.7346883119519157`*^9, 3.7346891497945423`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Caso particolare ",
 StyleBox["X",
  FontWeight->"Bold"],
 "=",
 StyleBox["k",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345073172201977`*^9, 3.7345073271699533`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p4", "=", "0"}]], "Input",
 CellChangeTimes->{{3.7345073634766054`*^9, 3.7345073644900017`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7345073656713867`*^9}]
}, Open  ]],

Cell["\<\
Prima di farti sperimentare liberamente bisogna riflettere su un caso unico \
delle rette non delle funzioni.
Pensa a quale possa essere e poi scopriamolo insieme.


Il caso delle rette verticali che sono della forma X=k con k che \[EGrave] un \
qualunque numero.\
\>", "Text",
 CellChangeTimes->{{3.7345074035608597`*^9, 3.734507428474025*^9}, {
  3.7345074742876225`*^9, 3.734507485146605*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"-", "10"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", 
          RowBox[{"+", "4"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", 
          RowBox[{"+", "4"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<x = \>\"", ",", 
        RowBox[{"ToString", "[", "k", "]"}]}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"-", "3.5"}], ",", "3.5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.734507514570382*^9, 3.7345075961520786`*^9}, {
   3.734582346171256*^9, 3.734582377141985*^9}, {3.734582416390339*^9, 
   3.734582416671611*^9}, {3.7345825612635975`*^9, 3.7345825642996535`*^9}, {
   3.734582704667713*^9, 3.73458270951155*^9}, 3.7345842987816615`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = -3.5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`k$$], -3.5, 3.5}}, Typeset`size$$ = {
    360., {120., 125.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`k$47133$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`k$$ = -3.5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$47133$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ListLinePlot[{{$CellContext`k$$, 10}, {$CellContext`k$$, -10}}, 
        PlotRange -> {{-4, 
           Plus[4]}, {-4, 
           Plus[4]}}, PlotLabel -> StringJoin["x = ", 
          ToString[$CellContext`k$$]]], 
      "Specifications" :> {{$CellContext`k$$, -3.5, 3.5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {166., 173.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.734507583093998*^9, 3.734507603249482*^9}, {
   3.734582409235715*^9, 3.7345824172184763`*^9}, 3.7345825869708166`*^9, 
   3.7345827228103247`*^9, 3.734584300040515*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Ora tocca a te!", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}}],

Cell["\<\
Inserisci tu le rette e osserva come sono rappresentate graficamente.Puoi \
confrontare contemporaneamente 5 equazioni\
\>", "Text",
 CellChangeTimes->{{3.734584475422347*^9, 3.734584492542039*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"freeEq", " ", "=", " ", 
  RowBox[{"{", "}"}]}]], "Input",
 CellChangeTimes->{{3.7345845701585894`*^9, 3.734584574994399*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.7345845771773443`*^9, 3.7345854308380914`*^9, 
  3.734586665585668*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"currentEq", " ", "=", "\"\<\>\""}]], "Input",
 CellChangeTimes->{{3.734584857448537*^9, 3.7345849042009277`*^9}, 
   3.7345850186656656`*^9, {3.734585118813517*^9, 3.7345851198601613`*^9}}],

Cell[BoxData["\<\"\"\>"], "Output",
 CellChangeTimes->{3.7345849052083883`*^9, 3.7345850209675007`*^9, 
  3.7345851219289083`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", "freeEq", "]"}]], "Input",
 CellChangeTimes->{{3.7345853538692427`*^9, 3.734585357806115*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`freeEq, StandardForm],
  ImageSizeCache->{42., {3., 9.}}]], "Output",
 CellChangeTimes->{3.734585358556283*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Panel", "[", 
  RowBox[{"Column", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "currentEq", "]"}], ",", "String"}], "]"}], 
        ",", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Confronta\>\"", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "freeEq", "]"}], "<", "5"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"freeEq", ",", 
              RowBox[{"ToExpression", "[", "currentEq", "]"}]}], "]"}], ",", 
            RowBox[{
            "MessageDialog", "[", 
             "\"\<Hai gi\[AGrave] inserito 5 grafici, eliminane uno prima di \
aggiungerne uno nuovo!\>\"", "]"}]}], "]"}]}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Dynamic", "[", 
      RowBox[{"Row", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", "=", "i"}], "}"}], ",", 
           RowBox[{"Column", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"freeEq", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", 
                  RowBox[{"-", "10"}], ",", 
                  RowBox[{"+", "10"}]}], "}"}], ",", 
                RowBox[{"PlotLabel", "\[Rule]", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"freeEq", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
                RowBox[{"ImageSize", "->", "Small"}]}], "]"}], ",", 
              "\"\<\\t\>\"", ",", 
              RowBox[{"Button", "[", 
               RowBox[{"\"\<Elimina\>\"", ",", 
                RowBox[{"freeEq", "=", 
                 RowBox[{"Delete", "[", 
                  RowBox[{"freeEq", ",", 
                   RowBox[{"Position", "[", 
                    RowBox[{"freeEq", ",", 
                    RowBox[{"freeEq", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
               "]"}]}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "freeEq", "]"}]}], "}"}]}], "]"}], "]"}], 
      "]"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.734584951884784*^9, 3.7345850128410425`*^9}, {
  3.7345851132292385`*^9, 3.7345851636351585`*^9}, {3.734585199782674*^9, 
  3.7345853225816307`*^9}, {3.7345854156036406`*^9, 3.7345854156973734`*^9}, {
  3.7345855715627775`*^9, 3.734585626903761*^9}, {3.734585774165642*^9, 
  3.734585813173481*^9}, {3.7345858895678377`*^9, 3.734585898401967*^9}, {
  3.7345859757360353`*^9, 3.734586001901822*^9}, {3.7345860476343837`*^9, 
  3.734586080791399*^9}, {3.734586306933238*^9, 3.734586340685607*^9}, {
  3.734586437509316*^9, 3.7345864543649907`*^9}, {3.7345885853640985`*^9, 
  3.734588620322151*^9}, {3.7345887586137147`*^9, 3.7345888022991247`*^9}, {
  3.7345888414401913`*^9, 3.7345888436347003`*^9}, {3.7345891346816206`*^9, 
  3.7345892176112394`*^9}}],

Cell[BoxData[
 PanelBox[
  TagBox[GridBox[{
     {
      TemplateBox[{InputFieldBox[
         Dynamic[$CellContext`currentEq], String],ButtonBox[
        "\"Confronta\"", ButtonFunction :> If[Length[$CellContext`freeEq] < 5, 
           AppendTo[$CellContext`freeEq, 
            ToExpression[$CellContext`currentEq]], 
           MessageDialog[
           "Hai gi\[AGrave] inserito 5 grafici, eliminane uno prima di \
aggiungerne uno nuovo!"]], Appearance -> Automatic, Evaluator -> Automatic, 
         Method -> "Preemptive"]},
       "RowDefault"]},
     {
      DynamicBox[ToBoxes[
        Row[
         Table[
          With[{$CellContext`i = $CellContext`i}, 
           Column[{
             Plot[
              Part[$CellContext`freeEq, $CellContext`i], {$CellContext`x, -10, 
               Plus[10]}, PlotLabel -> ToString[
                Part[$CellContext`freeEq, $CellContext`i]], ImageSize -> 
              Small], "\t", 
             Button[
             "Elimina", $CellContext`freeEq = Delete[$CellContext`freeEq, 
                Position[$CellContext`freeEq, 
                 
                 Part[$CellContext`freeEq, $CellContext`i]]]]}]], \
{$CellContext`i, 
           Length[$CellContext`freeEq]}]], StandardForm],
       ImageSizeCache->{4., {0., 0.}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"]]], "Output",
 CellChangeTimes->{
  3.7345850244944687`*^9, 3.734585115623805*^9, 3.7345851643822155`*^9, 
   3.7345853320751767`*^9, 3.7345855731232443`*^9, 3.7345858158194036`*^9, 
   3.734585899826618*^9, 3.7345860029000797`*^9, 3.7345860815093794`*^9, 
   3.7345864386663074`*^9, 3.7345864813633795`*^9, {3.7345885865726504`*^9, 
   3.7345886213844147`*^9}, {3.73458877988297*^9, 3.7345888025981936`*^9}, 
   3.7345888442906475`*^9, {3.7345891445175424`*^9, 3.734589219616856*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Esercizi", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}, {3.7346172310281005`*^9, 3.734617241201078*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teacherEQ", " ", "=", " ", 
  RowBox[{"{", "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Exercises", " ", "solutions", " ", "list"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.734613228348161*^9, 3.7346132328889046`*^9}, {
  3.7346621638467054`*^9, 3.734662186099323*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.7346893100778284`*^9, 3.7346894951708736`*^9, 3.7346900390743837`*^9, 
   3.734690189606385*^9, 3.7346902267142553`*^9, {3.734690256922512*^9, 
   3.7346902867921677`*^9}, {3.7346903270448465`*^9, 3.734690348278092*^9}, {
   3.7346903861417637`*^9, 3.734690402824995*^9}, 3.7347787276444216`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", "}"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"correctAnswer", " ", "=", " ", "0"}]}], "Input",
 CellChangeTimes->{{3.7346892640347333`*^9, 3.734689279640162*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.734689283452569*^9, 3.7346893101402283`*^9}, 
   3.7346894952332735`*^9, 3.7346900391211843`*^9, 3.734690189668785*^9, 
   3.7346902267766557`*^9, {3.7346902569849124`*^9, 3.734690286854568*^9}, {
   3.734690327091647*^9, 3.734690348324892*^9}, {3.7346903862041636`*^9, 
   3.734690402887395*^9}, 3.73470254344345*^9, 3.734778731499628*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.734689283452569*^9, 3.7346893101402283`*^9}, 
   3.7346894952332735`*^9, 3.7346900391211843`*^9, 3.734690189668785*^9, 
   3.7346902267766557`*^9, {3.7346902569849124`*^9, 3.734690286854568*^9}, {
   3.734690327091647*^9, 3.734690348324892*^9}, {3.7346903862041636`*^9, 
   3.734690402887395*^9}, 3.73470254344345*^9, 3.734778731499628*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teacherEQ", " ", "=", " ", 
  RowBox[{"ReadList", "[", "\"\<g1.txt\>\"", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Loading", " ", 
    RowBox[{"teacher", "'"}], "s", " ", "file"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.734612466947022*^9, 3.734612490831121*^9}, {
  3.734612554893758*^9, 3.734612626925626*^9}}],

Cell[BoxData[
 TemplateBox[{
  "ReadList","noopen",
   "\"Cannot open \\!\\(\\*RowBox[{\\\"\\\\\\\"g1.txt\\\\\\\"\\\"}]\\).\"",2,
   38,17,19016703545720453947,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7347793154724064`*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.7346125775875783`*^9, 3.7346126303553295`*^9, 3.7346134067318835`*^9, {
   3.7346165925415874`*^9, 3.7346166079652047`*^9}, 3.7346610949771194`*^9, 
   3.7346891758260136`*^9, 3.7346893101558285`*^9, 3.734689495264474*^9, 
   3.734690039152384*^9, 3.7346901896843853`*^9, 3.7346902267922554`*^9, {
   3.734690257000512*^9, 3.7346902868701677`*^9}, {3.7346903271228466`*^9, 
   3.734690348356092*^9}, {3.7346903862197638`*^9, 3.7346904029185953`*^9}, 
   3.7347787357292356`*^9, 3.7347791298434877`*^9, 3.7347793154724064`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "[", "teacherEQ", "]"}], "===", " ", "0"}], ",", " ", 
   RowBox[{"teacherEQ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "+", " ", "x"}], ",", " ", 
      RowBox[{"2", " ", "+", " ", 
       RowBox[{"2", "x"}]}], ",", " ", 
      RowBox[{"3", " ", "+", " ", 
       RowBox[{"3", "x"}]}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7347793278336287`*^9, 3.734779363531756*^9}, {
  3.734779440520208*^9, 3.7347794843309193`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", "x"}]}], ",", 
   RowBox[{"3", "+", 
    RowBox[{"3", " ", "x"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.734779493800136*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "teacherEQ", "]"}], "<", "3"}], ",", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "0"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{"3", "-", 
        RowBox[{"Length", "[", "teacherEQ", "]"}]}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"teacherEQ", ",", 
        RowBox[{
         RowBox[{"x", "*", 
          RowBox[{"RandomInteger", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10"}], ",", 
             RowBox[{"+", "10"}]}], "}"}], "]"}]}], "+", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "10"}], ",", 
            RowBox[{"+", "10"}]}], "}"}], "]"}]}]}], "]"}]}], "]"}]}], "]"}], 
  
  RowBox[{"(*", " ", 
   RowBox[{"Random", " ", "function", " ", 
    RowBox[{"generation", ":", " ", 
     RowBox[{
     "This", " ", "function", " ", "complete", " ", "the", " ", "excercises", 
      " ", "list", " ", "adding", " ", "Random", " ", "ones", " ", "till", 
      " ", "minimum", " ", "number", " ", "is", " ", "reached"}]}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7346129626861315`*^9, 3.734613057311979*^9}, {
  3.7346131246151805`*^9, 3.7346132039348726`*^9}, {3.734613239372233*^9, 
  3.7346132643425965`*^9}, {3.7346133852238584`*^9, 3.734613402122447*^9}, {
  3.734617279554321*^9, 3.734617372118123*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", "teacherEQ", "]"}]], "Input",
 CellChangeTimes->{{3.7346132087818155`*^9, 3.7346132211930084`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`teacherEQ, StandardForm],
  ImageSizeCache->{142., {2., 8.}}]], "Output",
 CellChangeTimes->{
  3.734613221818018*^9, 3.734616576933158*^9, 3.7346891758728137`*^9, 
   3.734689310202629*^9, 3.7346894952956743`*^9, 3.734690039183584*^9, 
   3.7346901897155857`*^9, 3.734690226823456*^9, {3.7346902570317125`*^9, 
   3.734690286901368*^9}, {3.734690327154047*^9, 3.734690348387292*^9}, {
   3.7346903862509637`*^9, 3.7346904029497952`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"exercises", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "teacherEQ", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"sol", ",", 
      RowBox[{"teacherEQ", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"Add", " ", "correct", " ", "answer"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"coeff", " ", "=", " ", 
     RowBox[{"CoefficientList", "[", 
      RowBox[{
       RowBox[{"teacherEQ", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Get", " ", "coefficients", " ", "from", " ", "expression", " ", "i"}], 
     " ", "*)"}], "\[IndentingNewLine]", " ", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"sol", ",", 
      RowBox[{
       RowBox[{"coeff", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "-", 
       RowBox[{"x", "*", 
        RowBox[{"coeff", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}]}], "]"}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Add", " ", "y"}], "=", 
      RowBox[{
       RowBox[{"-", "mx"}], "+", "q"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    
    RowBox[{"AppendTo", "[", 
     RowBox[{"sol", ",", 
      RowBox[{
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}], "+", 
       RowBox[{"x", "*", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}]}]}]}], "]"}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Add", " ", "y"}], "=", 
      RowBox[{
       RowBox[{"RND", " ", "x"}], " ", "+", " ", "RND"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"sol", ",", 
      RowBox[{
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}], "+", 
       RowBox[{"x", "*", 
        RowBox[{"coeff", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}]}], "]"}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Add", " ", "y"}], "=", 
      RowBox[{"mx", " ", "+", " ", "RND"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"exercises", ",", "sol"}], "]"}]}]}], 
  RowBox[{"(*", " ", 
   RowBox[{"Add", " ", "exercise", " ", "to", " ", "exercises", " ", "list"}],
    " ", "*)"}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.734615501085409*^9, 3.7346155242133646`*^9}, {
  3.7346157131822667`*^9, 3.734615734079298*^9}, {3.734615947394904*^9, 
  3.7346161731290784`*^9}, {3.7346162143715725`*^9, 3.7346163515353303`*^9}, {
  3.7346165403425136`*^9, 3.734616557822254*^9}, {3.734616657681099*^9, 
  3.7346167306306906`*^9}, {3.7346167776361113`*^9, 3.7346169107184687`*^9}, {
  3.7346169774087505`*^9, 3.734617168935135*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", "exercises", "]"}]], "Input",
 CellChangeTimes->{{3.7346163843193846`*^9, 3.734616384600638*^9}, {
  3.734616920118405*^9, 3.7346169473146863`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`exercises, StandardForm],
  ImageSizeCache->{621., {2., 8.}}]], "Output",
 CellChangeTimes->{
  3.734616673421238*^9, {3.7346167144698167`*^9, 3.7346167355230656`*^9}, {
   3.7346169229620657`*^9, 3.7346169481584487`*^9}, 3.734689175919614*^9, 
   3.7346893102338285`*^9, 3.734689495342474*^9, 3.7346900392147837`*^9, 
   3.7346901897467856`*^9, 3.7346902268546553`*^9, {3.7346902570629125`*^9, 
   3.7346902869325686`*^9}, {3.7346903271852465`*^9, 
   3.7346903484184923`*^9}, {3.734690386297764*^9, 3.734690402980995*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"eq", "=", " ", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{"teacherEQ", ",", " ", "1"}], "]"}], 
   RowBox[{"(*", " ", 
    RowBox[{
    "Choice", " ", "Random", " ", "Function", " ", "from", " ", "a", " ", 
     "list"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.734691761283162*^9, 3.7346917964892344`*^9}, {
  3.7347796594742956`*^9, 3.7347796758311253`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", "+", 
   RowBox[{"3", " ", "x"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7346934613518677`*^9, 3.734693729459626*^9, 
  3.734778911648585*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.734691975651702*^9, 3.734691978366107*^9}, {
  3.734693465263276*^9, 3.734693466559078*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"index", " ", "=", " ", 
  RowBox[{"Position", "[", 
   RowBox[{"teacherEQ", ",", " ", 
    RowBox[{"eq", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Get", " ", "Index", " ", "of", " ", "Function", " ", "from", " ", "a", 
    " ", "list", " ", "for", " ", "append", " ", "the", " ", "response"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.734691987489524*^9, 3.7346920188043823`*^9}, {
  3.7346920822574835`*^9, 3.734692097854313*^9}, {3.734692154088019*^9, 
  3.734692177885863*^9}, {3.7346922984155717`*^9, 3.7346923163530083`*^9}, {
  3.734779812579035*^9, 3.7347798408054843`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "2", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7346920047907557`*^9, 3.734692023545394*^9}, {
   3.7346920898238983`*^9, 3.7346921010075183`*^9}, {3.734692170242449*^9, 
   3.734692185435677*^9}, 3.7346955773285103`*^9, 3.7347789194525986`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ind", " ", "=", " ", 
  RowBox[{"index", " ", "[", 
   RowBox[{"[", "1", "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Get", " ", "Integer"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.734692745646536*^9, 3.734692754047351*^9}, {
  3.734694115127064*^9, 3.734694134184526*^9}, {3.73477984401909*^9, 
  3.734779853343708*^9}}],

Cell[BoxData[
 RowBox[{"{", "2", "}"}]], "Output",
 CellChangeTimes->{
  3.7346941387909355`*^9, {3.7346955694404616`*^9, 3.7346955812425356`*^9}, 
   3.734778923682206*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq2", "=", " ", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"teacherEQ", ",", " ", "1"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Choice", " ", "second", " ", "Random", " ", "function", " ", "from", " ", 
    "a", " ", "list"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.734693298523308*^9, 3.734693322146965*^9}, {
  3.734779855138711*^9, 3.7347798688697357`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", "+", "x"}], "}"}]], "Output",
 CellChangeTimes->{{3.7346933271819763`*^9, 3.7346933335217905`*^9}, {
   3.734693475214723*^9, 3.7346934817704115`*^9}, 3.734693738865679*^9, 
   3.734778927831814*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.734700403002747*^9, 3.7347004424360027`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.734700446009207*^9, 3.734700446021208*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7346933450732164`*^9, 3.7346934353900127`*^9}, {
   3.7346934933712325`*^9, 3.734693521827885*^9}, {3.7346937193267994`*^9, 
   3.7346937226540065`*^9}, 3.734694153584171*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7346941506021643`*^9, 3.7346941506177645`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"eq", " ", "\[Equal]", "  ", "eq2"}], ",", 
    RowBox[{
     RowBox[{"Print", "[", "eq2", "]"}], ";", " ", 
     RowBox[{"eq2", " ", "=", " ", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{"teacherEQ", ",", "1"}], "]"}]}]}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Control", " ", "that", " ", "two", " ", "function", " ", "is", " ", 
     "different"}], ",", " ", 
    RowBox[{
    "if", " ", "its", " ", "isn", " ", "t", " ", "loop", " ", "until", " ", 
     "it", " ", "is"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.734693646194651*^9, 3.7346937114697824`*^9}, {
  3.734779875829348*^9, 3.7347799305523686`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["eq2"], "Input",
 CellChangeTimes->{{3.7346937738569517`*^9, 3.7346937745619535`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5"}], "-", 
   RowBox[{"5", " ", "x"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7347004730677547`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "5"}], "-", 
    RowBox[{"5", " ", "x"}]}], "}"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.734693818365525*^9, 3.734693840613366*^9}, 
   3.73469387385343*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"index", " ", "=", " ", 
  RowBox[{"Position", "[", 
   RowBox[{"teacherEQ", ",", " ", 
    RowBox[{"eq2", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Get", " ", "Index", " ", "of", " ", "2", " ", "Function", " ", "from", 
    " ", "a", " ", "list", " ", "for", " ", "append", " ", "the", " ", 
    "response"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7347799362151785`*^9, 3.7347799589180202`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "1", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.734700484247394*^9, 3.7347789403086457`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ind2", " ", "=", " ", 
  RowBox[{"index", " ", "[", 
   RowBox[{"[", "1", "]"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Get", " ", "Integer", " ", "of", " ", "Index"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.7347005113369436`*^9, {3.734779962786827*^9, 3.73477997567645*^9}}],

Cell[BoxData[
 RowBox[{"{", "1", "}"}]], "Output",
 CellChangeTimes->{3.7347005157471952`*^9, 3.7347789463456583`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7346938802568426`*^9, 3.7346938802724423`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq3", "=", " ", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"teacherEQ", ",", " ", "1"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Choice", " ", "Random", " ", "Function", " ", "from", " ", "a", " ", 
    "list"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7346938915536633`*^9, 3.734693892053864*^9}, 
   3.734779982571662*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", "+", 
   RowBox[{"5", " ", "x"}]}], "}"}]], "Output",
 CellChangeTimes->{3.734693896358075*^9, 3.734778950446866*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq3", "\[Equal]", "  ", "eq2"}], " ", "||", " ", 
     RowBox[{"eq3", " ", "\[Equal]", " ", "eq"}]}], ",", 
    RowBox[{
     RowBox[{"Print", "[", "eq3", "]"}], ";", " ", 
     RowBox[{"eq3", " ", "=", " ", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{"teacherEQ", ",", "1"}], "]"}]}]}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Control", " ", "that", " ", "two", " ", "function", " ", "is", " ", 
     "different"}], ",", " ", 
    RowBox[{
    "if", " ", "its", " ", "isn", " ", "t", " ", "loop", " ", "until", " ", 
     "it", " ", "is"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7346939182569227`*^9, 3.7346939433635783`*^9}, 
   3.7347799931816807`*^9}],

Cell[CellGroupData[{

Cell[BoxData["eq3"], "Input",
 CellChangeTimes->{{3.734693961356415*^9, 3.734693964845023*^9}}],

Cell[BoxData["eq3"], "Output",
 CellChangeTimes->{3.7346939734842443`*^9, 3.7347788659972706`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"index", " ", "=", " ", 
  RowBox[{"Position", "[", 
   RowBox[{"teacherEQ", ",", " ", 
    RowBox[{"eq3", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Get", " ", "index", " ", "for", " ", "append", " ", "response"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.734700543681793*^9, 3.734700543847803*^9}, {
  3.734779996130086*^9, 3.7347800215505314`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "3", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7347005491931086`*^9, 3.7347788621084642`*^9, 
  3.7347789613572855`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ind3", " ", "=", " ", 
  RowBox[{"index", " ", "[", 
   RowBox[{"[", "1", "]"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Get", " ", "Integer"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7347005752696*^9, 3.7347005762866583`*^9}, {
  3.7347800390299635`*^9, 3.734780045862775*^9}}],

Cell[BoxData[
 RowBox[{"{", "3", "}"}]], "Output",
 CellChangeTimes->{3.7347005825300155`*^9, 3.7347789666300945`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"answer", " ", "=", " ", "0", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Flag", " ", "for", " ", "count", " ", "answer", " ", "and", " ", 
    "control", " ", "question"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.734694963326365*^9, 3.734694968509389*^9}, {
  3.734780050061183*^9, 3.7347800849850445`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.734694971949607*^9, 3.7346952558989334`*^9, 3.7346956590039835`*^9, 
   3.7346966866936703`*^9, 3.734698328999979*^9, 3.734698366683138*^9, 
   3.7347003200200005`*^9, 3.734700703298923*^9, 3.7347011346955976`*^9, 
   3.734701212816066*^9, 3.7347012856822333`*^9, 3.734701372824218*^9, 
   3.7347014851726437`*^9, 3.734701756371333*^9, 3.7347018595869927`*^9, 
   3.734702184376467*^9, 3.734702327800218*^9, 3.7347023933328857`*^9, 
   3.734702490604252*^9, {3.734702557752904*^9, 3.7347025800570774`*^9}, 
   3.734778970264901*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.734693876430434*^9, 3.7346938764460344`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s2", "=", "0", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"User", " ", "Variable", " ", "Response", " ", "2"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7347006200261602`*^9, 3.7347006234073534`*^9}, {
  3.734780090169659*^9, 3.734780103727083*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.734700632670883*^9, 3.7347011160745325`*^9, 
  3.7347023207659936`*^9, 3.734778973353707*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s3", "=", "0", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"User", " ", "Variable", " ", "Response", " ", "3"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.734700626357522*^9, 3.7347006294046965`*^9}, {
  3.7347801058798866`*^9, 3.7347801193779106`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7347006352050285`*^9, 3.734701118465669*^9, 
  3.7347023245498085`*^9, 3.734778980120532*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"s1", " ", "=", " ", "0"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"User", " ", "choise", " ", "variable"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"en1", " ", "=", " ", "True"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Form", " ", "enabling", " ", "variable"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Dynamic", " ", "Load", " ", "Plot", " ", "Function", " ", "Teacher", " ",
      "and", " ", "relative", " ", "Answer"}], ",", " ", 
    RowBox[{"switched", " ", "over", " ", "answer"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
   RowBox[{"If", " ", "[", 
    RowBox[{
     RowBox[{"answer", " ", "===", " ", "0"}], ",", 
     RowBox[{"Panel", "[", 
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
           RowBox[{
           "PlotLabel", "\[Rule]", 
            "\"\<A quale funzione corrisponde la seguente retta?\>\""}]}], 
          "]"}], 
         RowBox[{"RadioButtonBar", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", "s1", "]"}], ",", 
           RowBox[{"RandomSample", "[", 
            RowBox[{"exercises", "[", 
             RowBox[{"[", 
              RowBox[{"ind", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], "]"}]}],
         "}"}], "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"answer", "===", " ", "1"}], ",", 
        RowBox[{"Panel", "[", 
         RowBox[{"Column", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Plot", "[", 
             RowBox[{"eq2", ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
              RowBox[{
              "PlotLabel", "\[Rule]", 
               "\"\<A quale funzione corrisponde la seguente retta?\>\""}]}], 
             "]"}], ",", 
            RowBox[{"RadioButtonBar", "[", 
             RowBox[{
              RowBox[{"Dynamic", "[", "s2", "]"}], ",", 
              RowBox[{"RandomSample", "[", 
               RowBox[{"exercises", "[", 
                RowBox[{"[", 
                 RowBox[{"ind2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}], "}"}], "]"}], "]"}]}], "]"}], 
      RowBox[{"Panel", "[", 
       RowBox[{
        RowBox[{"Column", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{"eq3", ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
             RowBox[{
             "PlotLabel", "\[Rule]", 
              "\"\<A quale funzione corrisponde la seguente retta?\>\""}]}], 
            "]"}], ",", 
           RowBox[{"RadioButtonBar", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "s3", "]"}], ",", 
             RowBox[{"RandomSample", "[", 
              RowBox[{"exercises", "[", 
               RowBox[{"[", 
                RowBox[{"ind3", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
            "]"}]}], "}"}], "]"}], ",", " ", 
        RowBox[{"Enabled", "\[Rule]", 
         RowBox[{"Dynamic", "[", "en1", "]"}]}]}], "]"}]}]}], "]"}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.7346611184625745`*^9, 3.7346611812601566`*^9}, {
   3.7346612124323606`*^9, 3.7346612406201725`*^9}, {3.734661285855049*^9, 
   3.7346613219335737`*^9}, {3.734661462872631*^9, 3.7346614747946515`*^9}, {
   3.7346618812327127`*^9, 3.734662008982444*^9}, {3.7346621144448595`*^9, 
   3.7346621440788145`*^9}, {3.7346917353309107`*^9, 
   3.7346917567853537`*^9}, {3.734691787192217*^9, 3.734691789282621*^9}, {
   3.734691825189888*^9, 3.734691837054715*^9}, {3.7346922091719227`*^9, 
   3.734692211184326*^9}, {3.734692253040411*^9, 3.734692257478819*^9}, {
   3.7346925514400444`*^9, 3.734692551658445*^9}, 3.7346925850610304`*^9, {
   3.734692625591505*^9, 3.7346927414257264`*^9}, {3.7346927739723883`*^9, 
   3.7346927857284117`*^9}, {3.7347000454312954`*^9, 
   3.7347001803730135`*^9}, {3.7347002347881255`*^9, 3.734700291214353*^9}, {
   3.7347006006480513`*^9, 3.7347006166739683`*^9}, {3.7347006551841707`*^9, 
   3.7347006716981153`*^9}, {3.7347011807842336`*^9, 3.734701200990389*^9}, {
   3.7347013410524006`*^9, 3.7347013446776075`*^9}, {3.7347017349002*^9, 
   3.734701736422206*^9}, {3.73470195207436*^9, 3.7347020278598633`*^9}, {
   3.7347020684340897`*^9, 3.734702070845105*^9}, {3.7347021288524113`*^9, 
   3.734702178052848*^9}, {3.734778353061352*^9, 3.73477837399139*^9}, {
   3.7347788303297453`*^9, 3.7347788400399623`*^9}, {3.7347801230771174`*^9, 
   3.7347801611339855`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[$CellContext`answer === 0, 
    Panel[
     Column[{
      Plot[$CellContext`eq, {$CellContext`x, -10, 10}, ImageSize -> Large, 
         PlotLabel -> "A quale funzione corrisponde la seguente retta?"] 
       RadioButtonBar[
         Dynamic[$CellContext`s1], 
         RandomSample[
          Part[$CellContext`exercises, 
           Part[$CellContext`ind, 1]]]]}]], If[$CellContext`answer === 1, 
      Panel[
       Column[{
         Plot[$CellContext`eq2, {$CellContext`x, -10, 10}, ImageSize -> Large,
           PlotLabel -> "A quale funzione corrisponde la seguente retta?"], 
         RadioButtonBar[
          Dynamic[$CellContext`s2], 
          RandomSample[
           Part[$CellContext`exercises, 
            Part[$CellContext`ind2, 1]]]]}]]] Panel[
      Column[{
        Plot[$CellContext`eq3, {$CellContext`x, -10, 10}, ImageSize -> Large, 
         PlotLabel -> "A quale funzione corrisponde la seguente retta?"], 
        RadioButtonBar[
         Dynamic[$CellContext`s3], 
         RandomSample[
          Part[$CellContext`exercises, 
           Part[$CellContext`ind3, 1]]]]}], Enabled -> 
      Dynamic[$CellContext`en1]]], StandardForm],
  ImageSizeCache->{797., {197., 203.}}]], "Output",
 CellChangeTimes->{3.7346927903626204`*^9, 3.734695196040391*^9, 
  3.7346952604179544`*^9, 3.7346955271903763`*^9, 3.734695558288601*^9, 
  3.734695588827567*^9, 3.73469562773604*^9, 3.734695671995056*^9, 
  3.734697167466536*^9, 3.7346973056842113`*^9, 3.734697345200805*^9, 
  3.7346977567970047`*^9, 3.7346979365238495`*^9, 3.73469798633394*^9, 
  3.7346980475247707`*^9, 3.7346981683337984`*^9, 3.734698331842016*^9, 
  3.7346983767780757`*^9, 3.7347003286244926`*^9, 3.7347006789015274`*^9, 
  3.7347012167062883`*^9, 3.734701379600605*^9, 3.7347014938731413`*^9, 
  3.734701741186228*^9, 3.734701849495928*^9, 3.734702187377078*^9, 
  3.7347023360076513`*^9, 3.7347783783437977`*^9, 3.734778844722414*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Verifica\>\"", ",", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"answer", "===", "0"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"s1", " ", "===", " ", 
        RowBox[{"teacherEQ", "[", 
         RowBox[{"[", 
          RowBox[{"ind", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{
        RowBox[{"correctAnswer", "++"}], ";", " ", 
        RowBox[{"MessageDialog", "[", "\"\<Risposta corretta\>\"", "]"}], ";", 
        RowBox[{"answer", "++"}]}], ",", "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"s1", "===", " ", "0"}], ",", 
         RowBox[{
         "MessageDialog", "[", "\"\<Rispondi Prima di verificare\>\"", "]"}], 
         ",", " ", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{
          RowBox[{"answer", "++"}], ";", 
          RowBox[{"MessageDialog", "[", 
           RowBox[{
           "\"\<Risposta errata, la soluzione corretta \[EGrave] :\>\"", 
            RowBox[{"eq", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "\t", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"answer", "===", " ", "1"}], ",", "\[IndentingNewLine]", "\t", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"s2", " ", "===", " ", 
          RowBox[{"teacherEQ", "[", 
           RowBox[{"[", 
            RowBox[{"ind2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{
          RowBox[{"correctAnswer", "++"}], ";", " ", 
          RowBox[{"MessageDialog", "[", "\"\<Risposta corretta\>\"", "]"}], 
          ";", 
          RowBox[{"answer", "++"}]}], ",", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"s2", "===", " ", "0"}], ",", 
           RowBox[{
           "MessageDialog", "[", "\"\<Rispondi Prima di verificare\>\"", 
            "]"}], ",", " ", "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{"answer", "++"}], ";", 
            RowBox[{"MessageDialog", "[", 
             RowBox[{
             "\"\<Risposta errata, la soluzione corretta \[EGrave] :\>\"", 
              RowBox[{"eq2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", "\t", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"answer", "===", " ", "2"}], ",", "\[IndentingNewLine]", 
         "\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"s3", " ", "===", " ", 
            RowBox[{"teacherEQ", "[", 
             RowBox[{"[", 
              RowBox[{"ind3", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{"correctAnswer", "++"}], ";", " ", 
            RowBox[{"en1", "=", "False"}], ";", 
            RowBox[{"MessageDialog", "[", "\"\<Risposta corretta\>\"", "]"}], 
            ";", 
            RowBox[{"answer", "++"}]}], ",", "\[IndentingNewLine]", "\t\t\t", 
           
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"s3", "===", " ", "0"}], ",", 
             RowBox[{
             "MessageDialog", "[", "\"\<Rispondi Prima di verificare\>\"", 
              "]"}], ",", " ", "\[IndentingNewLine]", "\t\t\t", 
             RowBox[{
              RowBox[{"answer", "++"}], ";", 
              RowBox[{"en1", "=", "False"}], ";", 
              RowBox[{"MessageDialog", "[", 
               RowBox[{
               "\"\<Risposta errata, la soluzione corretta \[EGrave] :\>\"", 
                RowBox[{"eq3", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], "]"}]}], 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Button", " ", "that", " ", "checks", " ", "if", " ", "the", " ", "answer",
     " ", "is", " ", "correct", " ", "and", " ", "it", " ", "blocks", " ", 
    "user", " ", "interaction"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.734661336246232*^9, 3.7346614561850557`*^9}, 
   3.7346615509695773`*^9, {3.734661604290512*^9, 3.7346616296813993`*^9}, {
   3.734661841740336*^9, 3.734661844284423*^9}, {3.7346620539536695`*^9, 
   3.7346620912728653`*^9}, {3.7346892979671984`*^9, 3.734689301340804*^9}, {
   3.734689379346649*^9, 3.7346893802378507`*^9}, {3.7346894765080338`*^9, 
   3.7346894787086377`*^9}, 3.7346895120147047`*^9, {3.7346902745447454`*^9, 
   3.734690310112812*^9}, {3.7346903415908747`*^9, 3.734690342652676*^9}, {
   3.7346928270315037`*^9, 3.7346928308217115`*^9}, {3.7346928648296075`*^9, 
   3.7346928975481887`*^9}, {3.734695134492079*^9, 3.734695179061099*^9}, {
   3.7346954407682304`*^9, 3.734695464205047*^9}, {3.7346956147961645`*^9, 
   3.73469561993879*^9}, {3.734697108931396*^9, 3.7346971429748335`*^9}, {
   3.7346972684396133`*^9, 3.7346972874025*^9}, {3.734697375017769*^9, 
   3.734697480729909*^9}, {3.7346975215579014`*^9, 3.734697523442707*^9}, {
   3.7346982447683535`*^9, 3.734698304013359*^9}, {3.734700758614087*^9, 
   3.734700877887909*^9}, {3.734700911805849*^9, 3.7347009156410685`*^9}, {
   3.734700954573295*^9, 3.7347010577691975`*^9}, 3.7347012709323897`*^9, {
   3.734701442465201*^9, 3.7347014729879465`*^9}, {3.7347015091580153`*^9, 
   3.73470154157987*^9}, {3.7347018146006937`*^9, 3.734701834167819*^9}}],

Cell[BoxData[
 ButtonBox["\<\"Verifica\"\>",
  Appearance->Automatic,
  ButtonFunction:>If[$CellContext`answer === 0, 
    If[$CellContext`s1 === Part[$CellContext`teacherEQ, 
       Part[$CellContext`ind, 1]], Increment[$CellContext`correctAnswer]; 
     MessageDialog["Risposta corretta"]; Increment[$CellContext`answer], 
     If[$CellContext`s1 === 0, 
      MessageDialog["Rispondi Prima di verificare"], 
      Increment[$CellContext`answer]; 
      MessageDialog[
       "Risposta errata, la soluzione corretta \[EGrave] :" 
        Part[$CellContext`eq, 1]]]], 
    If[$CellContext`answer === 1, 
     If[$CellContext`s2 === Part[$CellContext`teacherEQ, 
        Part[$CellContext`ind2, 1]], Increment[$CellContext`correctAnswer]; 
      MessageDialog["Risposta corretta"]; Increment[$CellContext`answer], 
      If[$CellContext`s2 === 0, 
       MessageDialog["Rispondi Prima di verificare"], 
       Increment[$CellContext`answer]; 
       MessageDialog[
        "Risposta errata, la soluzione corretta \[EGrave] :" 
         Part[$CellContext`eq2, 1]]]], 
     If[$CellContext`answer === 2, 
      If[$CellContext`s3 === Part[$CellContext`teacherEQ, 
         Part[$CellContext`ind3, 1]], 
       Increment[$CellContext`correctAnswer]; $CellContext`en1 = False; 
       MessageDialog["Risposta corretta"]; Increment[$CellContext`answer], 
       If[$CellContext`s3 === 0, 
        MessageDialog["Rispondi Prima di verificare"], 
        Increment[$CellContext`answer]; $CellContext`en1 = False; 
        MessageDialog[
         "Risposta errata, la soluzione corretta \[EGrave] :" 
          Part[$CellContext`eq3, 1]]]]]]],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{3.7347015454390907`*^9, 3.734701873322075*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7347015252199345`*^9, 3.734701526945033*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", "answer", "]"}]], "Input",
 CellChangeTimes->{{3.734700300688895*^9, 3.73470030987442*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`answer, StandardForm],
  ImageSizeCache->{7., {0., 8.}}]], "Output",
 CellChangeTimes->{3.7347003136956387`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", "correctAnswer", "]"}]], "Input",
 CellChangeTimes->{{3.7347025164923573`*^9, 3.734702526429191*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`correctAnswer, StandardForm],
  ImageSizeCache->{7., {0., 8.}}]], "Output",
 CellChangeTimes->{3.7347025302722034`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Button", " ", "Hyperlink", " ", "control", " ", "if", " ", "all", " ", 
    "question", " ", "are", " ", "answer"}], ",", " ", 
   RowBox[{"else", " ", "block", " ", "user"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7347801814366217`*^9, 3.734780209841073*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"answer", "===", "  ", "3"}], ",", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Vai alla prossima sezione\>\"", "]"}], 
        ",", "\"\<RF_G1\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<RF_G1\>\""}],
        "}"}]}], "]"}], ",", " ", 
    "\"\<Rispondi e Verifica la risposta prima di passare alla prossima \
sezione\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7346967420957303`*^9, 3.7346967588950157`*^9}, {
   3.73469767419576*^9, 3.734697737120322*^9}, {3.7346978213097963`*^9, 
   3.7346978422941136`*^9}, {3.734697921733178*^9, 3.734697927363409*^9}, 
   3.7346980307122602`*^9, {3.734698146626672*^9, 3.734698185636639*^9}, {
   3.7346983076326*^9, 3.73469831888916*^9}, {3.7347007312495213`*^9, 
   3.734700732212577*^9}, {3.7347023770532074`*^9, 3.7347023778370113`*^9}, {
   3.734702440994263*^9, 3.734702472380178*^9}, {3.7347027855756793`*^9, 
   3.73470280855837*^9}, {3.734703015503701*^9, 3.734703036002659*^9}, {
   3.734716973991709*^9, 3.7347169856459303`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[$CellContext`answer === 3, 
    Hyperlink[
     StatusArea[
      Button["Vai alla prossima sezione"], "RF_G1"], {
      EvaluationNotebook[], "RF_G1"}], 
    "Rispondi e Verifica la risposta prima di passare alla prossima sezione"],
    StandardForm],
  ImageSizeCache->{490., {3., 9.}}]], "Output",
 CellChangeTimes->{3.734698064816067*^9, 3.7346981608734846`*^9, 
  3.7346981909589214`*^9, 3.7346983598472476`*^9, 3.7347024062595415`*^9, 
  3.734702445801684*^9, 3.734702477895997*^9, 3.734703040249074*^9, 
  3.734716989188136*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["\<\
Esercizi Riconoscimento Grafico

\
\>", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}, {3.7346172310281005`*^9, 3.734617241201078*^9}, {
   3.734715549853436*^9, 3.734715557123049*^9}, {3.7347158027609816`*^9, 
   3.7347158040557833`*^9}, {3.7347174480640416`*^9, 3.734717451559448*^9}},
 CellTags->"RF_G1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"enab", " ", "=", " ", "True"}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "Enable", " ", "Response", " ", "after", " ", "first", " ", "choice"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.734715806395788*^9, 3.734715810454795*^9}, {
  3.73471599659053*^9, 3.7347159973393316`*^9}, {3.734780220076691*^9, 
  3.7347802345741167`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ans", "=", "0", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"User", " ", "Variable", " ", "Choice"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7347802371793213`*^9, 3.7347802489613423`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.734717574870302*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s1", " ", "=", " ", "0"}]], "Input",
 CellChangeTimes->{{3.7347174546014533`*^9, 3.7347174546014533`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.734717457597658*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listFunction", " ", "=", " ", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"exercises", "[", 
    RowBox[{"[", 
     RowBox[{"ind", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Order", " ", "Random", " ", "the", " ", "list", " ", "of", " ", 
    "function"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7347802554197536`*^9, 3.7347802669571743`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", "-", 
    RowBox[{"2", " ", "x"}]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", "x"}]}], ",", 
   RowBox[{"10", "+", 
    RowBox[{"2", " ", "x"}]}], ",", 
   RowBox[{"5", "-", 
    RowBox[{"8", " ", "x"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7347175587092686`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{
   RowBox[{"CoefficientArrays", "[", 
    RowBox[{"listFunction", ",", 
     RowBox[{"{", "x", "}"}]}], "]"}], "\[LeftDoubleBracket]", "2", 
   "\[RightDoubleBracket]"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "2"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.734717915374049*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Plot", " ", "all", " ", "function", " ", "with", " ", "relative", " ", 
   "checkbox", " ", "for", " ", "answer", " ", "and", " ", 
   RowBox[{"append", " ", "'"}], 
   RowBox[{"label", "'"}], " ", "function"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7347802819216013`*^9, 3.7347803099150505`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Panel", "[", 
  RowBox[{"\"\<a quale grafico corrisponde la funzione\>\"", " ", "eq"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", " ", 
    RowBox[{"Length", "[", "listFunction", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"Print", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"listFunction", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
     RowBox[{"CheckboxBar", "[", 
      RowBox[{
       RowBox[{"Dynamic", "[", "s1", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"listFunction", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", "i"}], "}"}], ",", " ", 
       RowBox[{"Enabled", "\[Rule]", 
        RowBox[{"Dynamic", "[", "enab", "]"}]}]}], "]"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.734715943600622*^9, 3.7347159455906253`*^9}, {
  3.7347159758414936`*^9, 3.7347159930483236`*^9}, {3.734717916809252*^9, 
  3.734717919960457*^9}}],

Cell[BoxData[
 PanelBox[
  RowBox[{"{", 
   RowBox[{"\<\"a quale grafico corrisponde la funzione\"\>", " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"2", " ", "x"}]}], ")"}]}], "}"}]]], "Output",
 CellChangeTimes->{3.734717924016464*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   StyleBox[GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`s1, 2 - 2 $CellContext`x], 
         BoxForm`TogglerBarFunction[$CellContext`s1, 2 - 2 $CellContext`x]& ],
        
        DefaultBaseStyle->"CheckboxBar",
        Enabled->Dynamic[$CellContext`enab]], 
       StyleBox["1", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "Deploy"],
   CheckboxBar[
    Dynamic[$CellContext`s1], {2 - 2 $CellContext`x -> 1}, Enabled -> 
    Dynamic[$CellContext`enab]]], " ", 
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwt1P9T03UcwPFtMPb+gMBnA8cXEYYWB8ERnmg6kPer8xD8gjIERc+0UGlh
IGgZHXZEmIhAgu5UVFBMDDBgiZwE6PuNAUMlQ1s6v5B8h1tGICy+Q3Xvfnje
4z94usfsj9grEggEYf/2n+vW2qyecudo8RsZRTO5CgioPjyEXDlauD0o2fyE
Anzc/yiQO3P0dK5po1WOAmwmdONLZBzNmN497ZipgIclaRVqEUfVetjqn6aA
aGRyetyFqM+RyXn7khTwoe75kPZbRG90xycbVAo4ElxaGPsmoncuR26qkikg
ST8pO2UnoUw3uPee80CPnQVlusLM7TKt0klMmQuh+/pwnoozp0wXWF5koc+x
MqPMBRC46JFv1riQMp3AJcXmi2yjgDIdoe3CkujY9jmifuDoUzXoAL+oq/qX
1c0Q9Y2nI+fa5XDV6+GK8FtT5FeN2qXk9/ngd64t8cDdCeIYpl7xY489uPut
eia/Nkb4s67xWb/ZgbE2WGzxg4l82n5ZlG6QwYJ9dR98lj1Cvqlu1wY0S2H2
nqx4KGmYpO7NjBiv4eEgnhf50dggqXWzKLuRYgs1S3+mpmojeZEf2zG53Roq
pc1ah1t9xIB2G7J2WsFBZb5Z0P4uoixoFV58hwPl17tCB+JekI2dDrJaZwn8
pZ4+kXpMTwKd57rdFokhvfG8Eo/rSG7y5n7JnAge1wU2lplpya37q79XCoSw
y2fNTGReBVYWeGuN8lncGRodlVDYglv+LI3bY5jAo5W40jFAjy083y852GXC
z4pdE4bbXmC78qHQjDPDOCWhLjTqYhe2XJyZENVgxNGX3t56IacPh5NLKl1P
F47NuCt62WbE6q6no+n1evzTEW/v7PuDuK0qJGxVSBXeKe29Y79tGHfMV/lu
yGsiI0pdUOehEXz2ycq/uZvPSeV+64mYRBOuv72sJ6uhl5in9qXFaMYwP50v
Oa4aJGn5i9c6aCawaGnISV/PEbLePNWrMXMKn0azEcfsxkjF2njDYOkM3nHq
mbZ98xRZcY40PSiew4n+qVkF6+dIRcwjkPcJYEfTlTSfViGNVUR6vzsqhFYo
2fLVgBm93i2pXjMkgj0627icDjFdZy/2yBKag8bTcoPcDNFD6/yXlwnE8Eqj
/jhSaEnvlryOaJoUw0lVb/FxkxVVfzK5xc1SAm0Do+VB9jb0fLD/5GYJAiZP
y8q3nrlthYDJ05r5Kf5ePAImTx/3NiTMOiJg8pQ/uqm75C0ETJ4ebY5rnQlD
wOTpgZCiwu80CJg8TatsDJDlI2DyNNdhwHC4AAGTp+X9vnYRVxEweTqQUZ8x
fRMBk6c7W54kqp4jYPI03m/Kuv4lAiZPD591vebRg4DJ03z13t6pVwiYPNWj
kW1XZxEwedqdKB/jzThgSulrw0pNioQDppTaln75IJzngCmlrtIr++rsOWBK
qc/nOuThxAFTSgM6jcW5CzlgSun//wKmlP4DHLdIIw==
        "]]},
      Annotation[#, "Charting`Private`Tag$607852#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->
    NCache[{{-Pi, Pi}, {-4.283185050723043, 
      8.283185050723043}}, {{-3.141592653589793, 
     3.141592653589793}, {-4.283185050723043, 8.283185050723043}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Print",
 CellChangeTimes->{3.7347155890941305`*^9, 3.7347160044921446`*^9, 
  3.7347179241256647`*^9}],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   StyleBox[GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`s1, 2 + 2 $CellContext`x], 
         BoxForm`TogglerBarFunction[$CellContext`s1, 2 + 2 $CellContext`x]& ],
        
        DefaultBaseStyle->"CheckboxBar",
        Enabled->Dynamic[$CellContext`enab]], 
       StyleBox["2", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "Deploy"],
   CheckboxBar[
    Dynamic[$CellContext`s1], {2 + 2 $CellContext`x -> 2}, Enabled -> 
    Dynamic[$CellContext`enab]]], " ", 
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwt1P831XccwPHLdXl/Et3ry/Ul9FFLGae6m0zI+7VZraRVviydjr64ozvK
12YVHVOK0KplK31RilyUazUn61bv90q+3MLNkZxY5pIcOubbHa4u284+PzzP
4z94OkfEBUUa8ni8jf/2nwHrzf2nnRn6vyLqU5U6jJwYThF1dx68LLZnOEXU
fKpuUmLBcIroc3l6hcyQ4RTRMKS1a9MgTiHdU9cxXHkdcQppxprSgqjFiFNI
E1p1FmctTahGrl3sssScqsLt+3stjWme0kPdsGQu1T8sq/S2E1Dd4dDd3340
h/bcHjmzhTGitZE9i65bIOpZaNx60pRP935mJp9vY0x9F7Ysy5k0oAc+LwoX
j/CpQ4r54dwBHvX620Fn+8KAqi9JwqL+mCVXV0krn92bJc2yO29XKvWk4HlU
c0zyNLnh+txr84NpEhh8LeHqoQmy4oI6PrFhiuzyKOzu/XGMOK9Y/UpcPkEy
6Lhs+80hMnBvjcD4Fy2RD4qtbWv6yPwY5e7vcsdIe1iHmVLaSWZUFsXDCSPk
T4X7ljkL6kgSnhvyzcQQUSNfEn2iEld/3Ei1VQOElTx9v3TpC6wQ1VbaPOgj
1zqTCtTHNDjJO5/vF6ch9jmNk0edB7H3sZ3r+qM7iXS1uiNHNYL/kr0/lZbV
SrKeGnhRpRYfrbnojSfrSJf5NsmwgQ63KX1ryviV5JjsQEn2rB7vdF+rDzlT
gaWSgZLscR50rwsLjS2oxw5MuarRkg/jCqyw9WnF+sFmt1pzAbwqdoodUXfi
5NLM7b4eJpASq1wXekWD/e6GF5VtYiDs6vKtl072YXf1ObemtaYQldlg2KUe
wHcef50eJzODxxlubrlPh3DEo5+sayPnwQ7Rm0dW20awIitxd/ZNIYx51/l1
J4/hQ5elV+KVIlDEmU1FxGtx+93jqZJqCzBK60uPyJvAR/AYSFSWkJ6/aL1N
3hSmz84UmaqsYINRmmvNiWnscoRYaWqsoWL9vvahUj1+WeS5d6JVDF4XyJOm
4lns0NgV8bbFBioiWkDcx+O0hSg2xO3TcQNOO7jdY1K1dtiQ0x4CrAQuOQZG
nA6QHODhWcYTcDpCg3w06IlOwOkIsv26rxbMMeFcABfXeOiCTRA0LbTXl/JZ
KLu19dxDUwQv2so3dAlYqLZO8XAVIujMXn3BCrHQ9ub32BlbBIOjuz5Jm8uC
8PimHvmHCNDjkoQQaxaO10Y/029E4C9d2TfjwkLiF4UFJXkIfru+uTk4gIV0
RY2PRT4CulXjeCKQhdM2/e2plxHUm+7f+/BLFm69XWYZdANBW9I5xjWYhf7M
+5nv7yIY93/tP7OdhR31L+O3dCBY3htTLd/Hwr4V02b3uxB4ntcbv45jIfW8
U7lLLwK/wFOhloks5Msi30y/QxD46+3Rw8kstKKxbTdmEERnTLkHp7HQEy+e
EPIZSPTKSclKZ2G0fVVeigkDB985qB4cZWFe6fdNm4UMZIXAnqVZLDiJimKU
VgycQi1V4dksuB+sQy52DPx8X2p0NpcFn+6B4tOODBTEa4Pqf2CB+xcUf5BZ
qD/Nwj+aMz/Q
        "]]},
      Annotation[#, "Charting`Private`Tag$607892#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->
    NCache[{{-Pi, Pi}, {-4.283185050723043, 
      8.283185050723043}}, {{-3.141592653589793, 
     3.141592653589793}, {-4.283185050723043, 8.283185050723043}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Print",
 CellChangeTimes->{3.7347155890941305`*^9, 3.7347160044921446`*^9, 
  3.7347179241880646`*^9}],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   StyleBox[GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`s1, 10 + 2 $CellContext`x], 
         BoxForm`TogglerBarFunction[$CellContext`s1, 10 + 2 $CellContext`x]& ],
        DefaultBaseStyle->"CheckboxBar",
        Enabled->Dynamic[$CellContext`enab]], 
       StyleBox["3", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "Deploy"],
   CheckboxBar[
    Dynamic[$CellContext`s1], {10 + 2 $CellContext`x -> 3}, Enabled -> 
    Dynamic[$CellContext`enab]]], " ", 
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwt1Ps3lHkcwPFxGfM8NMMMuU1hyGgM+irZjHg+Tu6tIyK0xa4TSbk7NlFS
qk26a6Okyy5rpnXt2LTS86SR0g1NrUoXtyEJExajYXfP2R/e5/UfvHnRScEx
6jQaLeDf/tPfj7VujodTuxL6MvHbTHCtzx7HzHAq/5yW+eg9JtjxPl0yNMWp
iiaBtPMRE1izrTOOHJzqZyazSt4woaMitypOHaciq75ec5hjQjg2ZfKyF6M2
jC1+vFHEgu2tb8ZrfsGolSm+ZqUNLMjzEpfGWmPUTHpl88p6XUiRKTln9RnU
SSH9864RPWjbajrUr69FOV8bMOKOsEF1R1IjMqFTGh6hgS1yDvTVKU4H4ZrU
0gBWYtXf+uB8VUt2XEeDaoucFaZOGsBay06HYzNqlPStfUc6wxCWZLH2FgzT
qP48xYG0xUbQXuIYHvt2gSxyHHz+LdsYnsXdGFzdqCKL1vMXxViaQLmgY82G
pjnSfuf5vjCeKaAL7cmpD2fJobrzrd5cLvCQ22vD69Pk+PaeM+m2S2D4Ty+6
Vu0UecxyqyrbZilwdzb+8GPBBJnqbxkodTGD+TZO2XiKgsy9kFHJ8DGHNGJR
yI7pUZKze98LDs8CGlY9oabqh8mjEXIfD7EFVLPv1xg1yck2t0F863IepImK
NdyTesm6rgLCuI4HokNRvkPx3eTvjD1ZQS6WMBb39WTOTzIyxYXG2H3TEg5K
L4qImVaymyfUcgcreNm4VirRqCHZzLEQBWkFUXbeqpDTVUREgVJs6bYMenzD
QxNLHxA+zZLUCekymKwmqo1dZcSCciK/dp01vC4zS1S0dxORwz2Guk+sISux
0Tf0ci/xLMFIPLyRD+FXVoSVHJcTOpMD+Tc6+BB75KH6+/Zh4jOK+MDdbAP3
8oTCgkejRFFyzKGUVzYQyR5oNohQEOGet5DXpuUwIWp178mYIJqe1gY2vF0O
1UnM2ejkKWLku3V3jLcIQDNHnhtdOE3cvZx5xXhAALnFVn5GhbPE93LfTnqM
LazXzBFIj84R+nejtFN6baHKL6FrVKwidgVz/8iKF8KaC2TL07IF4oQ8qTbt
oxCqojvBUE6DMMcdFjppdhBrESL0mFSDVXqScxZKO6jrY9R7j6vDK8XBzVa7
7cHfgM4/pqYJ1vnqZ1toDpDh7+QsodHB1dqUG7rfAR5WfAluUdJhW0imOFrl
AHHpyk3m2gxwEu29rntoBVz0clJuZGCwnX18XqaGQFIZdv6ODgbxn16Ujakj
aFic5STQwyCxxSxAWxPBy4G7ifPGGGRk1lwktBDoHQ7sq7DFIK/n+RqJNoLD
9+MfqwIwuFZrmpajjyDV52rpb4UYdAdVDAqsEeRWS105xRh8ECpOePIRnDIa
6sq+hEE/XeQcZYOgctBBP7gcg0+3HuUVChAMHbl95OtNDJS8Md6CPYLIB38l
B73BwPjL6i0yZwQJaI55+z0G3Mf7NMa+QZBdZHad34+BeXmrBHdBUBwXMzA3
ggF/c8SsuysCGTYRUT6Pwerm7J/FBIK+ZMNpPQ0cXEpa3KSA4EuXS2EWA4e1
GayBdx4IdMX7n27Qw8HT9soqA08EZuxfdzYa4OCr+fG1gxcCu8xWjG+Cw/p3
jgf8vBG49gyXnVqKQ2DDHsE2HwT//wuCz9xr3+eL4B/Q8R5v
        "]]},
      Annotation[#, "Charting`Private`Tag$607934#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 3.716814949276957},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->
    NCache[{{-Pi, Pi}, {3.716814949276957, 
      16.28318505072304}}, {{-3.141592653589793, 3.141592653589793}, {
     3.716814949276957, 16.28318505072304}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Print",
 CellChangeTimes->{3.7347155890941305`*^9, 3.7347160044921446`*^9, 
  3.7347179242504644`*^9}],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   StyleBox[GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`s1, 5 - 8 $CellContext`x], 
         BoxForm`TogglerBarFunction[$CellContext`s1, 5 - 8 $CellContext`x]& ],
        
        DefaultBaseStyle->"CheckboxBar",
        Enabled->Dynamic[$CellContext`enab]], 
       StyleBox["4", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "Deploy"],
   CheckboxBar[
    Dynamic[$CellContext`s1], {5 - 8 $CellContext`x -> 4}, Enabled -> 
    Dynamic[$CellContext`enab]]], " ", 
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwt1PlTlHUcwPGFZeH7gFwLLQsKtDEgtITgsxIusM+nMRRICgEBm8KJlDaM
wzObhSHKoAYorJ3hUDAnIY4RNoVJQX0+EbhgRGhIJBj3MVsRh8SxgtV8++E9
r//gLUvOiDlsKhAIov7tPyMjbHYZZQxSVRDcnDVH3BikqsBX9nuFxIVBqgps
VvUrAWIGqSq4W5PboDZlkKqCRLLk3D9GkBoKb+kH53RfEaSGwpmw2soUT4LU
UDjatyb+wsECqSFw53WXmQkHc6QGw/qtOp3SWYRUJYxfmT+7jzFD6k4IvGje
V2QlRGoQhDxzz69gxQSpgbBFY5NdaBAgdQf0ng9ITHn4hFf3SH2vzirgJ/XV
6R2t67y66dfF8ocsVPvcDYq+aeR/1qq31Py2HfzLezOPda3y0ih10PWJAJD5
hz6Q1C/zdqVuaQX3/cHQEiYy/2aJp26DzUda33i3cJGnPgcbd8RVc0fneaoc
jnOb4t5enuVb3M3rmjQ+cI39EZeaDfxQWcrI2qtbodH+ts7p5hQ/QN4cKEjy
hOPKMqEqY4xXVnSbXHjeA5QfHQyfSR3iXx51Ere4yOAv9ePPcj7u408rNvTc
i27wYfs5Jbei52Xz1T22G87Q3xrSXifU8ZqS/MSTAgkc9N29Hne2gVNWyHUG
iRhGwxP3p1d2csWDsfc7dVbwqJFrlAb3cZuiMXq6XQgPqtzS53uHuL1NbR6u
SX9zmvTW8P0XxrhoacSJest+LvHLbQnni6Y4NM2+PvbOBJ+S32U63GvgSl29
rLJ2Gfnvz8jlhT/McnlMQry0RIRJ9pNtjgfmudNhWqvYQ9a4qNSrRk8tclMn
P81u+1OMjRnWq8mZS1zSsMtCx4gEzXKmcpO1yxzZ6BZ2eG/G3DKPCCftKmfK
7vncz9sdXzLL8Wn/xMhRZdgQkTYwW7vOUT0wqJzv6Kl6wlE9sSH5HkimBPBa
x6Vc3+6tmPJ0nPyFRybQDTXxH8z44JVxi+bdc6ZwSG+bWjQix0hHkVeBiRlo
vS33SoR+eCpSEVgnEAHVH7tqFmI61kRA9Uf1ibV4d0sLoG7Hc2GKtVgLAlQW
6y4nlNyyIkBl8dpTGoWPHQEqi/2T36VvSAlQWbTLe2W85lkCVBbzbqd2r0cR
oLJ4bM/Fyq+1BKgs5ja2B4vLCFBZLHaaGciqIEBl8fK0n0NMNQEqizP5N/If
f0uAymJS5y+Z+wYJUFlM8zda3xgmQGUxq9St3muCAJXFMvXhSeMfBKgs9pHF
A9UbBKgsjmdKlu2EDFAVuDCwU6uxYICqQNva93ui7RigKtDN/tKRVkcGqAr0
fU9PvJwZoCoweNRQVezKAFXx/7cYoCrwH7lvQUQ=
        "]]},
      Annotation[#, "Charting`Private`Tag$607978#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->
    NCache[{{-Pi, Pi}, {-20.132740202892172`, 
      30.132740202892172`}}, {{-3.141592653589793, 
     3.141592653589793}, {-20.132740202892172`, 30.132740202892172`}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Print",
 CellChangeTimes->{3.7347155890941305`*^9, 3.7347160044921446`*^9, 
  3.734717924312865*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Verifica\>\"", ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"s1", " ", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "===", " ", 
      RowBox[{"teacherEQ", "[", 
       RowBox[{"[", 
        RowBox[{"ind", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\t\t\t", 
     RowBox[{
      RowBox[{"enab", " ", "=", " ", "False"}], ";", " ", 
      RowBox[{"correctAnswer", "++"}], ";", " ", 
      RowBox[{"MessageDialog", "[", "\"\<Risposta corretta\>\"", "]"}], ";", 
      RowBox[{"ans", "++"}]}], ",", "\[IndentingNewLine]", "\t\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"s1", "===", " ", "0"}], ",", 
       RowBox[{
       "MessageDialog", "[", "\"\<Rispondi Prima di verificare\>\"", "]"}], 
       ",", " ", "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{
        RowBox[{"ans", "++"}], ";", 
        RowBox[{"enab", "=", " ", "False"}], ";", 
        RowBox[{"MessageDialog", "[", 
         RowBox[{"\"\<Risposta errata, la soluzione corretta \[EGrave] :\>\"", 
          RowBox[{"eq", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "\t", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7347156208514023`*^9, 3.7347156276238146`*^9}, 
   3.734715674509716*^9, {3.734715789235758*^9, 3.7347157958189692`*^9}, {
   3.734716050348453*^9, 3.734716066185481*^9}}],

Cell[BoxData[
 ButtonBox["\<\"Verifica\"\>",
  Appearance->Automatic,
  ButtonFunction:>If[Part[$CellContext`s1, 1] === Part[$CellContext`teacherEQ, 
      Part[$CellContext`ind, 1]], $CellContext`enab = False; 
    Increment[$CellContext`correctAnswer]; MessageDialog["Risposta corretta"]; 
    Increment[$CellContext`ans], 
    If[$CellContext`s1 === 0, 
     MessageDialog["Rispondi Prima di verificare"], 
     Increment[$CellContext`ans]; $CellContext`enab = False; 
     MessageDialog[
      "Risposta errata, la soluzione corretta \[EGrave] :" 
       Part[$CellContext`eq, 1]]]],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.7347156343826265`*^9, {3.7347156680357046`*^9, 3.7347156777545223`*^9}, 
   3.734716015096982*^9, 3.7347161344242425`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Button", " ", "Verify", " ", "Response"}], ",", " ", 
   RowBox[{"if", " ", "not", " ", "insert", " ", "alert"}], ",", " ", 
   RowBox[{
   "else", " ", "say", " ", "if", " ", "it", " ", "is", " ", "corret", " ", 
    "or", " ", "wrong"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7347803264238796`*^9, 3.734780354171729*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dynamic", "[", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"ans", " ", ">=", "  ", "1"}], ",", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Vai alla prossima sezione\>\"", "]"}], 
        ",", "\"\<RF_G1_1\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
        "\"\<RF_G1_1\>\""}], "}"}]}], "]"}], ",", " ", 
    "\"\<Rispondi e Verifica la risposta prima di passare alla prossima \
sezione\>\""}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Button", " ", "Verify", " ", "Response"}], ",", " ", 
    RowBox[{"if", " ", "not", " ", "insert", " ", "block", " ", "user"}], ",",
     " ", 
    RowBox[{"else", " ", "button", " ", "with", " ", "hyperlink"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.73471571933241*^9, 3.7347157315658317`*^9}, {
  3.734716629750797*^9, 3.734716649681032*^9}, {3.7347175203379946`*^9, 
  3.734717527889408*^9}, {3.7347803723727627`*^9, 3.734780395124603*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[$CellContext`ans >= 1, 
    Hyperlink[
     StatusArea[
      Button["Vai alla prossima sezione"], "RF_G1_1"], {
      EvaluationNotebook[], "RF_G1_1"}], 
    "Rispondi e Verifica la risposta prima di passare alla prossima sezione"],
    StandardForm],
  ImageSizeCache->{726., {8., 17.}}]], "Output",
 CellChangeTimes->{{3.7347157263992224`*^9, 3.7347157350008373`*^9}, 
   3.7347166542050405`*^9, 3.734717533817418*^9, 3.7347176894019747`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"Esercizio", " ", "Riconoscere", " ", "Grafico", " ", "2"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}], "Section"]], "Input",
 CellChangeTimes->{{3.7347161562690873`*^9, 3.734716156955488*^9}, {
  3.7347161896075525`*^9, 3.734716199934771*^9}, {3.7347162323284283`*^9, 
  3.7347162363688354`*^9}, {3.7347162898855467`*^9, 3.7347163600068808`*^9}},
 CellTags->"RF_G1_1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"enab2", " ", "=", " ", "True"}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Enable", " ", "Response", " ", "after", " ", "first", " ", "Choise"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.7347163772431307`*^9, {3.7347804027062163`*^9, 3.7347804169414415`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s2", " ", "=", "0", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"User", " ", "Choice", " ", "Variable"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7347804206698484`*^9, 3.7347804328274727`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.734717721577439*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Order", " ", "Random", " ", "List", " ", "Function"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7347804418658886`*^9, 3.734780447095299*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listFunction2", " ", "=", " ", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"exercises", "[", 
    RowBox[{"[", 
     RowBox[{"ind2", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "5"}], "-", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    RowBox[{"-", "5"}], "+", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{"6", "-", 
    RowBox[{"5", " ", "x"}]}], ",", 
   RowBox[{
    RowBox[{"-", "9"}], "+", 
    RowBox[{"2", " ", "x"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7347175998685637`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7347804582215195`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Plot", " ", "all", " ", "function", " ", "of", " ", "list", " ", "with", 
    " ", "relative", " ", "checkbox", " ", "to", " ", "select"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Panel", "[", 
    RowBox[{"\"\<a quale grafico corrisponde la funzione\>\"", " ", "eq2"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", "listFunction2", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"listFunction2", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
       RowBox[{"CheckboxBar", "[", 
        RowBox[{
         RowBox[{"Dynamic", "[", "s2", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"listFunction2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", "i"}], "}"}], ",", " ", 
         RowBox[{"Enabled", "\[Rule]", 
          RowBox[{"Dynamic", "[", "enab2", "]"}]}]}], "]"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.734716401018383*^9, 3.7347164149688077`*^9}, {
  3.734717843335907*^9, 3.734717874151763*^9}, {3.734780461325925*^9, 
  3.734780477633954*^9}}],

Cell[BoxData[
 PanelBox[
  RowBox[{"{", 
   RowBox[{"\<\"a quale grafico corrisponde la funzione\"\>", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "5"}], "-", 
      RowBox[{"5", " ", "x"}]}], ")"}]}], "}"}]]], "Output",
 CellChangeTimes->{3.7347178777241697`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   StyleBox[GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`s2, -5 - 5 $CellContext`x], 
         BoxForm`TogglerBarFunction[$CellContext`s2, -5 - 5 $CellContext`x]& ],
        DefaultBaseStyle->"CheckboxBar",
        Enabled->Dynamic[$CellContext`enab2]], 
       StyleBox["1", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "Deploy"],
   CheckboxBar[
    Dynamic[$CellContext`s2], {-5 - 5 $CellContext`x -> 1}, Enabled -> 
    Dynamic[$CellContext`enab2]]], " ", 
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAASkkOQ/shCcCc29ETemolQDu1fPAI
HgnAiuKbLItlJUAsIeudFhoJwHfpZUWcYCVADvnH+DESCcBS9/l2vlYlQNGo
ga5oAgnABRMi2gJDJUBYCPUZ1uIIwG5KcqCLGyVAZ8fb8LCjCMBBuRItncwk
QIRFqZ5mJQjA5ZZTRsAuJEBx1PoSkxMHwI2Judd32CJAyl0a6OQTBsA89SAi
3pghQP2+qrA6GQXAvG7VXIlfIEDjsvGRUQkEwDg/3OxLFx5ANqEG1I0LA8AI
kxCS4pwbQDwi0i6L+AHAllUN9VvtGEAcew59jOoAwMYzpDhfShZA0JwxWGbd
/78EBD7uv9QTQM9os+c1u/2/AkOgYQMqEUCmKdE4UL37vyDoCo5IWQ1AMJrQ
cHLJ+b94gQkanncIQCEwPdoWq/e/UviYIbkrA0DqukUFBrH1v5CmXBoedfw/
G2u7YXeM87+IF6noVL7xP/7KEqXwcfG/4Nt35czm3D9zPwxUaffuvwALC2/F
q8S/uDPNwPW16r9o/f07M3Lqv68RxrAXvea/ytMQxkQn979zOpkDPm/iv/B2
gHvy9ADAOoVfSOhq3L+8TMTSLj0GwO9o/I9/iNS/aj4CRrAqC8CDxJs6P/jH
v0yp1x42QRDA1rs8xKoDsL9TQauotr8SwF8sRv1Uka4/vL3kUa0xFcDhSFhV
bp7IP2PLVT3B2BfA9K8/rxg71D/85sO2d1IawNqlHm7x0Nw/1JNpcksBHcB7
brtIVZ/iPw0ldU2Vox/AWKAvV5yN5j8c4j7bQAwhwGaHyQLf0Oo/UPresEVh
IsDDhCsrjMvuP32Zfc2bnyPAXhHlwhRZ8T/bKs/5rNckwPM6xz7hdvM/2IQ8
x0wqJsCvbw35YnD1P85lqNs9ZifABH/mgWKU9z9iDzCRvbwowIGZI0kXlPk/
8D+2jY78KcBLBH8pxIn7P69i75kaNivArklt2O6p/T8NTkRHNYoswDiav8XO
pf8/Y8CXO6HHLcCuYtJAFuYAQFr7BtGbHy/AZiBUK0H0AUBAlBS7qDgwwLLj
B7VG8AJAT+4kMSzWMMBKFAUmiwEEQK4sw/f2gDHAdko0NqoABUCKruBhaiAy
wMmo8lLF+gVAfqnXU7u8MsBodPpWHwoHQMGIXJZTZjPAm0U0+lMHCECBq2B8
lAQ0wKqtV5e+CwhAisyWHlcHNMC4FXs0KRAIQJPtzMAZCjTA1uXBbv4YCECm
LzkFnw80wBCGT+OoKghAyrMRjqkaNMCGxmrM/U0IQBS8wp++MDTAckehnqeU
CECnzCTD6Fw0wIGvxDsSmQhAsO1aZatfNMCQF+jYfJ0IQLoOkQduYjTArecu
E1KmCEDMUP1L82c0wOiHvIf8twhA8dTV1P1yNMBeyNdwUdsIQDvdhuYSiTTA
bTD7DbzfCEBE/ryI1Ys0wHyYHqsm5AhATh/zKpiONMCZaGXl++wIQGBhX28d
lDTA1AjzWab+CECE5Tf4J580wONwFvcQAwlAjgZumuqhNMDy2DmUewcJQJcn
pDytpDTAD6mAzlAQCUCqaRCBMqo0wB4RpGu7FAlAs4pGI/WsNMAseccIJhkJ
QLyrfMW3rzTAO+HqpZAdCUDFzLJnerI0wEpJDkP7IQlAzu3oCT21NMB9U065

        "]]},
      Annotation[#, "Charting`Private`Tag$606684#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->
    NCache[{{-Pi, Pi}, {-20.707962626807607`, 
      10.707962626807607`}}, {{-3.141592653589793, 
     3.141592653589793}, {-20.707962626807607`, 10.707962626807607`}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Print",
 CellChangeTimes->{3.734716419290015*^9, 3.73471787789577*^9}],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   StyleBox[GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`s2, -5 + 5 $CellContext`x], 
         BoxForm`TogglerBarFunction[$CellContext`s2, -5 + 5 $CellContext`x]& ],
        DefaultBaseStyle->"CheckboxBar",
        Enabled->Dynamic[$CellContext`enab2]], 
       StyleBox["2", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "Deploy"],
   CheckboxBar[
    Dynamic[$CellContext`s2], {-5 + 5 $CellContext`x -> 2}, Enabled -> 
    Dynamic[$CellContext`enab2]]], " ", 
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAASkkOQ/shCcDO7egJPbU0wDu1fPAI
HgnARfFNlsWyNMAsIeudFhoJwLz0siJOsDTADvnH+DESCcCp+3w7X6s0wNGo
ga5oAgnAggkRbYGhNMBYCPUZ1uIIwDclOdDFjTTAZ8fb8LCjCMCgXImWTmY0
wIRFqZ5mJQjAcsspI2AXNMBx1PoSkxMHwMbE3Os7bDPAyl0a6OQTBsCeehAR
b8wywP2+qrA6GQXAXrdqrsQvMsDjsvGRUQkEwM4PN/vShTHANqEG1I0LA8DC
JISkOOcwwDwi0i6L+AHAZlVD/VY7MMAcew59jOoAwOMZUpwvJS/A0JwxWGbd
/78CAh/3X+otwM9os+c1u/2/gSHQsAGVLMCmKdE4UL37vwi6giNSVivAMJrQ
cHLJ+b9eYIKG5x0qwCEwPdoWq/e/FD5mSO7KKMDqukUFBrH1v9KUS8OjjifA
G2u7YXeM87/xIhWdyjcmwP7KEqXwcfG/374rZzbnJMBzPwxUaffuv9TTQ+pQ
rSPAuDPNwPW16r8qIEDM3FgiwK8RxrAXvea/h+U9ZxcbIcBzOpkDPm/iv4jE
P8KGhR/AOoVfSOhq3L+i2Z2WaOEcwO9o/I9/iNS/y+D+3KdqGsCDxJs6P/jH
v7RWKOHJvhfA1rs8xKoDsL+tvlRXSUAVwF8sRv1Uka4/REIbrlLOEsDhSFhV
bp7IP500qsI+JxDA9K8/rxg71D8IMniSEFsLwNqlHm7x0Nw/WNgsG2n9BcB7
brtIVZ/iP+a1FWXVuADAWKAvV5yN5j8k7wgm+Z33v2aHyQLf0Oo/AFsQ8qTr
6b/DhCsrjMvuP8CgmaAMGci/XhHlwhRZ8T9gW+U5n/XaP/M6xz7hdvM/wCbk
OWZS8T+vbw35YnD1P2wuQ93uMfs/BH/mgWKU9z+KPcBE9vICQIGZI0kXlPk/
wv/YNjryB0BLBH8pxIn7P7yKvWdq2AxArklt2O6p/T8anIiOahQRQDiav8XO
pf8/xoAvd0KPE0CuYtJAFuYAQLT2DaI3PxZAZiBUK0H0AUAAUVLsouIYQLLj
B7VG8AJAPLmTxLBYG0BKFAUmiwEEQLiyDN/bAx5Adko0NqoABUAUXcHD1EAg
QMmo8lLF+gVA+1Kvp3Z5IUBodPpWHwoHQIIRuSynzCJAm0U0+lMHCEACV8H4
KAkkQKqtV5e+CwhAFJktPa4OJEC4FXs0KRAIQCbbmYEzFCRA1uXBbv4YCEBM
X3IKPh8kQBCGT+OoKghAlGcjHFM1JECGxmrM/U0IQCh4hT99YSRAckehnqeU
CEBOmUmG0bkkQIGvxDsSmQhAYdu1yla/JECQF+jYfJ0IQHQdIg/cxCRArecu
E1KmCECYofqX5s8kQOiHvIf8twhA4qmrqfvlJEBeyNdwUdsIQHa6Dc0lEiVA
bTD7DbzfCECI/HkRqxclQHyYHqsm5AhAmz7mVTAdJUCZaGXl++wIQL/Cvt46
KCVA1AjzWab+CEAJy2/wTz4lQONwFvcQAwlAHA3cNNVDJUDy2DmUewcJQC5P
SHlaSSVAD6mAzlAQCUBT0yACZVQlQB4RpGu7FAlAZhWNRupZJUAseccIJhkJ
QHdX+YpvXyVAO+HqpZAdCUCKmWXP9GQlQEpJDkP7IQlAnNvRE3pqJUCfVj82

        "]]},
      Annotation[#, "Charting`Private`Tag$606724#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->
    NCache[{{-Pi, Pi}, {-20.707962626807607`, 
      10.707962626807607`}}, {{-3.141592653589793, 
     3.141592653589793}, {-20.707962626807607`, 10.707962626807607`}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Print",
 CellChangeTimes->{3.734716419290015*^9, 3.73471787797377*^9}],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   StyleBox[GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`s2, 6 - 5 $CellContext`x], 
         BoxForm`TogglerBarFunction[$CellContext`s2, 6 - 5 $CellContext`x]& ],
        
        DefaultBaseStyle->"CheckboxBar",
        Enabled->Dynamic[$CellContext`enab2]], 
       StyleBox["3", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "Deploy"],
   CheckboxBar[
    Dynamic[$CellContext`s2], {6 - 5 $CellContext`x -> 3}, Enabled -> 
    Dynamic[$CellContext`enab2]]], " ", 
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAASkkOQ/shCcDO7egJPbU1QDu1fPAI
HgnARfFNlsWyNUAsIeudFhoJwLz0siJOsDVADvnH+DESCcCp+3w7X6s1QNGo
ga5oAgnAggkRbYGhNUBYCPUZ1uIIwDclOdDFjTVAZ8fb8LCjCMCgXImWTmY1
QIRFqZ5mJQjAcsspI2AXNUBx1PoSkxMHwMbE3Os7bDRAyl0a6OQTBsCeehAR
b8wzQP2+qrA6GQXAXrdqrsQvM0DjsvGRUQkEwM4PN/vShTJANqEG1I0LA8DC
JISkOOcxQDwi0i6L+AHAZlVD/VY7MUAcew59jOoAwPIMKc6XkjBA0JwxWGbd
/78CAh/3X+ovQM9os+c1u/2/gSHQsAGVLkCmKdE4UL37vwi6giNSVi1AMJrQ
cHLJ+b9eYIKG5x0sQCEwPdoWq/e/FD5mSO7KKkDqukUFBrH1v9KUS8OjjilA
G2u7YXeM87/xIhWdyjcoQP7KEqXwcfG/374rZzbnJkBzPwxUaffuv9TTQ+pQ
rSVAuDPNwPW16r8qIEDM3FgkQK8RxrAXvea/h+U9ZxcbI0BzOpkDPm/iv0Ti
H2HDwiFAOoVfSOhq3L/R7E5LtHAgQO9o/I9/iNS/y+D+3KdqHkCDxJs6P/jH
v7RWKOHJvhtA1rs8xKoDsL+tvlRXSUAZQF8sRv1Uka4/REIbrlLOFkDhSFhV
bp7IP500qsI+JxRA9K8/rxg71D8EGTxJiK0RQNqlHm7x0Nw/WNgsG2n9DUB7
brtIVZ/iP+a1FWXVuAhAWKAvV5yN5j+SdwST/M4DQGaHyQLf0Oo/gC0IedL1
/D/DhCsrjMvuPxg0E5QhA/M/XhHlwhRZ8T9QUg1jMIXiP/M6xz7hdvM/AGxC
nmMmtb+vbw35YnD1P9hchrrdY+a/BH/mgWKU9z8Ue4CJ7OX1v4GZI0kXlPk/
hP+xbXTk/79LBH8pxIn7P7yKvWdq2ATArklt2O6p/T80OBEd1SgKwDiav8XO
pf8/jAFf7oQeD8CuYtJAFuYAQLT2DaI3PxLAZiBUK0H0AUAAUVLsouIUwLLj
B7VG8AJAPLmTxLBYF8BKFAUmiwEEQLiyDN/bAxrAdko0NqoABUAouoKHqYEc
wMmo8lLF+gVA9qVeT+3yHsBodPpWHwoHQIIRuSynzCDAm0U0+lMHCEACV8H4
KAkiwKqtV5e+CwhAFJktPa4OIsC4FXs0KRAIQCbbmYEzFCLA1uXBbv4YCEBM
X3IKPh8iwBCGT+OoKghAlGcjHFM1IsCGxmrM/U0IQCh4hT99YSLAckehnqeU
CEBOmUmG0bkiwIGvxDsSmQhAYdu1yla/IsCQF+jYfJ0IQHQdIg/cxCLArecu
E1KmCECYofqX5s8iwOiHvIf8twhA4qmrqfvlIsBeyNdwUdsIQHa6Dc0lEiPA
bTD7DbzfCECI/HkRqxcjwHyYHqsm5AhAmz7mVTAdI8CZaGXl++wIQL/Cvt46
KCPA1AjzWab+CEAJy2/wTz4jwONwFvcQAwlAHA3cNNVDI8Dy2DmUewcJQC5P
SHlaSSPAD6mAzlAQCUBT0yACZVQjwB4RpGu7FAlAZhWNRupZI8AseccIJhkJ
QHdX+YpvXyPAO+HqpZAdCUCKmWXP9GQjwEpJDkP7IQlAnNvRE3pqI8D1Xjwf

        "]]},
      Annotation[#, "Charting`Private`Tag$606766#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->
    NCache[{{-Pi, Pi}, {-9.707962626807607, 
      21.707962626807607`}}, {{-3.141592653589793, 
     3.141592653589793}, {-9.707962626807607, 21.707962626807607`}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Print",
 CellChangeTimes->{3.734716419290015*^9, 3.73471787803717*^9}],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   StyleBox[GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`s2, -9 + 2 $CellContext`x], 
         BoxForm`TogglerBarFunction[$CellContext`s2, -9 + 2 $CellContext`x]& ],
        DefaultBaseStyle->"CheckboxBar",
        Enabled->Dynamic[$CellContext`enab2]], 
       StyleBox["4", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "Deploy"],
   CheckboxBar[
    Dynamic[$CellContext`s2], {-9 + 2 $CellContext`x -> 4}, Enabled -> 
    Dynamic[$CellContext`enab2]]], " ", 
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwtlHs0lHkch11m3nnfDLmFERPSZAaTarRFvL/OplCERk33sptExi2VQ7Wz
YbKxdHKSQmUjlzUstV3I+826tku0c5CKzSBNrcZtjWvbnrN/fM7z1/Pn87EO
igg4qqWhoeHzZf/R20vv61lrAgpspbfnM/jgej9BhbMJyNvrfoaWzgcH6w+5
JuYEXM2Y9NVJ44PedJN6tSEB0rlv5sxS+NBRJJGFaBEQIke7BRI+iPBJVmc/
Dg6JM8ywKD4ca3qlqvgJh3uK8DPd/nxI9CjOC16BQ12+cEeVIR+i5DOGV4wY
sD70bEpLiiM8O2A+PGCEwSBf9+QY4QjztSUVLiw6nDsUKMpNdQBF5ehlf4IG
0S/VzUU0B1h3G5On6WjDDT9tZWOSPWy0ecG/pNYEtsHxLI85HljE651NVWrA
j25S9y2xPGjPWS0KfvOZEhxjXt0zxYXnIVXvnKvnKUHPx7hWMRcKuR3r/Z7M
UqHeAj3hJztwut4eGd0yTaVyBDn7o+3A2smtx6R0isK3p//aoFwJyscedOyX
Seqx2F+y6cRKWBpWfeR06jjV1CPutlRwYOGZYYEqapSCys3chP0ciCGZwuNT
I9SIVML7u3cFPFzbCpP3ldTpQtbD2l0roNygscL0yRC1rs7sn/wuW4hxydZ2
j+infFfGwDsfW3BJOuQ5HPqaEqqTEmWNy+FTyFz6+YtyKr3xs1rquRwu1N9w
IdVNlG2vfPopZQOd1RvrS7QrqE9j+qV6yAYOOWyZF16WkXdj6Lve1FnDW09R
oDivmXzkFpjGdLWGiXKy3MxVTmrSmbG+NVbQU8AWj7a/JvOXsN+r1lhBvLja
M/BmP3nEtqOMJ1oGolurduekDZFKU4Hy2n42BEtbtPralSQnz4ds3mYJvyXa
26f+PkI+ZztPWvhYwEGDwTrjPaOk/+m0vNidS2Hcpcn97alxMjko53D6ZnMo
j9CdDoqcJO084y60bWUB7fyQJChzijwHTKrN2Qwk2cu9TDOnSbRWvG/C2RS2
0c5z61NmyZ6z6IOlqwnIvMK7R4rnSe6+liu4/RJYf51qaCv4TA6ssco1czQG
WdALZDKkgQJyHan3LCMIthLab5rQRNf7SuW1OoZQqWDc36LSQr4Wau9Hiw3A
25jOuaRJQye6Jqvezy2GU96CdSUadGQclnWldEEXWorGAhpm6EgsM98bu4gJ
ISdndi1bxEBOpjoBTz8QcMNDMLOTgaNnJ7N0RKMMKCnbnVWrg6Of7/h1fD/M
gIdL4gVcfRxlyImssj4GdA4+FS+Y4UgoSLDRbmOAfvIORREPR3+NH94gK2FA
cmPoH/M+OJqI5h2jfcuA6K238+5m4sgi6kldRScGkvJ6V8NsHC3cOnXxVSsG
GabD3Qm5X/z2Vb5YAwZl7/hGAYU4KnTKf7mvCoNhaY107gGOnFTJKiwDg4PN
XZH+r3C0OcKPfcALg3CnWd2aPhxxbhIDUoRBwjV2KWcAR/jzuuLKrzDIDjk6
OPsRR218Z2ecg4EcH99TuIAj0Qhre5UWBopIkyl9bQK5sP806J2mw1j3hsx4
BoEsfFO78FE6LC7+rs1Pn0D9ZQtBB/voX7q9E1ZtTKD6Nw/sUjrp4BDXhHNY
BCrSjRqpaqWD61tlQYYlgX5w493rrafD//+FToQr4ogaOvwLUw9NSA==
        "]]},
      Annotation[#, "Charting`Private`Tag$606810#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, -15.283185050723043`},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->
    NCache[{{-Pi, 
       Pi}, {-15.283185050723043`, -2.716814949276957}}, {{-3.141592653589793,
      3.141592653589793}, {-15.283185050723043`, -2.716814949276957}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Print",
 CellChangeTimes->{3.734716419290015*^9, 3.73471787808397*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Verifica\>\"", ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"s2", " ", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "===", " ", 
      RowBox[{"teacherEQ", "[", 
       RowBox[{"[", 
        RowBox[{"ind2", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\t\t\t", 
     RowBox[{
      RowBox[{"enab2", " ", "=", " ", "False"}], ";", " ", 
      RowBox[{"correctAnswer", "++"}], ";", " ", 
      RowBox[{"MessageDialog", "[", "\"\<Risposta corretta\>\"", "]"}], ";", 
      RowBox[{"ans", "++"}]}], ",", "\[IndentingNewLine]", "\t\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"s2", " ", "===", " ", "0"}], ",", 
       RowBox[{
       "MessageDialog", "[", "\"\<Rispondi Prima di verificare\>\"", "]"}], 
       ",", " ", "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{
        RowBox[{"ans", "++"}], ";", 
        RowBox[{"enab2", "=", " ", "False"}], ";", 
        RowBox[{"MessageDialog", "[", "\"\<Risposta errata\>\"", "]"}]}]}], 
      "]"}]}], "\[IndentingNewLine]", "\t", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.734716491572749*^9, 3.734716503024169*^9}, {
  3.7347165425272403`*^9, 3.7347165668310843`*^9}, {3.734717214570181*^9, 
  3.7347172183141875`*^9}, {3.7347172993239317`*^9, 3.7347173270199804`*^9}}],

Cell[BoxData[{
 ButtonBox["\<\"Verifica\"\>",
  Appearance->Automatic,
  ButtonFunction:>If[Part[$CellContext`s2, 1] === Part[$CellContext`teacherEQ, 
      Part[$CellContext`ind2, 1]], $CellContext`enab2 = False; 
    Increment[$CellContext`correctAnswer]; MessageDialog["Risposta corretta"]; 
    Increment[$CellContext`ans], 
    If[$CellContext`s2 === 0, 
     MessageDialog["Rispondi Prima di verificare"], 
     Increment[$CellContext`ans]; $CellContext`enab2 = False; 
     MessageDialog["Risposta errata"]]],
  Evaluator->Automatic,
  Method->"Preemptive"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Button", " ", "Verify", " ", "Response"}], ",", " ", 
    RowBox[{"if", " ", "not", " ", "insert", " ", "alert"}], ",", " ", 
    RowBox[{
    "else", " ", "say", " ", "if", " ", "it", " ", "is", " ", "corret", " ", 
     "or", " ", "wrong"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7347804865123696`*^9, 3.734780487307971*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7347172425524316`*^9, 3.7347172425836315`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dynamic", "[", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"ans", " ", "\[GreaterEqual]", "   ", "2"}], ",", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Vai alla prossima sezione\>\"", "]"}], 
        ",", "\"\<RF_G1_2\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
        "\"\<RF_G1_2\>\""}], "}"}]}], "]"}], ",", " ", 
    "\"\<Rispondi e Verifica la risposta prima di passare alla prossima \
sezione\>\""}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Button", " ", "Verify", " ", "Response"}], ",", " ", 
    RowBox[{"if", " ", "not", " ", "insert", " ", "block", " ", "user"}], ",",
     " ", 
    RowBox[{"else", " ", "button", " ", "with", " ", "Hyperlink"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7347165341500254`*^9, 3.7347165342436256`*^9}, {
  3.734717507709365*^9, 3.7347175119213724`*^9}, {3.734717808709631*^9, 
  3.734717826201262*^9}, {3.734780493516782*^9, 3.734780513601022*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[$CellContext`ans >= 2, 
    Hyperlink[
     StatusArea[
      Button["Vai alla prossima sezione"], "RF_G1_2"], {
      EvaluationNotebook[], "RF_G1_2"}], 
    "Rispondi e Verifica la risposta prima di passare alla prossima sezione"],
    StandardForm],
  ImageSizeCache->{726., {8., 17.}}]], "Output",
 CellChangeTimes->{3.7347165833047132`*^9, 3.7347176508588805`*^9, 
  3.734717829102867*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[TextData[StyleBox["Esercizio Riconoscere Grafico 3\n\n", "Section"]], \
"Text",
 CellChangeTimes->{{3.734265091372779*^9, 3.7342651012527695`*^9}, {
  3.734265291815647*^9, 3.734265291986204*^9}, {3.7347167185629597`*^9, 
  3.734716759845443*^9}},
 CellTags->"RF_G1_2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"enab3", " ", "=", " ", "True"}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Enable", " ", "Response", " ", "after", " ", "first", " ", "Choice"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7347167645722513`*^9, 3.7347167685970583`*^9}, {
  3.734780519107832*^9, 3.7347805344616594`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s3", "=", " ", "0", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"User", " ", "Variable", " ", "Choice"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7347805372082644`*^9, 3.7347805465158815`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7347175048213596`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listFunction3", "=", " ", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"exercises", "[", 
    RowBox[{"[", 
     RowBox[{"ind3", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Order", " ", "Random", " ", "List", " ", "Function"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7347805495890865`*^9, 3.7347805608367066`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"3", "-", 
    RowBox[{"7", " ", "x"}]}], ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"4", "+", "x"}], ",", 
   RowBox[{"1", "-", "x"}]}], "}"}]], "Output",
 CellChangeTimes->{3.734717629780028*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Plot", " ", "all", " ", "function", " ", "with", " ", "relative", " ", 
    "checkbot", " ", "for", " ", "response"}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{"Panel", "[", 
    RowBox[{"\"\<a quale grafico corrisponde la funzione\>\"", " ", "eq3"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", "listFunction3", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"listFunction3", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
       RowBox[{"CheckboxBar", "[", 
        RowBox[{
         RowBox[{"Dynamic", "[", "s3", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"listFunction3", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", "i"}], "}"}], ",", " ", 
         RowBox[{"Enabled", "\[Rule]", 
          RowBox[{"Dynamic", "[", "enab3", "]"}]}]}], "]"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.734716794059924*^9, 3.7347168331394024`*^9}, {
  3.7347178918597946`*^9, 3.7347178950578003`*^9}, {3.7347805638393135`*^9, 
  3.734780586966554*^9}}],

Cell[BoxData[
 PanelBox[
  RowBox[{"{", 
   RowBox[{"\<\"a quale grafico corrisponde la funzione\"\>", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}]}], "}"}]]], "Output",
 CellChangeTimes->{3.7347178988798065`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   StyleBox[GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`s3, 3 - 7 $CellContext`x], 
         BoxForm`TogglerBarFunction[$CellContext`s3, 3 - 7 $CellContext`x]& ],
        
        DefaultBaseStyle->"CheckboxBar",
        Enabled->Dynamic[$CellContext`enab3]], 
       StyleBox["1", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "Deploy"],
   CheckboxBar[
    Dynamic[$CellContext`s3], {3 - 7 $CellContext`x -> 1}, Enabled -> 
    Dynamic[$CellContext`enab3]]], " ", 
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwt1Pk71AkcwHG377DEmNxkkokcmS+1s5TvZ9cRSoWSapcnu0mF0LGJttwd
KjaeTSK2iCmMK0J9P5UjWpJmy4O0uSP3ldFod5/dH97P+z94sf2OeOyXkpCQ
cPunf+/qomy/yGYg++y9jmoxD2zLIycIfQam6Ae1bRLxwIw9kqGuzUC5h+ZN
r+Z4oLzQ8InLZODHhcIHI+M8eJkXVRggxcCKo8XXdHp44E3Mar3uIdDtwH2v
iHoeHGjonBDcIvDUVmyzucKDWMf8TH8jAoW6wqYHBjwIFYqYV9XksTc8XWDA
/RqaftAe6lOTQ1WmxuYA9/UgfsQX2GjJot6B1D1qJ9ZBb8lksjtDBhMiS31X
n7OG9dlywkuK0risOU5Ll28FG1a2WVz8JIkzb+efhT8gQTdC+XTisARW3g0c
tWnmQusNrrf/2y90ellqfdeEJbwIKB1cVy2mO077pA5KWkKuyUve9oeLdKhM
BTfX0QIsr7eGhDUu0MPx91c6JJkB23Jjh/rdeVrvwuxSafkaGK5ylJUrnqUv
SWc49IuMQedw9b6fE6fpSnHM8SHt1bDUxMyZCJ2kM0NDkkrsjeAo9dWOg/Nj
9JO9dSy7REOotGrG2fJhOqt+d2x6ERuKVOsFGg8H6PBtBVXH+lfAUZs0absj
PbSRGsfei60LNnG+zkOHumjXpvybdcGaMB7w+cqZc0J6KGippWKRBTG16TbU
pwZazGwTutmpwuvqDbV8aQGt4TK6p/msIviaOYl3JBdSHM8tZdp5MvDe2Xtn
cOYzyhY9jvseF1EzRVSRpq2QMtbMvm7C/UB15OgHT7Z2UROqBbLWQU/piOBq
5503eyiBVNIvfPNJ2jtr7a4blwYo62IO99b4Eu2f0Cj1rnWYmrr3l0P8qBw+
jTU1TXw+RnkZJ25e16eEPqr9T1i7J6mfulV29u1l4rRNg937E9PUmjtd5goq
6lh0RGnBL2SWCot5Y1UQq4UyZwai/FLmKWcfzx/v2ethVJqhi0bKAuXO+eKb
ss8AN8ucMak9v0g9Mdx2+6LmSix0CWofyxdTJ7N8xYIZQ+Rdp+tacr5Qk7ny
o6xiIyz0awP1AQkQmIVM5v66Gv0Ndph+OyMJJbxXimGHTbCkV77caUIKTrY0
10SsMkVXliznoqQMRPeeiy6VMscTrtbr+RKysDW6s9vksQU25k151IlkQeCZ
khdoa4kBx0ReKxTkodNIJ7DTmIvpjtYiT3kChmpGTx2UI5FfsOu3R4oEzFYE
1jopkFi5PMLaRIUAydIRpVXKJL7ufxy8pEmATv6HrO7lJKrEb+vNW0PA1tT+
ek8jEuPrD/0hdiOgPOgt086BxLBN2Zl3UgiI1W/mM6NJjCqqtWWmEZCstWVm
PI7EJI2h9sgMAjJZzzc2nyexYNBCzSOXgAqFxtaEZBKHEmoSPlcQMDJXO/c5
i0SfZ29C3DsJ8HhR890gTWKQ5aJSzTsCfJtsE2ufkhh5Tf8up4+AwLqqP7Mb
SEwL2N+/+JGA+OrKgO9fkCgkpnfnLhFQdafs8stuEntD1OdVpBnQ8LtVe2EP
iVPt36REyDNAmFHCThwgcVn+2ZbtKgwYvSoocxojUV/19uFqFgNEl9cuGU6R
aBbeQHC0GCB3oXCT5ByJtu+Hc5L0GMCKM0/uXiDxf7/gP79I/BsMNlbK
        "]]},
      Annotation[#, "Charting`Private`Tag$607019#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->
    NCache[{{-Pi, Pi}, {-18.991147677530652`, 
      24.991147677530652`}}, {{-3.141592653589793, 
     3.141592653589793}, {-18.991147677530652`, 24.991147677530652`}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Print",
 CellChangeTimes->{3.734716812920357*^9, 3.7347168769711*^9, 
  3.734717898942207*^9}],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   StyleBox[GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`s3, 1 + $CellContext`x], 
         BoxForm`TogglerBarFunction[$CellContext`s3, 1 + $CellContext`x]& ],
        DefaultBaseStyle->"CheckboxBar",
        Enabled->Dynamic[$CellContext`enab3]], 
       StyleBox["2", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "Deploy"],
   CheckboxBar[
    Dynamic[$CellContext`s3], {1 + $CellContext`x -> 2}, Enabled -> 
    Dynamic[$CellContext`enab3]]], " ", 
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwt1P831XccwPF7cXl/Er3zPUmppYxT3U0m5P1qVitplS9Lp6Mv7uiO8rVZ
RcdEEVq1bKUvoshFuVZzWLd6f1by5ebLzZGcWOa7c7XCdcPlsu3s88PzPP6D
p11wpG+IDo/H2/Zv/+m9xdhryo5h/5fPupcnDCNbhpPPOtkNXbewZjj5rPFk
zYTQhOHksy8kSaViHYaTzwYi9YLWbsTJYw/WtA+X3UKcPDZlY1FO6HLEyWOj
WzQmF00N2G6Jern9ihkqD7Ie7DXVZ7Nkzoq6FdNU+7i4zG2BgNWcCDjw3Sca
2nNv5MJORo+tDulZdstkgrrk6becNdRlD31uJFlo+YF6LG1elTHBZ49+kR9k
MaKiNvHGJzKVPNb1g43G6uUIVVwTBob+OUtz14nK6h+8p03i+wNrZVqa8yK0
KTxuiN52eOG649EU9fG7GZ17fICuuaKIiqmbpPud87p6f+qhdmvWv7YoGacp
7Jh4z503VPlgo0D/VzWVDFmYW1W10oXhsgPfZ6poW2C7kUxUT2fkJgXD0SP0
L6nTzjmLK2gsmev/7fg7qkAeNOxMLqn8tIFVlyvpEuHz6ZUrnxHp/Ooyy0f9
9GZHbI7iVDOJdcvW9YzsptYZDRPJdu3E7dS+zYNhHVS0XtGeIe8i78XT5xLT
Wmjac74rK+sjyVVX3chEDe003i0c5itJq8yjqli3jJ4SHy1Mn/2b7HPapPW/
UEpEQmVh+tgw6docGBCRU0tsmBJ5g6mKjEmJ1Mq9hWiHmhyrjdXkdYFtxIii
g8QVpe7xcB4n8RGyzQE3uolnRVB+8fZJEpi7ete1s/3ESXHJsXHTFAlNrdPp
VCjJ/affJEWKteRpiqNj5vN3JPjJz+bVIbNk7/y+J2a7R4g0LeZA+h0eqNxq
PLviVOT4ddGNKBkfpJFGk8FRatJWcTpBWKkDeon9ScFZ4+QkUYFQrgtJ2cu2
WGZNErb+Qr6hXA+26iU6VJ2ZIvYnqVl3lQBKtxxue1ekJa/yXQ6Nt+iD6xX6
rLFgltg0dAYPNBtAaXAzWPTzOBGELvF33DDG52TgXo9B+aZhHc454G0msM/g
63HOhThvZ5dinoDTCOoko77PNAJOIxAf0Xy9eI4B5zy4utFZ42eAoHGptbZI
F0Px3V2XHhsieNlasrVTgKHSPN7ZASPoSF9/xQxhaO37I2LGCsHQ6P7PEudi
wKe390g+RoCeFkb7m2M4XR1Wr92GwEu0tn/GHkPMl3k5hVkIfr+1o8nPG0OS
tMrdJBsBu6t70RkfDOctB9sSriOoNTxy6PFXGO4OrDL1vY2gNfYS4+CHYTD1
Yep0BYIxrzdeM3sw7K19FbWzHcHq3vBKyWEMh9dMGT3sROByWav/JhJDwmXb
EvteBJ4+5wJMYzBki0P6pt4i8Pnt3uiJOAwtSLX79gyCsJRJJ79EDD1RFuNY
l4EY14z4tCQMo23rsuINGDj21kb+KBnDvKIfGndgBtL84eDKNAy28/PDZWYM
nEPN5UHpGJyO1SD7BQz88lCkdzETg3uXsuD8IgZyotS+tT9i4P4FBR+l5mnP
Y/gHQY5J8Q==
        "]]},
      Annotation[#, "Charting`Private`Tag$607059#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->
    NCache[{{-Pi, Pi}, {-2.1415925253615216`, 
      4.141592525361522}}, {{-3.141592653589793, 
     3.141592653589793}, {-2.1415925253615216`, 4.141592525361522}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Print",
 CellChangeTimes->{3.734716812920357*^9, 3.7347168769711*^9, 
  3.734717899067007*^9}],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   StyleBox[GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`s3, 4 + $CellContext`x], 
         BoxForm`TogglerBarFunction[$CellContext`s3, 4 + $CellContext`x]& ],
        DefaultBaseStyle->"CheckboxBar",
        Enabled->Dynamic[$CellContext`enab3]], 
       StyleBox["3", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "Deploy"],
   CheckboxBar[
    Dynamic[$CellContext`s3], {4 + $CellContext`x -> 3}, Enabled -> 
    Dynamic[$CellContext`enab3]]], " ", 
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAASkkOQ/shCcDY2sbzEnjrPzu1fPAI
HgnAFCsNPtyH6z8sIeudFhoJwFB7U4ill+s/DvnH+DESCcDIG+AcOLfrP9Go
ga5oAgnAvFz5RV326z9YCPUZ1uIIwKDeK5indOw/Z8fb8LCjCMBk4pA8PHHt
P4RFqZ5mJQjA8OlahWVq7z9x1PoSkxMHwB5XCtrZ2PE/yl0a6OQTBsBsRMsv
NtjzP/2+qrA6GQXABoKqnorN9T/jsvGRUQkEwDqaHNxc7fc/NqEG1I0LA8CU
vfJX5Oj5Pzwi0i6L+AHAiLtboukO/D8cew59jOoAwMgJ4wXnKv4/0JwxWGbd
/7+YMefTTBEAQM9os+c1u/2/mEsmDGUiAUCmKdE4UL37vy1rl+NXIQJAMJrQ
cHLJ+b/ospfHRhsDQCEwPdoWq/e/8GfhknQqBEDqukUFBrH1v4siXf18JwVA
G2u7YXeM879ySiJPxDkGQP7KEqXwcfG/gZp2rQdHB0BzPwxUaffuvyPw/Kol
QghAuDPNwPW16r8Ss8yPglIJQK8RxrAXvea/lHvOE7pQCkBzOpkDPm/iv2Ox
GX8wZAtAOoVfSOhq3L9ZD/T2onIMQO9o/I9/iNS/4nIADvBuDUCDxJs6P/jH
v7hDVgx8gA5A1rs8xKoDsL8hGt6p4n8PQF8sRv1Uka4/WYz6qSI9EEDhSFhV
bp7IP0fCqnLzxBBA9K8/rxg71D//+vOKsUMRQNqlHm7x0Nw/XurhFg/NEUB7
brtIVZ/iP89tF6nqUxJAWKAvV5yN5j8L9OWKs9ESQGaHyQLf0Oo/7TBZ4Bta
E0DDhCsrjMvuP5hwZYVx2RNAXhHlwhRZ8T9YRLkwRVYUQPM6xz7hdvM/vc6x
T7jdFECvbw35YnD1P+xbQ74YXBVABH/mgWKU9z/Bn3mgGOUVQIGZI0kXlPk/
YOZI0gVlFkBLBH8pxIn7PxPBXwpx4hZArklt2O6p/T9sUhu2e2oXQDiav8XO
pf8/juZvsXPpF0CuYtJAFuYAQFcxaSALcxhAZiBUK0H0AUAzEKqVIPoYQLLj
B7VG8AJA2fGDWiN4GUBKFAUmiwEEQCWKApPFABpAdko0NqoABUA7JRobVYAa
QMmo8lLF+gVAZFR5qWL9GkBodPpWHwoHQDQ6fasPhRtAm0U0+lMHCEDOIhr9
qQMcQKqtV5e+CwhA1darS98FHEC4FXs0KRAIQNyKPZoUCBxA1uXBbv4YCEDr
8mA3fwwcQBCGT+OoKghACMOncVQVHECGxmrM/U0IQENjNeb+JhxAckehnqeU
CEC5o1DPU0ocQIGvxDsSmQhAwFfiHYlMHECQF+jYfJ0IQMgLdGy+ThxArecu
E1KmCEDWc5cJKVMcQOiHvIf8twhA9EPeQ/5bHEBeyNdwUdsIQC/ka7iobRxA
bTD7DbzfCEA2mP0G3m8cQHyYHqsm5AhAPkyPVRNyHECZaGXl++wIQEy0svJ9
dhxA1AjzWab+CEBqhPksU38cQONwFvcQAwlAcjiLe4iBHEDy2DmUewcJQHns
HMq9gxxAD6mAzlAQCUCIVEBnKIgcQB4RpGu7FAlAjwjStV2KHEAseccIJhkJ
QJa8YwSTjBxAO+HqpZAdCUCecPVSyI4cQEpJDkP7IQlApSSHof2QHEBHYjDJ

        "]]},
      Annotation[#, "Charting`Private`Tag$607101#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0.8584074746384784},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->
    NCache[{{-Pi, Pi}, {0.8584074746384784, 
      7.141592525361522}}, {{-3.141592653589793, 3.141592653589793}, {
     0.8584074746384784, 7.141592525361522}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Print",
 CellChangeTimes->{3.734716812920357*^9, 3.7347168769711*^9, 
  3.734717899145007*^9}],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   StyleBox[GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`s3, 1 - $CellContext`x], 
         BoxForm`TogglerBarFunction[$CellContext`s3, 1 - $CellContext`x]& ],
        DefaultBaseStyle->"CheckboxBar",
        Enabled->Dynamic[$CellContext`enab3]], 
       StyleBox["4", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "Deploy"],
   CheckboxBar[
    Dynamic[$CellContext`s3], {1 - $CellContext`x -> 4}, Enabled -> 
    Dynamic[$CellContext`enab3]]], " ", 
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwt1P831XccwPHP5/py358Un5Bva0xtDuOYTmq65P3a6Yi+qK6IOq02ld0x
orZmhx2zWhJKdU+loq8aGu7CyaLe75q6lDU16aYUrm9Tk293uNdl23nvh+d5
/AdP1+idYTskHMeF/tt/rlxhuczgKtDCdzPOG3NF8K9KHUTOAi3YFJhselgE
L9dX+XZOAj2eq1tjkSOC5YR6fIG1QDMmt006ZIrwsCi9TCERqKIZIn3TRYhC
OseWTkS99ulnxiWJ8Jn62aDqIqKV2vhkjVyEfUHFBTHvIXr7QvjaCmsRkpr1
1sdspJRpBfc+durrsjGnTEsw3ixRyRzNKHMWaK8OHZELppQ5ExafN2/OsTCh
TAsImPfIO2ucp0wB5qZYfpvdz1EmgqYzC6Ji2qaJ4oGDV8WAFH5XVPQuqjES
ReXTkVNt5nDZ46HfuhsG8odSMbfohRn4nGpK3NUwQRxCFX6/dJmCq8/SVrsr
Y0Q86Ryf9dgE+q8HmZn/rCNftV2Q7NVI4K24mk+/zh4hh6raVP53eZi6Z104
mDRE0nZkho1Xc7Abzwz/fGyAXHcxL6lMmcbVC3+juqp+8jwvpl2/yYjLZ99V
2d/oIRq0TZO1xYB3y/JMAnd2Ell+I3/2wwks+2FrSF/sc7Kmw976utMYfqOY
PJx2oJkEOE1rXebp8N660zI8ria5yet7pdPDuKUmoK7EREVu3F/2k4wbwlu9
lhvDj5RhWb6nqt9uAHeEREUkFNTj+r+KY7dr/sSj5bjcwb8Zm7t/UrS7sxu3
FjonDDU9xzalgyEZJzpwSkJNSMTZTjxjfmZCxK1WHHXug8gzOT14HTknV3c9
wjEZDZKXTf1Y0fl0dG9tHf51n6dn9v0B3FQRHLo0+CLeMrv7tu3GIdw+R+69
+kgVGZGpAzv2jOCTT5b8LVy7T8p3zpqITtTh2puLurJuPSamaT3p0coxLE7m
SQ/KX5D0vPkr7JUTWLIw+Ki3u5asMk3zqMs04ONoKuyATS8pWxGvGSg24s3H
WlVt618Rv1PkzoPCaZzom5aVv+oNKYt+BHY9HGy+cyndq3GIxLwT7vnRKA+N
ULTh+74RclUrrVo+KIHtaqvYnHYdWWlr5pbFm4LSfcZqO5Nxsmel7+ISzgxe
KxVfhPN60lA0HHZHbwZH5d2FB3UGovhSv8FlhhSa+kZLA22nyOkgX/16KQIm
R0tKI0/ctEDA5Gj1nBRfDxEBk6Mt3bcSphwQMDkq7l+rLXofAZOj++/GNhpD
ETA5uiv4fMGPSgRMjqaX1/lb5yFgcjTXvk+Tmo+AydHSXm+bsMsImBzty6jN
mLyGgMnRLfVPEuXPEDA5Gu9jmFX7EgGTo6knna+4dSFgcjRPsaPb8BoBk6PN
aGTj5SkETI5qE+3GRBMBmDwd1ixRpkgFYPLUqvi7B+tEAZg8dZ59Ka7GVgAm
T72+USM3RwGYPPXv6C/MfVsAJk///xcwefoPwFBSRA==
        "]]},
      Annotation[#, "Charting`Private`Tag$607145#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->
    NCache[{{-Pi, Pi}, {-2.1415925253615216`, 
      4.141592525361522}}, {{-3.141592653589793, 
     3.141592653589793}, {-2.1415925253615216`, 4.141592525361522}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Print",
 CellChangeTimes->{3.734716812920357*^9, 3.7347168769711*^9, 
  3.7347178991918073`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Button", " ", "Verify", " ", "Response"}], ",", " ", 
    RowBox[{"if", " ", "not", " ", "insert", " ", "alert"}], ",", " ", 
    RowBox[{
    "else", " ", "say", " ", "if", " ", "it", " ", "is", " ", "corret", " ", 
     "or", " ", "wrong"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Verifica\>\"", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"s3", " ", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "===", " ", 
       RowBox[{"teacherEQ", "[", 
        RowBox[{"[", 
         RowBox[{"ind3", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", "\t\t\t", 
      RowBox[{
       RowBox[{"enab3", " ", "=", " ", "False"}], ";", " ", 
       RowBox[{"correctAnswer", "++"}], ";", " ", 
       RowBox[{"MessageDialog", "[", "\"\<Risposta corretta\>\"", "]"}], ";", 
       
       RowBox[{"ans", "++"}]}], ",", "\[IndentingNewLine]", "\t\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"s3", " ", "===", " ", "0"}], ",", 
        RowBox[{
        "MessageDialog", "[", "\"\<Rispondi Prima di verificare\>\"", "]"}], 
        ",", " ", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{
         RowBox[{"ans", "++"}], ";", 
         RowBox[{"enab3", "=", " ", "False"}], ";", 
         RowBox[{"MessageDialog", "[", "\"\<Risposta errata\>\"", "]"}]}]}], 
       "]"}]}], "\[IndentingNewLine]", "\t", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7347168438798294`*^9, 3.734716862802865*^9}, {
  3.7347172637372684`*^9, 3.734717267964876*^9}, {3.7347173490114193`*^9, 
  3.7347173544724293`*^9}, {3.7347805959781847`*^9, 3.734780598554189*^9}}],

Cell[BoxData[
 ButtonBox["\<\"Verifica\"\>",
  Appearance->Automatic,
  ButtonFunction:>If[Part[$CellContext`s3, 1] === Part[$CellContext`teacherEQ, 
      Part[$CellContext`ind3, 1]], $CellContext`enab3 = False; 
    Increment[$CellContext`correctAnswer]; MessageDialog["Risposta corretta"]; 
    Increment[$CellContext`ans], 
    If[$CellContext`s3 === 0, 
     MessageDialog["Rispondi Prima di verificare"], 
     Increment[$CellContext`ans]; $CellContext`enab3 = False; 
     MessageDialog["Risposta errata"]]],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{3.7347168702284784`*^9, 3.734717272410884*^9, 
  3.7347173592148376`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Button", " ", "Verify", " ", "Response"}], ",", " ", 
    RowBox[{"if", " ", "not", " ", "insert", " ", "block", " ", "user"}], ",",
     " ", 
    RowBox[{"else", " ", "button", " ", "with", " ", "hyperlink"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"ans", "===", "  ", "3"}], ",", 
     RowBox[{"Hyperlink", "[", 
      RowBox[{
       RowBox[{"StatusArea", "[", 
        RowBox[{
         RowBox[{"Button", "[", "\"\<Vai alla prossima sezione\>\"", "]"}], 
         ",", "\"\<E_2G\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<E_2G\>\""}],
         "}"}]}], "]"}], ",", " ", 
     "\"\<Rispondi e Verifica la risposta prima di passare alla prossima \
sezione\>\""}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73471694929465*^9, 3.7347169499030514`*^9}, {
  3.734780603925599*^9, 3.7347806262688384`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[$CellContext`ans === 3, 
    Hyperlink[
     StatusArea[
      Button["Vai alla prossima sezione"], "E_2G"], {
      EvaluationNotebook[], "E_2G"}], 
    "Rispondi e Verifica la risposta prima di passare alla prossima sezione"],
    StandardForm],
  ImageSizeCache->{490., {3., 9.}}]], "Output",
 CellChangeTimes->{3.734716953834258*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[TextData[StyleBox["Equazioni di 2 \[Degree]Grado", "Section"]], "Text",
 CellChangeTimes->{{3.734265091372779*^9, 3.7342651012527695`*^9}, {
  3.734265291815647*^9, 3.734265291986204*^9}},
 CellTags->"E_2G"],

Cell[CellGroupData[{

Cell["Introduzione ", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "*", 
       RowBox[{"x", "^", "2"}]}], "+", 
      RowBox[{"b", "*", "x"}], " ", "+", " ", "q"}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", " ", 
       RowBox[{"+", "3"}]}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "zoom"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "10"}], ",", " ", 
     RowBox[{"+", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", 
     RowBox[{"-", "10"}], ",", " ", 
     RowBox[{"+", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", " ", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"zoom", ",", "10", ",", "1000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7342654412972345`*^9, 3.7342654813045607`*^9}, {
  3.734265544459816*^9, 3.73426556636392*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -10, $CellContext`b$$ = -10, \
$CellContext`q$$ = -10, $CellContext`zoom$$ = 10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -10, 10}, {
      Hold[$CellContext`b$$], -10, 10}, {
      Hold[$CellContext`q$$], -10, 10}, {
      Hold[$CellContext`zoom$$], 10, 1000}}, Typeset`size$$ = {
    360., {115., 120.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$688$$ = 
    0, $CellContext`b$689$$ = 0, $CellContext`q$690$$ = 
    0, $CellContext`zoom$691$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = -10, $CellContext`b$$ = -10, \
$CellContext`q$$ = -10, $CellContext`zoom$$ = 10}, "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$688$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$689$$, 0], 
        Hold[$CellContext`q$$, $CellContext`q$690$$, 0], 
        Hold[$CellContext`zoom$$, $CellContext`zoom$691$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`a$$ $CellContext`x^2 + $CellContext`b$$ \
$CellContext`x + $CellContext`q$$, {$CellContext`x, -3, 
         Plus[3]}, PlotRange -> $CellContext`zoom$$], 
      "Specifications" :> {{$CellContext`a$$, -10, 
         10}, {$CellContext`b$$, -10, 10}, {$CellContext`q$$, -10, 
         10}, {$CellContext`zoom$$, 10, 1000}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {202., 209.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.734265483926264*^9, 3.7342655676925263`*^9, 
  3.7344260407807293`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list2", " ", "=", " ", 
  RowBox[{"{", "}"}]}]], "Input",
 CellChangeTimes->{{3.734429488481063*^9, 3.7344294946154137`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.734429502117843*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", "f", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Column", "[", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Panel", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Row", "[", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"InputField", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Dynamic", "[", "a", "]"}], ",", "Number", ",", 
            RowBox[{"FieldSize", "\[Rule]", "Full"}]}], "\[IndentingNewLine]",
            "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SuperscriptBox[\(x\), \(2\)]\) + \>\"", ",", "12"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"InputField", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Dynamic", "[", "b", "]"}], ",", "Number", ",", 
            RowBox[{"FieldSize", "\[Rule]", "Full"}]}], "\[IndentingNewLine]",
            "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<x + \>\"", ",", "12"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"InputField", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Dynamic", "[", "q", "]"}], ",", "Number", ",", 
            RowBox[{"FieldSize", "\[Rule]", "Full"}]}], "\[IndentingNewLine]",
            "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
        "]"}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Dynamic", "@", 
        RowBox[{"Refresh", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"f", "=", 
            RowBox[{
             RowBox[{"a", "*", 
              SuperscriptBox["x", "2"]}], "+", 
             RowBox[{"b", "*", "x"}], "+", " ", "q"}]}], ";", " ", 
           "\"\<\>\""}], ",", " ", 
          RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "q"}], "}"}]}]}], "]"}]}], 
       "\[IndentingNewLine]", 
       RowBox[{"Button", "[", "\[IndentingNewLine]", 
        RowBox[{"\"\<Add\>\"", ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"a", "\[Equal]", " ", "Null"}], " ", "||", 
            RowBox[{"b", "\[Equal]", " ", "Null"}], " ", "||", " ", 
            RowBox[{"q", "==", "Null"}], " ", "||", " ", 
            RowBox[{"a", "\[Equal]", " ", "0"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
           "MessageDialog", "[", 
            "\"\<Alcuni campi inseriti non sono corretti!\>\"", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", "\[IndentingNewLine]", 
            RowBox[{"list2", ",", "\[IndentingNewLine]", "f"}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", "\[IndentingNewLine]", 
            RowBox[{"list2", ",", "\[IndentingNewLine]", "f"}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", "]"}]}]}], " ", "\[IndentingNewLine]", "}"}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.734429539719994*^9, 3.7344295452203083`*^9}, {
  3.7344303379136477`*^9, 3.7344303424529076`*^9}}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`f$$ = $CellContext`q + $CellContext`b \
$CellContext`x + $CellContext`a $CellContext`x^2}, 
  TagBox[GridBox[{
     {
      PanelBox[
       TemplateBox[{InputFieldBox[
          Dynamic[$CellContext`a], Number, FieldSize -> Full],StyleBox[
         "\"\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\) + \"", 12, 
          StripOnInput -> False],InputFieldBox[
          Dynamic[$CellContext`b], Number, FieldSize -> Full],StyleBox[
         "\"x + \"", 12, StripOnInput -> False],InputFieldBox[
          Dynamic[$CellContext`q], Number, FieldSize -> Full]},
        "RowDefault"]]},
     {
      RowBox[{
       ButtonBox["\<\"Add\"\>",
        Appearance->Automatic,
        ButtonFunction:>If[
          
          Or[$CellContext`a == Null, $CellContext`b == Null, $CellContext`q == 
           Null], 
          MessageDialog["Alcuni campi inseriti non sono corretti!"], 
          AppendTo[$CellContext`list2, $CellContext`f$$], 
          AppendTo[$CellContext`list2, $CellContext`f$$]],
        Evaluator->Automatic,
        Method->"Preemptive"], " ", 
       DynamicBox[ToBoxes[
         Refresh[$CellContext`f$$ = $CellContext`a $CellContext`x^2 + \
$CellContext`b $CellContext`x + $CellContext`q; "", 
          TrackedSymbols :> {$CellContext`a, $CellContext`b, $CellContext`q}],
          StandardForm],
        ImageSizeCache->{0., {0., 6.}}]}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.734429553272769*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", "list2", "]"}]], "Input",
 CellChangeTimes->{{3.7344295596831355`*^9, 3.7344295669535513`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`list2, StandardForm],
  ImageSizeCache->{16., {2., 8.}}]], "Output",
 CellChangeTimes->{3.7344295706747646`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{"list2", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.734429598019328*^9, 3.734429599218397*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Plot[$CellContext`list2, {$CellContext`x, -10, 10}], StandardForm],
  ImageSizeCache->{360., {108., 114.}}]], "Output",
 CellChangeTimes->{3.734429604235684*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Button", "[", "\[IndentingNewLine]", 
  RowBox[{"\"\<Delete\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"list2", "=", " ", 
    RowBox[{"{", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.734430223662113*^9, 3.734430224609167*^9}}],

Cell[BoxData[
 ButtonBox["\<\"Delete\"\>",
  Appearance->Automatic,
  ButtonFunction:>($CellContext`list2 = {}),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{3.734430231574566*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[TextData[StyleBox["Equazioni di 3 \[Degree]Grado", "Section"]], "Text",
 CellChangeTimes->{{3.734265091372779*^9, 3.7342651012527695`*^9}, {
  3.734265294242138*^9, 3.7342652943623247`*^9}}],

Cell[CellGroupData[{

Cell["Introduzione ", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "*", 
       RowBox[{"x", "^", "3"}]}], "+", 
      RowBox[{"b", "*", 
       RowBox[{"x", " ", "^", "2"}]}], "+", 
      RowBox[{"c", "*", "x"}], "+", " ", "q"}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", " ", 
       RowBox[{"+", "3"}]}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "zoom"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "10"}], ",", " ", 
     RowBox[{"+", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", 
     RowBox[{"-", "10"}], ",", " ", 
     RowBox[{"+", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", " ", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"zoom", ",", "10", ",", "1000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.734265614573988*^9, 3.734265654600589*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -10, $CellContext`b$$ = -10, \
$CellContext`c$$ = -10, $CellContext`q$$ = -10, $CellContext`zoom$$ = 10, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -10, 10}, {
      Hold[$CellContext`b$$], -10, 10}, {
      Hold[$CellContext`c$$], -10, 10}, {
      Hold[$CellContext`q$$], -10, 10}, {
      Hold[$CellContext`zoom$$], 10, 1000}}, Typeset`size$$ = {
    360., {115., 120.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$767$$ = 
    0, $CellContext`b$768$$ = 0, $CellContext`c$769$$ = 
    0, $CellContext`q$770$$ = 0, $CellContext`zoom$771$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = -10, $CellContext`b$$ = -10, \
$CellContext`c$$ = -10, $CellContext`q$$ = -10, $CellContext`zoom$$ = 10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$767$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$768$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$769$$, 0], 
        Hold[$CellContext`q$$, $CellContext`q$770$$, 0], 
        Hold[$CellContext`zoom$$, $CellContext`zoom$771$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`a$$ $CellContext`x^3 + $CellContext`b$$ \
$CellContext`x^2 + $CellContext`c$$ $CellContext`x + $CellContext`q$$, \
{$CellContext`x, -3, 
         Plus[3]}, PlotRange -> $CellContext`zoom$$], 
      "Specifications" :> {{$CellContext`a$$, -10, 
         10}, {$CellContext`b$$, -10, 10}, {$CellContext`c$$, -10, 
         10}, {$CellContext`q$$, -10, 10}, {$CellContext`zoom$$, 10, 1000}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {215., 222.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.734265627610036*^9, 3.734265656553769*^9}, 
   3.734426040934738*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list3", "=", 
  RowBox[{"{", "}"}]}]], "Input",
 CellChangeTimes->{{3.7344297070705657`*^9, 3.7344297128858986`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.734429717547165*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", "f", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Column", "[", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Panel", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Row", "[", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"InputField", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Dynamic", "[", "a", "]"}], ",", "Number", ",", 
            RowBox[{"FieldSize", "\[Rule]", "Full"}]}], "\[IndentingNewLine]",
            "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SuperscriptBox[\(x\), \(3\)]\) + \>\"", ",", "12"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"InputField", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Dynamic", "[", "b", "]"}], ",", "Number", ",", 
            RowBox[{"FieldSize", "\[Rule]", "Full"}]}], "\[IndentingNewLine]",
            "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SuperscriptBox[\(x\), \(2\)]\) + \>\"", ",", "12"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"InputField", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Dynamic", "[", "c", "]"}], ",", "Number", ",", 
            RowBox[{"FieldSize", "\[Rule]", "Full"}]}], "\[IndentingNewLine]",
            "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<x + \>\"", ",", "12"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"InputField", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Dynamic", "[", "q", "]"}], ",", "Number", ",", 
            RowBox[{"FieldSize", "\[Rule]", "Full"}]}], "\[IndentingNewLine]",
            "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
        "]"}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Dynamic", "@", 
        RowBox[{"Refresh", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"f", "=", 
            RowBox[{
             RowBox[{"a", "*", 
              SuperscriptBox["x", "3"]}], "+", 
             RowBox[{"b", "*", 
              SuperscriptBox["x", "2"]}], "+", 
             RowBox[{"c", "*", "x"}], " ", "+", " ", "q"}]}], ";", " ", 
           "\"\<\>\""}], ",", " ", 
          RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c", ",", "q"}], "}"}]}]}], "]"}]}], 
       "\[IndentingNewLine]", 
       RowBox[{"Button", "[", "\[IndentingNewLine]", 
        RowBox[{"\"\<Add\>\"", ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"a", "\[Equal]", " ", "Null"}], " ", "||", 
            RowBox[{"b", "\[Equal]", " ", "Null"}], " ", "||", " ", 
            RowBox[{"c", "\[Equal]", " ", "Null"}], "||", 
            RowBox[{"q", "==", "Null"}], " ", "||", " ", 
            RowBox[{"a", "\[Equal]", " ", "0"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
           "MessageDialog", "[", 
            "\"\<Alcuni campi inseriti non sono corretti!\>\"", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", "\[IndentingNewLine]", 
            RowBox[{"list3", ",", "\[IndentingNewLine]", "f"}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", "\[IndentingNewLine]", 
            RowBox[{"list3", ",", "\[IndentingNewLine]", "f"}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", "]"}]}]}], " ", "\[IndentingNewLine]", "}"}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7344297425015926`*^9, 3.7344297489519615`*^9}, {
  3.734430286042681*^9, 3.7344302942971535`*^9}}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`f$$ = $CellContext`q + $CellContext`c \
$CellContext`x + $CellContext`b $CellContext`x^2 + $CellContext`a \
$CellContext`x^3}, 
  TagBox[GridBox[{
     {
      PanelBox[
       TemplateBox[{InputFieldBox[
          Dynamic[$CellContext`a], Number, FieldSize -> Full],StyleBox[
         "\"\\!\\(\\*SuperscriptBox[\\(x\\), \\(3\\)]\\) + \"", 12, 
          StripOnInput -> False],InputFieldBox[
          Dynamic[$CellContext`b], Number, FieldSize -> Full],StyleBox[
         "\"\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\) + \"", 12, 
          StripOnInput -> False],InputFieldBox[
          Dynamic[$CellContext`c], Number, FieldSize -> Full],StyleBox[
         "\"x + \"", 12, StripOnInput -> False],InputFieldBox[
          Dynamic[$CellContext`q], Number, FieldSize -> Full]},
        "RowDefault"]]},
     {
      RowBox[{
       ButtonBox["\<\"Add\"\>",
        Appearance->Automatic,
        ButtonFunction:>If[
          
          Or[$CellContext`a == Null, $CellContext`b == Null, $CellContext`c == 
           Null, $CellContext`q == Null, $CellContext`a == 0], 
          MessageDialog["Alcuni campi inseriti non sono corretti!"], 
          AppendTo[$CellContext`list3, $CellContext`f$$], 
          AppendTo[$CellContext`list3, $CellContext`f$$]],
        Evaluator->Automatic,
        Method->"Preemptive"], " ", 
       DynamicBox[ToBoxes[
         Refresh[$CellContext`f$$ = $CellContext`a $CellContext`x^3 + \
$CellContext`b $CellContext`x^2 + $CellContext`c $CellContext`x + \
$CellContext`q; "", 
          TrackedSymbols :> {$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`q}], StandardForm],
        ImageSizeCache->{0., {0., 6.}}]}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.734429757379443*^9, 3.734430306947877*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", "list3", "]"}]], "Input",
 CellChangeTimes->{{3.734429763774809*^9, 3.734429773699377*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`list3, StandardForm],
  ImageSizeCache->{16., {2., 8.}}]], "Output",
 CellChangeTimes->{3.7344297781846333`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{"list3", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "10"}], ",", " ", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7344297820848565`*^9, 3.7344298226281753`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Plot[$CellContext`list3, {$CellContext`x, -10, 10}], StandardForm],
  ImageSizeCache->{360., {108., 114.}}]], "Output",
 CellChangeTimes->{3.734429833606803*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Button", "[", "\[IndentingNewLine]", 
  RowBox[{"\"\<Delete\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"list3", "=", " ", 
    RowBox[{"{", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7344302480765095`*^9, 3.734430249275578*^9}}],

Cell[BoxData[
 ButtonBox["\<\"Delete\"\>",
  Appearance->Automatic,
  ButtonFunction:>($CellContext`list3 = {}),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{3.7344302575020485`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DialogNotebook", "[", 
  RowBox[{"Column", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<The changes have been saved.\>\"", ",", 
     RowBox[{"DefaultButton", "[", "]"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7344305755808744`*^9, 3.7344305755858746`*^9}}],

Cell[BoxData[
 InterpretationBox[
  PanelBox[GridBox[{
     {
      TooltipBox[
       ButtonBox[
        StyleBox[
         DynamicBox[FEPrivate`FrontEndResource[
          "FEBitmaps", "ManipulatePasteIcon"],
          ImageSizeCache->{13., {4., 9.}}],
         DynamicUpdating->True],
        Appearance->{Automatic, None},
        ButtonFunction:>FrontEndExecute[{
           FrontEnd`NotebookPut[
            Notebook[{
              Cell[
               BoxData[
                TagBox[
                 GridBox[{{"\"The changes have been saved.\""}, {
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResourceString["okButtonText"]], 
                    ButtonFunction :> DialogReturn[], Appearance -> 
                    "DefaultButton", ImageSize -> Dynamic[
                    CurrentValue["DefaultButtonSize"]], Evaluator -> 
                    Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]]]}, StyleDefinitions -> "Dialog.nb"]]}],
        DefaultBaseStyle->{},
        Evaluator->None,
        Method->"Queued"],
       DynamicBox[
        ToBoxes[
         FEPrivate`FrontEndResource["FEStrings", "NotebookInNewWindow"]]]]},
     {
      ItemBox[GridBox[{
         {Cell[BoxData[
           TagBox[GridBox[{
              {"\<\"The changes have been saved.\"\>"},
              {
               ButtonBox[
                DynamicBox[FEPrivate`FrontEndResourceString["okButtonText"],
                 ImageSizeCache->{16., {0., 9.}}],
                Appearance->"DefaultButton",
                ButtonFunction:>DialogReturn[],
                Evaluator->Automatic,
                ImageSize->Dynamic[
                  CurrentValue["DefaultButtonSize"]],
                Method->"Preemptive"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"]]]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}],
       Background->GrayLevel[1],
       Frame->True,
       FrameStyle->GrayLevel[0, 0.2]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}}],
   BaseStyle->{FontFamily -> "Times"},
   DefaultBaseStyle->{},
   FrameMargins->5],
  DialogNotebook[
   Column[{"The changes have been saved.", 
     Button[
      Dynamic[
       RawBoxes[
        FEPrivate`FrontEndResourceString["okButtonText"]]], 
      DialogReturn[], Appearance -> "DefaultButton", ImageSize -> Dynamic[
        CurrentValue["DefaultButtonSize"]]]}]]]], "Output",
 CellChangeTimes->{3.7344305813212028`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inputSqrt", " ", "=", " ", "\"\<x+1\>\""}]], "Input",
 CellChangeTimes->{{3.734430784625831*^9, 3.7344308020168257`*^9}}],

Cell[BoxData["\<\"x+1\"\>"], "Output",
 CellChangeTimes->{{3.734430794358388*^9, 3.734430805296014*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<\!\(\*SqrtBox[\(x\)]\)\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"CreateDialog", "[", "\[IndentingNewLine]", 
    RowBox[{"Column", "[", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<Insert Value of Sqrt\>\"", ",", 
       RowBox[{"InputField", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Dynamic", "[", "inputSqrt", "]"}], ",", "String", ",", 
         RowBox[{"FieldSize", "\[Rule]", "Full"}]}], "\[IndentingNewLine]", 
        "]"}], ",", 
       RowBox[{"DefaultButton", "[", "]"}]}], "}"}], "\[IndentingNewLine]", 
     "]"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.734430630476014*^9, 3.7344306454478707`*^9}, {
  3.7344307044112434`*^9, 3.7344307469496765`*^9}, {3.7344308108033285`*^9, 
  3.7344308675535746`*^9}}],

Cell[BoxData[
 ButtonBox["\<\"\\!\\(\\*SqrtBox[\\(x\\)]\\)\"\>",
  Appearance->Automatic,
  ButtonFunction:>CreateDialog[
    Column[{"Insert Value of Sqrt", 
      InputField[
       Dynamic[$CellContext`inputSqrt], String, FieldSize -> Full], 
      DefaultButton[]}]],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{3.7344306512112007`*^9, 3.734430752061969*^9, 
  3.7344308474814262`*^9, 3.7344309038126483`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", "inputSqrt", "]"}]], "Input",
 CellChangeTimes->{{3.7344308835194874`*^9, 3.7344308932070417`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`inputSqrt, StandardForm],
  ImageSizeCache->{22., {0., 8.}}]], "Output",
 CellChangeTimes->{3.7344308975182886`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"v1", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"v2", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"t", "=", "0"}], ",", 
    RowBox[{"t", "<", "100"}], ",", 
    RowBox[{"t", "=", 
     RowBox[{"t", "+", "1"}]}], ",", 
    RowBox[{
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{"2", " ", "t"}], "+", "3"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"z", "=", 
      RowBox[{
       RowBox[{"4", " ", "t"}], "-", "8"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"v1", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "y"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"v2", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "z"}], "}"}]}], "]"}], ";"}]}], "]"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot", "[", "v1", "]"}], ",", 
     RowBox[{"ListPlot", "[", "v2", "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.734431142941326*^9, 3.734431142945326*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd00luFEEQBdAWK5YsWLBgkSCEEEIIM88OGzPPZh6dGNvAiivkUeooeZQ6
AkcA5BeL7JZaoaforK6K+HVs+/fm7oHFYrHz7/u/jp+DsV//rO7Xw7xQj8b4
u+PqIfVkjOdOq0fUs0vXWVGLemHpupfUE+qVpf+5pp5Sbyz97y31jLo63kcL
Psdr4321dT7Pd8b7bBt8ke+O993u8WW+Pz5He8BX+eH4XO0RX+fH7DnbE77J
T9lzt2d8m5+zOcQLNofOOZd4qW8unXNOsam/rs85t3ilb26dc47xWt8cO+dc
442+uXbOOcdbfXPunHOPd/rm3jn3EO/17aFz7iU+6NtL59xTfNS3p865t/ik
b2+dc4/xWd8eO+de44u+vXbOPcdXfXvunHuPLX1775w5KFXf3itnLiZuPHPm
pHxzXi4qZ24mbjxz5qhsOy83lTNXEzeeOXNWvjsvV5UzdxM3njlzWHacl7vK
mcuJG8+cOS27zstl5cztxI1nzhyXPefltnLmeuLGM2fOyw/n5bpy5n7ixjPn
e1B+Oi/3lfO9mLjxzPmelF/xF6j6rqo=
       
       "]]}, {}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd1MlOFVEUhtETRw4ZOHDgAI0xxhiDfS/bvu+wb1EEe8VehvvRziP5CGpq
7UooEvJl/RcC91ad2rq0urCyobW2/O/7f9d/zfahf+aHznCL9T+3kWcmndVN
ulM365xu0QOT3zui2/SEbtfQHXpm8nfO6S69oLv1ku7RK5P/65ru1Ru6T2/p
fr09eR8LelDv6CG9q4f1ntb7vq9H9YEe04d6XB9pfU6P9aQ+0VP6VOf1mdbn
+nxolhf1tL7wOieP1+GlnZPbWV2yc/J43V7ZObmd12U7J4/XecXOye2ivrZz
8nhfvLFzcrusb+2cPN5H7+yc3K7qezsnj/fdBzsnt+v60c7J4336yc7J7aZ+
tnPyeF+vDg1Oznr9y9DOwXUOkoM7Z52Tr3YOrnOTHNw561x9s3NwnbPk4M5Z
5/C7nYPrXCYHd846tz/sHFznODm4c9Y5/2nn4Dr3ycGds54Lv+wcXM+J5ODO
Wc+R33YOrudKcnDnrOfOmp1jLf4CJ2CecQ==
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7344311505657616`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.734430880451312*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
   RowBox[{"StatusArea", "[", 
    RowBox[{"\"\<click me\>\"", ",", "\"\<AG_C1_G1\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<AG_C1_G1\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.734688104513476*^9, 3.7346881302769237`*^9}, {
  3.734688168434017*^9, 3.734688190294859*^9}}],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{False->
    TagBox["\<\"click me\"\>",
     StatusArea[#, "AG_C1_G1"]& ,
     TagBoxNote->"AG_C1_G1"], True->
    StyleBox[
     TagBox["\<\"click me\"\>",
      StatusArea[#, "AG_C1_G1"]& ,
      TagBoxNote->"AG_C1_G1"], "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaseStyle->{"Hyperlink"},
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData:>{
     NotebookObject[
      FrontEndObject[
       LinkObject["tcc43_shm", 3, 1]], 43], "AG_C1_G1"},
   ButtonNote->ButtonData],
  Annotation[#, {
    NotebookObject[
     FrontEndObject[
      LinkObject["tcc43_shm", 3, 1]], 43], "AG_C1_G1"}, 
   "Hyperlink"]& ]], "Output",
 CellChangeTimes->{3.7346881122534904`*^9, 3.7346881949828672`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1350, 695},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
TaggingRules->{"SlideShow" -> True},
ShowCellTags->True,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 4407, 98, 91, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[148548, 2509, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[161297, 2759, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[162860, 2808, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[173904, 3058, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[179557, 3206, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[189681, 3477, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[194583, 3608, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[198832, 3739, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[202358, 3844, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[206852, 3969, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[213994, 4155, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[253154, 5190, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[280145, 5869, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[306270, 6508, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[331556, 7129, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[335465, 7230, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[342371, 7413, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[346636, 7522, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[354481, 7722, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]},
 "Home"->{
  Cell[5426, 137, 136747, 2250, 205, "Title",
   CellTags->"Home"]},
 "Introduction"->{
  Cell[148637, 2514, 128, 2, 77, "Section",
   CellTags->"Introduction"]},
 "AG_C1_G1"->{
  Cell[189770, 3482, 431, 6, 57, "Subsection",
   CellTags->"AG_C1_G1"]},
 "RF_G1"->{
  Cell[253243, 5195, 750, 14, 105, "Subsection",
   CellTags->"RF_G1"]},
 "RF_G1_1"->{
  Cell[280212, 5872, 425, 8, 133, "Input",
   CellTags->"RF_G1_1"]},
 "RF_G1_2"->{
  Cell[306337, 6511, 274, 5, 128, "Text",
   CellTags->"RF_G1_2"]},
 "E_2G"->{
  Cell[331623, 7132, 212, 3, 60, "Text",
   CellTags->"E_2G"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 365531, 8035},
 {"Home", 367361, 8076},
 {"Introduction", 367449, 8079},
 {"AG_C1_G1", 367539, 8082},
 {"RF_G1", 367625, 8085},
 {"RF_G1_1", 367712, 8088},
 {"RF_G1_2", 367795, 8091},
 {"E_2G", 367874, 8094}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4407, 98, 91, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[5012, 124, 179, 3, 50, "Input"],
Cell[5194, 129, 195, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5426, 137, 136747, 2250, 205, "Title",
 CellTags->"Home"],
Cell[142176, 2389, 212, 4, 50, "Subtitle"],
Cell[142391, 2395, 211, 3, 30, "Text"],
Cell[142605, 2400, 5894, 103, 121, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[148548, 2509, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[148637, 2514, 128, 2, 77, "Section",
 CellTags->"Introduction"],
Cell[148768, 2518, 307, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[149100, 2527, 304, 5, 45, "Item"],
Cell[CellGroupData[{
Cell[149429, 2536, 159, 3, 25, "Subitem"],
Cell[149591, 2541, 124, 3, 25, "Subitem"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149776, 2551, 11425, 199, 148, "Title"],
Cell[161204, 2752, 44, 1, 1, "PageBreak",
 PageBreakBelow->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[161297, 2759, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[161364, 2762, 178, 2, 43, "Subsection"],
Cell[CellGroupData[{
Cell[161567, 2768, 99, 1, 28, "Subsubtitle"],
Cell[161669, 2771, 101, 1, 28, "Subsubtitle"],
Cell[161773, 2774, 232, 3, 43, "Subsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162042, 2782, 99, 1, 28, "Subsubtitle"],
Cell[162144, 2785, 154, 2, 28, "Subsubtitle"],
Cell[162301, 2789, 219, 3, 43, "Subsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162557, 2797, 99, 1, 28, "Subsubtitle"],
Cell[162659, 2800, 152, 2, 28, "Subsubtitle"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[162860, 2808, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[162927, 2811, 144, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[163096, 2816, 175, 2, 43, "Subsection"],
Cell[163274, 2820, 307, 8, 87, "Text"],
Cell[CellGroupData[{
Cell[163606, 2832, 583, 17, 30, "Input"],
Cell[164192, 2851, 7597, 151, 198, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171826, 3007, 117, 2, 30, "Input"],
Cell[171946, 3011, 1897, 40, 374, "Output"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[173904, 3058, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[173971, 3061, 92, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[174088, 3066, 300, 4, 43, "Subsection"],
Cell[174391, 3072, 243, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[174659, 3083, 842, 23, 30, "Input"],
Cell[175504, 3108, 2099, 41, 388, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177640, 3154, 1072, 24, 50, "Input"],
Cell[178715, 3180, 781, 19, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[179557, 3206, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[179646, 3211, 345, 4, 43, "Subsection"],
Cell[CellGroupData[{
Cell[180016, 3219, 178, 3, 30, "Input"],
Cell[180197, 3224, 421, 6, 30, "Output"]
}, Open  ]],
Cell[180633, 3233, 94, 1, 30, "Input"],
Cell[180730, 3236, 92, 1, 30, "Input"],
Cell[180825, 3239, 197, 5, 49, "Text"],
Cell[181025, 3246, 124, 2, 30, "Input"],
Cell[CellGroupData[{
Cell[181174, 3252, 2259, 47, 50, "Input"],
Cell[183436, 3301, 1379, 30, 42, "Output"],
Cell[CellGroupData[{
Cell[184840, 3335, 2723, 59, 246, "Print"],
Cell[187566, 3396, 146, 3, 22, "Print"],
Cell[187715, 3401, 139, 3, 22, "Print"],
Cell[187857, 3406, 144, 3, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[188050, 3415, 96, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[188171, 3420, 144, 3, 22, "Print"],
Cell[188318, 3425, 142, 3, 22, "Print"],
Cell[188463, 3430, 142, 3, 22, "Print"],
Cell[188608, 3435, 140, 3, 22, "Print"],
Cell[188751, 3440, 142, 3, 22, "Print"],
Cell[188896, 3445, 144, 3, 22, "Print"],
Cell[189043, 3450, 144, 3, 22, "Print"],
Cell[189190, 3455, 142, 3, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[189381, 3464, 96, 1, 30, "Input"],
Cell[189480, 3467, 140, 3, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[189681, 3477, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[189770, 3482, 431, 6, 57, "Subsection",
 CellTags->"AG_C1_G1"],
Cell[190204, 3490, 220, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[190449, 3498, 764, 22, 30, "Input"],
Cell[191216, 3522, 1965, 39, 388, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193218, 3566, 739, 19, 50, "Input"],
Cell[193960, 3587, 562, 14, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[194583, 3608, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[194672, 3613, 472, 6, 43, "Subsection"],
Cell[CellGroupData[{
Cell[195169, 3623, 116, 2, 30, "Input"],
Cell[195288, 3627, 119, 2, 30, "Output"]
}, Open  ]],
Cell[195422, 3632, 267, 11, 30, "Text"],
Cell[CellGroupData[{
Cell[195714, 3647, 1311, 33, 69, "Input"],
Cell[197028, 3682, 732, 14, 42, "Output"],
Cell[CellGroupData[{
Cell[197785, 3700, 144, 3, 22, "Print"],
Cell[197932, 3705, 144, 3, 22, "Print"],
Cell[198079, 3710, 146, 3, 22, "Print"],
Cell[198228, 3715, 146, 3, 22, "Print"],
Cell[198377, 3720, 142, 3, 22, "Print"],
Cell[198522, 3725, 140, 3, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[198689, 3732, 94, 1, 30, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[198832, 3739, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[198921, 3744, 472, 6, 43, "Subsection"],
Cell[CellGroupData[{
Cell[199418, 3754, 116, 2, 30, "Input"],
Cell[199537, 3758, 121, 2, 30, "Output"]
}, Open  ]],
Cell[199673, 3763, 117, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[199815, 3768, 1223, 31, 50, "Input"],
Cell[201041, 3801, 640, 13, 42, "Output"],
Cell[CellGroupData[{
Cell[201706, 3818, 144, 3, 22, "Print"],
Cell[201853, 3823, 140, 3, 22, "Print"],
Cell[201996, 3828, 142, 3, 22, "Print"],
Cell[202141, 3833, 144, 3, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[202358, 3844, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[202447, 3849, 554, 13, 44, "Subsection"],
Cell[CellGroupData[{
Cell[203026, 3866, 120, 2, 30, "Input"],
Cell[203149, 3870, 72, 1, 30, "Output"]
}, Open  ]],
Cell[203236, 3874, 406, 10, 106, "Text"],
Cell[CellGroupData[{
Cell[203667, 3888, 1208, 33, 30, "Input"],
Cell[204878, 3923, 1913, 39, 356, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[206852, 3969, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[206941, 3974, 504, 7, 43, "Subsection"],
Cell[207448, 3983, 208, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[207681, 3991, 150, 3, 30, "Input"],
Cell[207834, 3996, 138, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208009, 4004, 213, 3, 30, "Input"],
Cell[208225, 4009, 130, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208392, 4016, 133, 2, 30, "Input"],
Cell[208528, 4020, 158, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208723, 4028, 3264, 74, 164, "Input"],
Cell[211990, 4104, 1943, 44, 83, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[213994, 4155, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[214083, 4160, 545, 7, 43, "Subsection"],
Cell[CellGroupData[{
Cell[214653, 4171, 306, 7, 30, "Input"],
Cell[214962, 4180, 366, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215365, 4191, 222, 4, 69, "Input"],
Cell[215590, 4197, 408, 6, 30, "Output"],
Cell[216001, 4205, 391, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216429, 4215, 349, 7, 30, "Input"],
Cell[216781, 4224, 254, 6, 21, "Message"],
Cell[217038, 4232, 585, 8, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217660, 4245, 536, 14, 30, "Input"],
Cell[218199, 4261, 247, 8, 30, "Output"]
}, Open  ]],
Cell[218461, 4272, 1498, 39, 50, "Input"],
Cell[CellGroupData[{
Cell[219984, 4315, 138, 2, 30, "Input"],
Cell[220125, 4319, 485, 8, 30, "Output"]
}, Open  ]],
Cell[220625, 4330, 3217, 86, 202, "Input"],
Cell[CellGroupData[{
Cell[223867, 4420, 187, 3, 30, "Input"],
Cell[224057, 4425, 571, 9, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224665, 4439, 407, 10, 30, "Input"],
Cell[225075, 4451, 188, 5, 30, "Output"]
}, Open  ]],
Cell[225278, 4459, 141, 2, 30, "Input"],
Cell[CellGroupData[{
Cell[225444, 4465, 669, 14, 30, "Input"],
Cell[226116, 4481, 293, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226446, 4491, 362, 8, 30, "Input"],
Cell[226811, 4501, 173, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227021, 4510, 400, 9, 30, "Input"],
Cell[227424, 4521, 243, 5, 30, "Output"]
}, Open  ]],
Cell[227682, 4529, 92, 1, 30, "Input"],
Cell[227777, 4532, 92, 1, 30, "Input"],
Cell[227872, 4535, 224, 3, 30, "Input"],
Cell[228099, 4540, 96, 1, 30, "Input"],
Cell[228198, 4543, 726, 19, 30, "Input"],
Cell[CellGroupData[{
Cell[228949, 4566, 99, 1, 30, "Input"],
Cell[229051, 4569, 160, 5, 30, "Output"]
}, Open  ]],
Cell[229226, 4577, 271, 8, 69, "Input"],
Cell[CellGroupData[{
Cell[229522, 4589, 477, 11, 30, "Input"],
Cell[230002, 4602, 139, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230178, 4610, 311, 8, 30, "Input"],
Cell[230492, 4620, 118, 2, 30, "Output"]
}, Open  ]],
Cell[230625, 4625, 96, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[230746, 4630, 357, 9, 30, "Input"],
Cell[231106, 4641, 161, 4, 30, "Output"]
}, Open  ]],
Cell[231282, 4648, 779, 21, 50, "Input"],
Cell[CellGroupData[{
Cell[232086, 4673, 95, 1, 30, "Input"],
Cell[232184, 4676, 98, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232319, 4682, 428, 10, 30, "Input"],
Cell[232750, 4694, 168, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232955, 4703, 312, 7, 30, "Input"],
Cell[233270, 4712, 118, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233425, 4719, 338, 7, 30, "Input"],
Cell[233766, 4728, 585, 9, 30, "Output"]
}, Open  ]],
Cell[234366, 4740, 94, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[234485, 4745, 275, 6, 30, "Input"],
Cell[234763, 4753, 143, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234943, 4760, 276, 6, 30, "Input"],
Cell[235222, 4768, 143, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235402, 4775, 5205, 121, 259, "Input"],
Cell[240610, 4898, 1968, 40, 417, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242615, 4943, 5751, 121, 411, "Input"],
Cell[248369, 5066, 1761, 36, 42, "Output"]
}, Open  ]],
Cell[250145, 5105, 94, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[250264, 5110, 130, 2, 30, "Input"],
Cell[250397, 5114, 159, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250593, 5122, 140, 2, 30, "Input"],
Cell[250736, 5126, 166, 3, 30, "Output"]
}, Open  ]],
Cell[250917, 5132, 330, 7, 30, "Input"],
Cell[CellGroupData[{
Cell[251272, 5143, 1242, 25, 50, "Input"],
Cell[252517, 5170, 576, 13, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[253154, 5190, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[253243, 5195, 750, 14, 105, "Subsection",
 CellTags->"RF_G1"],
Cell[253996, 5211, 367, 9, 30, "Input"],
Cell[CellGroupData[{
Cell[254388, 5224, 210, 4, 30, "Input"],
Cell[254601, 5230, 70, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254708, 5236, 130, 2, 30, "Input"],
Cell[254841, 5240, 70, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254948, 5246, 431, 11, 30, "Input"],
Cell[255382, 5259, 334, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255753, 5275, 258, 7, 30, "Input"],
Cell[256014, 5284, 271, 9, 30, "Output"]
}, Open  ]],
Cell[256300, 5296, 353, 7, 30, "Input"],
Cell[CellGroupData[{
Cell[256678, 5307, 1224, 32, 69, "Input"],
Cell[257905, 5341, 253, 7, 55, "Output"],
Cell[CellGroupData[{
Cell[258183, 5352, 4335, 97, 367, "Print"],
Cell[262521, 5451, 4425, 99, 367, "Print"],
Cell[266949, 5552, 4530, 99, 367, "Print"],
Cell[271482, 5653, 4215, 95, 367, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[275746, 5754, 1494, 34, 126, "Input"],
Cell[277243, 5790, 794, 17, 42, "Output"]
}, Open  ]],
Cell[278052, 5810, 385, 8, 30, "Input"],
Cell[CellGroupData[{
Cell[278462, 5822, 1133, 27, 88, "Input"],
Cell[279598, 5851, 486, 11, 42, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[280145, 5869, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[280212, 5872, 425, 8, 133, "Input",
 CellTags->"RF_G1_1"],
Cell[280640, 5882, 303, 8, 30, "Input"],
Cell[CellGroupData[{
Cell[280968, 5894, 214, 4, 30, "Input"],
Cell[281185, 5900, 70, 1, 30, "Output"]
}, Open  ]],
Cell[281270, 5904, 189, 4, 30, "Input"],
Cell[CellGroupData[{
Cell[281484, 5912, 233, 6, 30, "Input"],
Cell[281720, 5920, 393, 14, 30, "Output"]
}, Open  ]],
Cell[282128, 5937, 70, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[282223, 5942, 1519, 39, 88, "Input"],
Cell[283745, 5983, 277, 8, 55, "Output"],
Cell[CellGroupData[{
Cell[284047, 5995, 4507, 99, 367, "Print"],
Cell[288557, 6096, 4507, 99, 367, "Print"],
Cell[293067, 6197, 4509, 100, 367, "Print"],
Cell[297579, 6299, 4520, 98, 373, "Print"]
}, Open  ]]
}, Open  ]],
Cell[302126, 6401, 1401, 31, 126, "Input"],
Cell[303530, 6434, 981, 21, 62, InheritFromParent],
Cell[304514, 6457, 96, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[304635, 6462, 1148, 27, 88, "Input"],
Cell[305786, 6491, 435, 11, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[306270, 6508, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[306337, 6511, 274, 5, 128, "Text",
 CellTags->"RF_G1_2"],
Cell[306614, 6518, 332, 8, 30, "Input"],
Cell[CellGroupData[{
Cell[306971, 6530, 214, 4, 30, "Input"],
Cell[307188, 6536, 72, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307297, 6542, 405, 10, 30, "Input"],
Cell[307705, 6554, 256, 8, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307998, 6567, 1504, 39, 88, "Input"],
Cell[309505, 6608, 228, 6, 55, "Output"],
Cell[CellGroupData[{
Cell[309758, 6618, 4532, 100, 367, "Print"],
Cell[314293, 6720, 4408, 98, 367, "Print"],
Cell[318704, 6820, 4531, 100, 367, "Print"],
Cell[323238, 6922, 4320, 96, 367, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[327607, 7024, 1774, 40, 145, "Input"],
Cell[329384, 7066, 668, 14, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330089, 7085, 1037, 26, 69, "Input"],
Cell[331129, 7113, 378, 10, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[331556, 7129, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[331623, 7132, 212, 3, 60, "Text",
 CellTags->"E_2G"],
Cell[CellGroupData[{
Cell[331860, 7139, 101, 1, 43, "Subsection"],
Cell[CellGroupData[{
Cell[331986, 7144, 991, 29, 30, "Input"],
Cell[332980, 7175, 2424, 48, 428, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[335465, 7230, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[335554, 7235, 149, 3, 30, "Input"],
Cell[335706, 7240, 87, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335830, 7247, 3466, 71, 790, "Input"],
Cell[339299, 7320, 1662, 39, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340998, 7364, 134, 2, 30, "Input"],
Cell[341135, 7368, 159, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341331, 7376, 275, 7, 30, "Input"],
Cell[341609, 7385, 199, 4, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341845, 7394, 260, 5, 69, "Input"],
Cell[342108, 7401, 214, 6, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[342371, 7413, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[342438, 7416, 195, 2, 46, "Text"],
Cell[CellGroupData[{
Cell[342658, 7422, 101, 1, 43, "Subsection"],
Cell[CellGroupData[{
Cell[342784, 7427, 1117, 34, 30, "Input"],
Cell[343904, 7463, 2671, 52, 454, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[346636, 7522, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[346725, 7527, 141, 3, 30, "Input"],
Cell[346869, 7532, 87, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346993, 7539, 4073, 83, 868, "Input"],
Cell[351069, 7624, 1998, 44, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353104, 7673, 130, 2, 30, "Input"],
Cell[353237, 7677, 159, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353433, 7685, 279, 7, 30, "Input"],
Cell[353715, 7694, 199, 4, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353951, 7703, 262, 5, 69, "Input"],
Cell[354216, 7710, 216, 6, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[354481, 7722, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[354570, 7727, 292, 6, 30, "Input"],
Cell[354865, 7735, 3076, 81, 104, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357978, 7821, 145, 2, 30, "Input"],
Cell[358126, 7825, 104, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358267, 7831, 874, 17, 200, "Input"],
Cell[359144, 7850, 448, 11, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359629, 7866, 138, 2, 30, "Input"],
Cell[359770, 7870, 163, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359970, 7878, 1192, 36, 145, "Input"],
Cell[361165, 7916, 2654, 57, 235, "Output"]
}, Open  ]],
Cell[363834, 7976, 68, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[363927, 7981, 407, 10, 30, "Input"],
Cell[364337, 7993, 805, 26, 30, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

