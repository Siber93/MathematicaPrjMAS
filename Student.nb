(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    564857,      12368]
NotebookOptionsPosition[    536371,      11448]
NotebookOutlinePosition[    544227,      11683]
CellTagsIndexPosition[    543189,      11644]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[1, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAKiEGSLED8//9/gvjRo0fsN27cELp69arY+fPnpZExPn137tzhBqrRBGJ/
ID4CxMfRMTZ9L168YL5w4YIaUD4AiC8C8Qcg/gvE/9AxFreC7PQD4gtA/BGq
7j8ujKz3+fPnLFC9b6H24dSHTf/FixfVofYSpRdZPzSsAqBuJkovsn5oOF8k
5F9s+h88eMBBjt0w/devXxcGso+S4m9k/ZcuXRKHpgeS3A7TD0wrkpToPw9J
ywOmn1L3Uxp+lMYfpemH0vRLjfwDjQey8y9a+fGOWDPwlF+gsPhEKDywlZ8g
d0D9EniexPITGd++fZv3PBnlN6764zxa3QHCAIDESDs=
         "], {{0, 26}, {16, 
         0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2V1vVFUUBuBGTfTSSygthYYKNHyVinrrpbcYfwBEJN5gUkyMfw9KKaVw
KCkQKCW1RNIQKg1gEE3QtdN10pMRZCaBzNQ+kzxt5nzstfeZfbPOu/vkD8e/
e6+vr+/sR/Hn+ImfvpyYOPHz1x/Hl2/OnP3+9JlT33515sdTp09NfHHy/TjY
H6592Nf3QfyvqmpHBwbCYNr5GoMNAw2d1AEAADa3/obtLba1aJ7rb4xR9x1D
YVfYHYbDnjASPgn7wv4wGg6Eg+FQOByOhLEwnj4Nx8Jn6fM21dcfyzHq8cay
xuGseTDnMJpz2pdzHMk5D+caduWa6v6p+czafU71s6p1+/cGAADYqt52/9va
++6tXt331j3v0TTeoj5e966v6lv3Vv/uWfWr9LJm9tzMpN+UW3eaVV9s00yY
CzfC7bAQFhvuhjt57maYD9er9c+VcDlcCtMd1AQAADafqXQhTabz6VyL+vhk
Xl/uLX1D6UFmw9VwrVrvL0o/cqta7ztKD3Iv/BLuh1/DSngYHoXfwlp4Ep6F
38Pz8Ed4Ef5Mf71Gff5F3vM8x3iWY65ljUdZcyXncD/ndC/neDvnfCPXcC3X
NJtrnG48r3afU/2s6uc11QO/OwAAwFbzLvrfksWVjK30kSV3KxncUlgOD6qN
vnc1PK42+t7iaaq/r+U1q9VG3/ogx1rKse9krfmsrV+l15R9WDLmkjWXzLl8
yvuVsmdLJl3eu5R9XN7BNLPrhTxX3seUvT3TQc2Xbfr7LWq3JgAAwH95m33K
u9Dt5wMAAMDmp2dlK+vGnu/2+yQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPN42aZu
1AQAAAAAAICtrNsZIXRTN/b8xTbNhLlwI9wOC2Gx4W64k+duhvlwvVr/XAmX
w6Uw3UFNAAAAAAAA6EVT6UKaTOfTuRb18cm8vtxbcrOSwc2Gq9V6FlcytlvV
eu5WMrilsBwehJXwMKyGx2EtPElPU/19La9ZzXtWcozlHHMxa9zKmnM5h9mc
03Rjfe2uq15bvb6pHvid2NzKPiwZc8maS+ZcPiWDLnu2ZNIlmy77uGTVzex6
Ic+VbLvs7ZkOau7owEAYTDtfY7BhoKGTOgAAAAAAANDr+hu2t9jWonmuvzFG
nbsNhd1hOOwJI2Fv2B9Gw4FwMBwKR8JYOJrGW9THx/LaQ3nvgRxrf449krWG
s/ZQtZH3NdfY7rrqtdW6/fvw/9LMnpuZ9Jty646y6n8AhCP7tg==
         "], {{0, 26}, {
         2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lktLQkEUxyVdCBIELaxctYq+QduWbcKMPoCSRRsDC6JPp+Lj4vuq+EBc
iBtFfIYrpU7nPzQiN++9vmrgp/dx5j8z55w5c099z56HPYvF8mLnH4/37TIY
9L7fHvDNXeDl6THgv78KvPof/cELn5UfnjBHjI3J5/OudVBV9bhUKjmbzaad
iCxmcB9lAxKMmzmv1+v7JvpfG/DJjJkic8NrOut0OlYdfdoCjPXBqMx1q9Vy
7FhfgvX0MUa73bYZ6edyuTnrvPsZQ4Wv9PTRL5vNroTOGIiJu9FoOLT6UjuT
yVAqlaJkMin+0+m0YPEZbHTGQDwKyKtl+ugHjdFoRIVCgeLxOCUSCQGua7Ua
9Xo9YQNbozXI/aHVZ//RcDik2WxG5XKZwuGwANdo0JfrNIhDvFqtHi7zD+YW
i8VoMBgIvWKxKEDrdrtiHbAxiAF8pHAf5zJ9+Bca0WiUxuMxydbv98U64CvY
wNZgTyioI9r8QR/EEvrQUhRlrh8Kheb6sDHTZ1xG84ePMP/pdPpr/tvoL/of
Mcb9Jv7X+mcxP2X+QCMSiYh5VyoVMQbXMbP81I2vzM/JZCLyX+a+BPmPvbFN
fmr36pr713B/rVp7THy/tD6Y1cjF5zrahvVtB5jW5y21B/kVzpc1kecjfK53
Pu7kfNfO+x+/T/70++ob7NUEtQ==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 CellChangeTimes->{{3.733999395636707*^9, 3.733999398982295*^9}},
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<Package.m\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadFiles", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7347162289520006`*^9, 3.7347162311551714`*^9}, {
  3.7351172544707575`*^9, 3.7351172842609444`*^9}, {3.7352392186580467`*^9, 
  3.735239219776279*^9}, {3.735386288513877*^9, 3.7353863122992373`*^9}, {
  3.7353865888090525`*^9, 3.735386591168188*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Rappresentazione Grafica delle Funzioni ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
TGxap5/pzTmDfi6EG4pHAzoJQBvwDJccR8cHt451GMHwXCK6jTFtWRwyL46a
icOGuQ49pl012irraZC8fs4tL2bcPEq98iO18Efq1cOMm2dY969wHpdwnt4A
ALJcXbpcUyqourdcdU/w8i78orqU//wOt/wm+8mNpdIi5i24oQPlyj6wBXrJ
YfajS6L6MllXg3rotX6qDc6MxvWbiUNW0qCNPunkkbwyXtiiScAldpOI9zyo
XzEtjNnomDgcOf/TKjtz60jKe+tGv/wYs/XPZtIUFA1na2ym02tuIjCyBXQr
C8d3Tm5ZJ2l5YaZgEuEgcrqQQCwEhO0snGa0wS2iSztqAPEWNz518XHqoVoH
jwS7qNKp3MJvDeO/5keUt7z9ag1lLFkV5pGyVIMvHVyCYqB1ZucX4qZnLj5e
O9FkW8JmCiTmRGWOxWSvU5jgoZ9Ca+AR4ahRr1tY93Dok3fwx3f7VEL00swt
iOZu55R7RkqvemKcJo+U7WDjrdQJa6ZLNRDR2tEmWfcrYV0Z68FF2pX91KL9
zLtnAdaJGsplXa/Uo626yVYA7FbyiJM97xYQXQKCS7DgFiw4OVjwcHGwDta8
i4sHf3KDP/HwTh4BfG6ljABVrp14rR5pkffUgSMgeHl/6f4FWvEhGviKO2f4
L0ulrS/Uw/VAsIOR2KjjNsqojTHrEtLDZjWEpuEkIwHEv5Nahbtc4BL8Scik
wB/bPfjxOyutlXGfCz1ib+eGw7PBdvbj4tENH8h7G5KREKDPKbSgx1vnMZ2G
z91AtUtI0Yx1zu39mv/iDtgv9WiDjTkP1zhCPUprTnwayh3kPFjmLW8/ZbkE
N4BxXhlbNVQLLrGV9pfTO75Q9DXb2fPasQaneAnKthVIoQUKUyhVREt+5eqV
5dTf6qUHZ9v5VOLFs3sGP36XU3YtGfTkQBTZEhrinIUFZDzxkN+n4Frp0xbS
sJUMszITvk/R/ZL/4h7z9gVK4T76tcO8ihvSjlr1SIdhrseE77HTJ+1Ls1ba
lIU8bpzr1ozUK3qeyzrKVlofg4e8s1zWXiZpLl1pewyzYkK/qr9K1v5E1v54
BTy/eQoW1ow3mBf6AD90sOftrDnwpTAg47qNcz3aiU55b+NyzQPGzROUS3sZ
Jad5z27L2ioM0+1WGsYGvpQ4bCFPuoS0uNeG1nJcdeis3j5gR0/KMNc7vnEd
9uC3XrkwDfvQ0d1fPS7w/UXRUzu6/gPO06sxjyNXLP0v4RFZOZXyKYXa6TYr
BWNenMHu/4b1qMi9vADQ3sacRd1GECoCctCIiIF8jaC85e0nLFeH0S2mK/tf
+lVCYd2Tqa2fasa77YxpRV+lXy1C27zCoeAxny21pi4ZSmaSa0AgDa0GxUA5
LpSMRkzkmYmNH05s/Fw11JyMBMNmZSKI5CxnK6plL+IMaXSwcQYs0LODTh7e
xphSdL9gP7pKvnSYfGE359EFwBL1c0Nm4ogR12siDJoWhszkUQMObv0grL0p
eFbILj3DfVTAe3KeV3ZB9OqmpOmepPGesPYGgEegPUWvbgHAlLY85j65IGm8
I2m6K6q7Jay+JqgohGcm4fnJK6LaW4qeSiO+F1BN9zLBwZo2EYdMC4MAh02E
AcPcoGqohVdxlXL5R1LBPsadi5LmJ+aFfgcHZyGPGLA9NvpsyKTM9MLOHhsI
BT3E+6/srR798iN+xfWI0/oXEJpCmb2VNoPZ9tXiqZ1epRDukrOm2+Pak5hC
sxfBc8iq1Y41mvDDdjYRu+8rWslZn5oPYN9Kn8kskWv7mF4N1cwhZt7yljfU
coQPXHheOUvW8yKglYobHmO++1Qz1uHgzit7KwMGZQbpksgVFTLJ6dfPyDur
gjoRBGXDtjPXVjzrXMgWLFxTu3DNhR/12Jerbve/+9uprev5L24DFRz3WNKr
qABXrA3bdBbKpHaq1UIdd/KIekwb72nxYsH+xTPbuU8KNeNdVsqMeXEQCGH9
bJdpYcDBnPausHwqAALNrPtneGUX+RWXV1qf2BhzbilPP9svabgLNhg0qQxz
A4ybx1ZaywIagRE3KGm6z68oUvQ1ukV0ecczZW+VR8L0q8Re+bKTRzHjB+Xd
FYIXVwEa8yuuKXpeOrj4oEHuU/KcPJyZOKCbbtfPdMBlMOmzhvnh5erbpIJd
hBO7mHfOq/qrHdwFJxsLFjASBgIaIRxymQ3Lz3Js8L9hvgdwSNGr+zGPPXPE
0Nj4bJniVFAvJRzfhdn6uZ1DTmZ6QOQo+k+eyjR6nMNOk26i2UQadgoYM7v/
TL9VAIYN13inYbIBnGu0f3Y4fyOyPW95+xe1FFy1RijvfBYwaSSNj8a+/tAw
22MHnK3nedhuzDa9hhJINGAi6CMc/XZk3Z/m9nwnrLnrkdLT2YgUVFKnswHN
aH53NhIvjfqgHQLmxMaP8Ee36DAdUacZQGI6swnwp6hNa5jrVg3VO9k4IFTl
Xc/JFw7M7/uWevWwaui1k0uyMaa1mFb1SKMR2+MVU0MWNcCWZNAHxaMxt1U1
2CCqfxI0aXSYXsbN4/q5vqBBKm17tnh2h2qwMWLTmhfHmTeOiuvuh00KC3la
XH9HUHlV2fdK1lHFeXIZ3A7s7LlsYdtkHIoEwcZDZq1HLjAShkV1d5bunRU3
PfYqhIlIMOp1hu1mn4IL5L9mrEk30WJbHHZwF/WzA+wHBbhD3y2c2iN6dQeI
dM8yUQ9j6Ru/ipfIuLbTaIQiuBfgjuxaLNgVMGjgMIDMp7m0l0Q0wrp/aXjd
u+rBxsSaNjc/aXAXm0wqZRoNPYp6HQAk9dNvPDLRzPZ1tGsnwya1su+FjT2X
huOwVslk8mfj9/OWt39RW5POBsXsupXXD/1asfxNxdj6DzST7R4+Udr2EJZ+
OcKT86FASdVAbf8Hvx3d8N7gB3+Y+GYd++FFJxeX87NkLJnOAWO2g3b2bSIU
MBIGV1qehGzGJEyrspEtUbfVMNutGqhycbA+OReIX/zhrXN7v+E/K3KwcB4p
C5AxeV+VYbbTI2XCgdwhP0DFdDaXJ5lpPxszk2ZkrRUBJU/RWcm4ccSIH0xG
AwG9zCUgRWwGuDKjVW0hDoENBvQSRfdLccN9ccM9zWirbuoN/epB3JHNpPN7
LJTZtXmFGaxPJqORuM9txA4C5W5lLmQPHZynEksCtPR7ACm1EPpU/VW6idcu
AcUlZklbnuKPfjez6xte2RUnF+8RkjXjjdqJppBhBcBvGlG4UMKIHZje9rXs
zcuo34lky6TRuwy4AQ2ve59XcS3qtGRwLPGTKhg5leDmIm16EPc609nUeDgm
IR70K4dqTfh+t5g9sfkjxq3TMbdN1v7EI6Kkszmbb6NuHijzlreM5RAyEQ5K
Wp94V5ja0abBdX9S9tX6VVxxw92Y1wqtltJ6i2NE3ZaZnV9IWx6KGu6Of/NR
//u/G/z0XfLFH434IQjO2oOyhS+gzKwZlETDV5Ds4ARgoXAMIXIhA6rjc5mJ
Q/Kucht1wivjiRpKZ3ZvmN37tfT1o4Ba6BHR1cOvFP1VdiYm6jJCiSjadwYZ
fhqd2oM/cQmZ4sa7NuZcyKy2kkYdS/OZrtzzAFcV3ZXL1dc5D84t3T4OaCTz
xjHy+V2iV/cAVmun+wBuSNsqp7Z+OvzFH3nlJWGTMp3OhSzlYumTuukecd0d
n0Lwl5V4M7MDUCIGds0joWvHGhWAjtKnggaFZrJl4eS2ya3rWPfPObmwM13R
+0I/1RKxG5GSaMlETDfbjd3/Lau0wKvgJiIhKBbzqbnMW6eGP3sPMNtwZooS
zVF6C8HWprcDBk4vPkgrOgDForlRpdMJcFtQ9FSaF4dcfNLIVx/wnlyO+ZzS
1w9CRmUamdZEIyTz6Ji3vKVRMYxMEILrEVw+TtaMmTgy8ucPxQCU9DJx4/2I
zfgLFwwgb8tV13CHvoWi4YhdJ6y9PfXtZ73v/Kb/vd9h930t76kMWnSAKwJy
CgMMkKuA7GVAMgllBSaSNBf3uxwcgry30gAks5wr63g+t2cD9uAW2ZvnQSXP
zpoGkhDo04Ba8Et5zbm9govWmsBGAPTxyy/znl7mPLlIvrgXPADYShrvLd0+
Ju94HtIK415LMuLXzw8peqpWWp9qp3ogKA5oKvPu2anvP5vevk7cXBZ1GnP5
5ggeQ7GQtO2FdqwFluFZn/tPHZzM0mGLCva591VZiINBjdgw00G+sH9m+xfc
8iK3mGWljMu7KszE/ojTnCmlC/kUHPbDS9iD35LObF84uXXyu8+mt22Q91Qh
GYhr7lAQlJ3bzaWlZw5sOKjorR785A/gbsUoORLzu3OcP3MKErLuCidz2sbE
DK/7UFR/N6gXS5sfZDoBZWO9csP/u35Lecvbr8mgtc3+UqlYOACuXMvCsJNP
nfxuHb/iesCoBvI2oOEnk8lf3FDSr14e35ypaQZBQPMCXJr6bh3u8PbRLz8e
+PD3099/Lqi8YVta9GuVrmWai49PZ1VpRhRDyXg4ENTLdJOvNSP1dua0crAR
f+w77KFtKy1lgM062PNygI2zXSGjPDulCf3STNmqkyKZMBKn2I8u2JfmAMQl
wn4TcUrZ35wIB2I+m2a8RYfpQ3Iq416bZuS1aqBO3vVCM9WLpDFayNOUC3uw
+78mndupmxlIRINoAAw8BpeAuvziqo25kCvT8XOjybn4Yx6bhTym7H1pWRwO
aETa8RbSxYPY/RslTY+d/EX9bIdqsMYtYcR8LriTQjod1CwbsL3q0SYTYSji
NCBnAQ4ZSqMpNtndzdayQO4LgGSCm9TAB78fhluGXaRcPsy6fyoChDl8R0KE
O5QMueXdlT4ZSzPeNrb+Y1V/vUe4CA5yZtJ19fj9fb+nvOXtV2arl0AqGYva
qOPayXavjD//4ybmnQIgu+TdzzxiGiBUq1mEP7kZIN6iISBUCce+96vFKy3P
Fk5v1810xzxW7UwnveTc5HdfAj4z9NkfsQc3csuLvVJGblYvGY+FrVoreUwz
XGdZHDHhJ2nXjmIP/SCovu9gzbp4BO14o4k4FLYo4Nm/sD8ZCSAr/hwooRHY
2QlQl4glrr9rpkzD05/xqHkRI28vD5sVYFP6qW7Zm5ceucC9wjYThsFiBtyI
arhdNdyajATBNmIei2a0mXBs68TGj+glJ53cxXg0nM1Uj8cU/U2S5od+3Qoa
ivNzB+ctvzwQuWCzALHhewFt0iOmyruqFk79uHBqm3qkFRwHAJsmXE9AJ01E
I0iHXPRM5ZLdES2Mkkg0LiAzfZHy6xSsu+d63/3t2MbPVt5UQolEMuiiXTvO
Lj0XdhjTaEgqXO/Srld2V3pXWNLX5ZObPjMRxmzUCc1EczbaCrZkHiTz9q9s
qy1hUim3iK4aqvcphYvnfiSdPwBUHoAsJxefITN/40qBMr1WrPTZsQ1/Il/8
cbFgv40+jYaZpBIhv5U6ySm/Nbt7M/N+YVCLthoEDC/kcUlYuuk2/XSXCTcg
eHGXcHwr+8lVy+KgS0g3zLwB3ClklCE0KeywaCc6DLhRJAf5l9PjcgwIoLR6
pElY99DBJtloM7K2Z+L6e4DxAoywLREFVSWiujvS12XsB5dYpeccfJJ2slfR
UwMoZTrzrSGzStL8lHb1IOn8DsHLGz6lIJWJkw+oxctVtwz4cbgOMLqnPz0S
9K8A0wBc6+eHQ1Y9oHExl9HGmNVhWhyseTtjWlj3hHBqJ7gxmfDjRlyfdrzZ
KaBGXRbk69Kr3SGz0TgocCKBBZkgq3jMLWKRz++Di3vs3qTFvAGAjNDLsFm+
cGo77/n1RNCdXhPME9aJlX0vwE2NV3FjZseXDg5Zj+01E4bgQhzZKd3/hZ9V
3vL2KzE0TjEd0K+oBmsDMgbrweX5A1tdPKJuqtVCnkQCb1LpXCfBnzbEVR0P
BhZO/jCy/gPnMmVVWqITcfFIyMqYizl0SJwdgNSwVW2jTWnGm8zEIdVgK+n8
XvLlY+qxVidnzkIcMBEG/RphKpu2A0W8TtVwG+7wJsaNU3YuKf2L85BIAwmU
WyVtrAX61YOse2flXdXKgSYLbTbus6fhPtSekFkRsakTfodhflja8tgjoWnG
2qSvHwYQGM8gc0ArEjeUkgt2LJ7ZoR3vSAQ9yWhQOdgkrrvrVYqyOXrpXxDa
2YEEDUrukyLCsS2yrppoxtsCI7BJaaFMGue7HZwFI7afVXqFePIHUdNTC3FY
P/PGiO0BYhzQ++wtJddxYtUvlT3OiUjQRJjEHd4y8OHviKf3WRkzqQRSvz0b
xm9nYyc2faQZbk6tWRGcBY+UqRyo8si59JLT+GPbvVJ2BpwXc+WI///8wPKW
t39ygy+2iNOkHq7ziBgrbS+md2wwLYyZiWNGbB+46NB0v6yy/NmtZK4joJc1
4y1jGz5y8Mmr5V5z8XjoRBmMkPGoR8YxzHQAGNTP93DKri+c+kHcWGYhj1hp
GON8l0eylIz4U+jqMb9HPdlFv3pEOdisHGjglBV6ZPyfR+xMNHsu1jqVClv1
K23PxY2PYy4TFI+A/co02oYS4QDghBbytG52SFj7QN71wkwcXGl7Imq4becs
oggMt7S2UDCUwgPz+77hll2x0WettGlB5TUjfjQZDafXpAX+3MEBFvfaxU1P
BFW3NGMdS3fPAiEf9TqzIJ6I+lTCbO0L2rii/zXp4j5GyRntWIuJNKWfbnfy
ScloCMp2zM2RydUEmLjXqhhsxWz7cujTdxi3znnETPTOkktahJdk3D4xteXz
oEmZWpP8DkDSxsJpRxu9YhpASOatAp+CpRp+5deIU9nORHnL27+qwfNpYcNc
t50+Z5gfwvzwZ+Vgm4ON1Y03R91WdP4fbeb1i56RzH9QxGGc3bWBduMEgB80
KCa5Jocmc0VGI3Y2TotptTGxiv76xfMH6ddPAgpnJcHVIcCfwjb92rybZDhg
XpygXj0s73wZtandAoqw5haAGqB/f2nHMi28szOSyYSdQ+I/vy5tqVAPtSh6
6pwCOtgnwJwBbxRUFPPLi5bunAQsWtxwf7nqBtDdQMujEUQZD4vXqehvJF/Y
Szj2LfvBOc7DAnl3TdhqSKV+8bjkxpKMayfe0EuOGbB9Qb1YO9ZKv3pYh+mB
OxiijDDuc7hEDP1sp5k0bloY5TwpIZ7cKWyqAMipn2kzU6bgLBukcTay1ezr
VMgoF756OPrNx6NfvCeovBPQSZPJRG5YaN00+MlM6O955zcrbU9T2XFn8TYZ
i5gJg0Zcv5U+D7S2uLncswIn40fdhnzt8bz9K9hfMZxVRufgEACX84goc/u3
8sqvu0VUZX8VkH5re5uik2xQDg9y8JVe8wmcAxKLSpoejW34xCthZFRhrilV
GhHrABNMxGHwjXYWXlD9YH7/FmHNAweLYMQNGOd7AlppriVWFh7jUSePzLx9
WlBVYib0eUQkK3lEPVzPe1a00v4SzhnJhULmGs2senUzCJ2IA94YD7gVA83E
Mz+I6u5LX5epR1qgWMivEUkaS1UDjeqhZkHlVVnHU8KJHYyb5/iV1wAAxrz2
3D6Cp6BRLnpVunTnFL3kKK+i2CPlJgJuKBrM6d41M4Spt24KEGRj4Jg3Twgq
iy2kEaTsj6j2FrXooJk0BfB/7ZIho8pEHNJPdTiYGGVPHe7YFvr1U5bFEfPC
gH6mM2RSIU528EWJgMtCnjLMD9Cvnxn+/L2xDX+Sd9ZGbHo00SY7GGj14EBh
s6L3D78hnNiKlD6D1tDsmM+unWi2Lc2pRzqmtq4zYAdsS/Pg1om41FEJgJyZ
fD3JvP3a7K86fmZhJGxcUQ3WBA1yAAsLJ7Z5ZRxlX5VHupQt2Z3I+migXDBJ
GnVBp9DWLxCEuiEymXHJpF+zMrHpY3rJcaCXg4aVTB8EKEsenUbdVIcJ12uh
TTJunsUd3Mh5cgUQG2VvtZ2OibgsKN7mKmonvUoJ+/ElPpwJ+NKI67ZSRoz4
biDDpa2PWffOaMY70yk0RhyFgty9AIqGYl5bUC+zM2fs4NofbWLeOSl4eUs9
1Kgaaoz77BG7XtlbtfziurihVIvp1k51Yw9sWrp/WTVUJ667Y2cvprITf5ld
i8eCJu3Km2ra1YOSplIb2CZrLmiUJXyOZMiXymUkoZE9aXRuIqCVsB/CoZjy
zqdOFgYAkZNLUPZV854VgqPkEtCzk72oATD3SJjaiSbD3BsLZRZ/9HvCyT2G
WbhmiGq4wa/gZqYIwHgi+pmOuf3fDXzwu4mvP1CPtcd9rlwmNXovy51yeI2Q
caXvj7+Z2vop0OzoCYVyfw5ZNIreF14RlVtWNLdvq0/K0E61OPiL0NoNoqvk
ETJvvyqDsiVV0aks+DkZCwMy5lXyV9pfTG1b51xmaqY7bOTRTKALvGxQsyys
uWOhTCQytWhQeobM3ueurASKgAhdgeKhAP36YcBqxPW34x5LMjuFmQibVKrB
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
2m8iAq4rgHfW1bPUsixizmHC2UMzGXsxR3+dTts1dWTH2K4to79uHtnxfe83
//XxH/+778fP8dkHtJPvk23doP8iPoNieeCZXcKaPrFzebDFxp6087F/kFO/
IRvylxKE/8HqUEQ93urRSJlXcthXsoE+qJl4G3I7kkV0/09ux1QONXjzm5ZG
tn+jGnqB1I0AAw2MFEVn3apmlnu3YOrIzxG/W/7+ng+u6wJ2HFpdgRlHNBrw
OaR0elnm4E/fzL+8C0fiwVsNh5IR4wIyUHVhLTuBHFUsEoqFglCP2lAw4nOb
qaPcW+eXup6wr53TYTqEtUXkC4cmD2xi38hVdDWyr+WSCzJUAy/YVWfopelz
LbftXIxDTAy7LAAt9IBD3gJadh/gkIB8AqUVn7WLWZ4lbijTTXUoB95wb+Wp
h9/69ApAwzTjrfTyrLE9302nbQWwI3pUDnCeX3OBc+Mso+w483Im4HW0i8cY
lyDWJ31+m19XqpnsRhBSS5pCNdaEbqabkLOPX1uyIhfw66sGN38xvncTUKUJ
Z/dYBYxYKARpwYm4S84T1pXOpG8Dr4W3NdisvTMnd0zs2zT0yxcA/7m3oBDH
iQOAKhcF7QYo2geOGLeLiMLaEmZFBj5z1+SBn0Z2fje8/Zver/8ufnwl4vfE
4QTqaDggb6sN2Q2c67ngXPxOw2zL9fCKOXlf49G5l7e6P/9b1+f/0ffNP3q+
+/vw1q+Gt30NXmDvk4c3TxzaPJ22DX/qV/yZPeBEwPQhargUcpoR7w+YW820
IQOhS/HhITbr0KpSohpuCTuQtgsbILkhf3lBWR9C1azcGTN9SDX8CnN8u11A
Vw2/WFXPxZAsmHjiU1otsqHkkI9B9bQBHHV99h8zab+Evd4kBgPlV8GWvasJ
WNQj27+ff30bqOFL3Y+iEM+B0DlgVjln2fz60qEtX04c3LE8+DJFM+DIwJBT
RKKVnHQgHFJChjrehAIrC7z5V7dEjWXSp1fEjWWyd/fkH+rYV08Dtjm89UuA
h/qpdknTVdHDS+zrZ8WPKjWjb/j3i6YO/8S/XwK+YlRmUy4c4dcUzr+5D9RD
NNqnT/ahcTrtZ8Lp3bPPbrkXGEB35lQXAiDCZu4a+/UHWumJuWc3VP0twgeX
WFehDjjUi8cAcQX8jQzI6tMq5WAL+3qeoOairLWGmHtofP9mbvUFRmWmZrzT
ysawbkBZh2iYehQgJPdOPqXgMPdmLvNyFmwfuEDMO8i8cko92KIefmXnYcPe
FahExugb2Yc6UUPFcvcjcL7CuiJizj4AmMIHJfw758H61ILD4gfFfige8qKd
NxMN+kMuaywSQcyDEd/qqlJoY08s9zyWt9WFPWDug/4D56vDfnQICf0/fWmm
DuqwHQZCdyJZEwm5OVF+TfHIjq/N5MHVZZ7frApaVT6rBmwwFg4jGI5knqae
E/AORULGY0GHSTXwzCllU3IPiBsqXHKObrojqYBvWCA35C8vSUMQomuDB91t
VY++9qrnieeOz76oNpEHjYTuINDIkjHAf/hIw26aaMArb3/U8+V/DW7+Rva+
IQyIChoaBzaxPNTiFJMWOx4BMrOqkWvG3zgEWKhKZDTqnGXNHN869utP4ifX
vUZFKoAEHkdRgIYOIZEGOCSPSDwHIWQCLokGdGd6yQn8mcNW1oSgtohWcmK5
54lm/B3QhQEoLXU1QX30YlH3klRwr0BYV+GUMJYH3lKKjsne3bcL8EbahKzt
iWtRomirM7OndRQM59Z5E6lH0d5IL8+QPrmsm+5FFHALGw+AF3tyJ+boz4Sz
+6aObh3b9S3m6BZm1RnB/UL86T0jO74BYCWqvySsv4TN+nXm5Pal3jcW2qTk
cZVmom257zlgksrhTsDMOTfz4LzsJP67FtgAWjHHtoDP5R2P5l7eIZ0/hDn2
C738tKi+glJwjF9TsKpRoKQLOhgAmLJ3deLGS9KnQIPeK26COsYuvIGCJIV1
JQGgZd8utPEgLRv1nSWS8JXyvCTrrcX9Fo3ifX3Aacaf2QcUdr9JrWivD/tc
8LpIhilcT8Tvo5VmUS4c9lsNqS0kSSAaFYAuJ71gkBUj5LdLyOqxN3riGObo
ThtzQovt8CwJ0NzwDTvkhvzVJR5PDoQ46tXV43uds9S5F9X4U7udUpayvxmM
mliy+csfbQe2KQZ1kx0Dm78c2PTF0sencAmLZP1wZA2fRQNoXsCqJeYcBoQQ
8ElFZ0PAbojDXZgVHY/UEx9SYw3BhOT4AwgJc0gbn0RE4iGh0a2ba7kmeXqN
kHNIPfSSXXUaEEXOzRxizl5RYyXAJaDuWdjTruV5I32adeUUUDYphYexmdvp
ZRmih5Xix7f0hBGA53YJQzn0wkQfhzkk5KlZ7Gwi5x9klp9c7GoBLBecl4VD
IJ4/OvDDPyiFWeqJNuXgW1ZVDqngKKMii3Uli3/3AinvCL38FDg8r04mqL8M
6ZvFacScPaKHFTpMu/BB+dSRzcrhj3A8JOLLTkZJ+c3q2WfVuFO7gNI6uuOb
oZ+/IJzey7t7wSagABV1qadF1FjqUcvjKT8yvKDoaAKIzbuTD96FdRdFDaVQ
L7ObueIHZWDi4N4psvNxAKASSTCMrXURQgAM3nXY514CBG+OLu98NPrrJs88
UznwbEVMhdsdxmC3DGrthcyJi4QzB5mVZ/1WfTwZyYDagdHC7Yk1oy5U2i3k
sqlHXjsEBNb1HEbFGa9qVj32NhaGczlTadwb8ZAb8heWpCYF61LIgk+3AFE7
IXHm5B5V3ysoSJIxChTnpLf6E4L4JS0s3MS+nwZ//Ez6/A4UDZ4cOOsyjGMx
I3UUynDkzozs+E41/NbOx6tGX4XhbqrRoDfsdaIYsFauIQ4jJKJlI54ah4QC
RQmZ1OIHJYJ7Fyf2/UC/lE4+f4B5KZ1ScIRccIR/r4AFsbvixc7HoodlvOoL
Mye2Cx+UiRsr8dm7Mcd+xmbsZJRncm+dY1WdBmSMcyNHNd4B+7KhvGxF2yP8
md2cG+dUw+8cYhoAUsmT6qnDP2OO/KLoaQ17PSGn0cLCUoqyx/f+KH50DSjC
kic3RY1XbXyMz6zSYnrETRW8u0VQo66yjNmWm4AH4rN2qse6IV92Mh4yhgRK
AbK31PtU2nyVf6+QcGbf9HHAHjOoJWmih+VmxoSo8fJSX0sAaq+WCoyBoEkz
2sq+fgbo5oA0yt/fn3txAyA2Ju0Xfk0hxCEhLRsLeWpi67tOIG1e0ZQicL+Y
49qZj4553vi+TYq2x3YBST38MgJnjMK1kT0ojU9mOdnFFMzxPeA04daW6zF7
XdBOPJmFEI0E3csi1dALG4+ESduuGX0D9fBiISeejCVYX0F9QzbkLyjJZzv1
kMNsQTvR5pJzBbWXyBeOAnxYHngWgBLE/shwBH5nFzNn0nd1f/Yf4IdIQ73U
RlPjCCrc6F9d7n3ikglmW+5OHvzZOc/VTrVZ2ZjkKihgr0XKIeE+ACGhrMN0
e8oOGQk657jUi2nk8weZV88CCMJlbifm7hPcK5K9vcu5fhbSuHufew3LquEX
0ifX6RU5Vh7OSOyTvWsknNnDupK90Hp//k09v7ZCPf6BeTlrvrVRTwZadp6J
3Df/6sH43h8EdWXqUcAV83Cn9ggbrgAkZF/N1mEHV9ULNvaE37ysJ44zK09p
p3oDVt3C27r5F9VQtTcpwyogyj7UKjrqSBdOUArSxI0Vc89vMS9nqya6rRzE
l41J9oqMx3SY7lnAhB9XzL64Lqgt4lw/Qy06CnCeXnp8/uUteVvtqm4JMXEg
VwT5B8wR3Fv5pLz9gG1aOdiF13eXex8zrpwFU0PAagAIaePhYuFgMsAAnQjR
4uoQxnpUc4rORq9mjnYx8/9j7zv8m7jStf+h7/vu7t3sZpO7qYQAgRB6gNB7
Dz303jHNxjSDsXHvvUm2VW2rW1a3eu9dVm/fmSpBgBB29+5ucp7f/OTReHTm
nCnPvO95G+vHdRGTEpHn7eoMWlwDTVn8zDFOnbFpwckn7w0rrXNwxezpyttp
1Cc2TzgLEVcK+4scJxUJWodqXHzK1O1jjJ2rQ1qRvuNxEjEA5YiI0Z8XnYCA
+HdDET0SRBZQCa3UetfEwOCq+aa+OqQ4nYCCpgLLvRQxgf0cRVAjpu1Y2fzX
/2r74gMrEZdNygl5MvcLqutFDDJNw+2Ifoq+Y+XYkS1Rs0LbXBrSSgh/Y5Io
s0SvEEuNT8xkHcAYcqlPykiFvPrWh+NH1nBP7bDRWgUXd44ARXXhJ0Dwm35+
jXdq8/jhHyR3T7r4I6qqa/JH5zT1ZW4+XXz3jOrFPaBBM3cvnyo97xKMAhb1
CEZENw7In90CxMU7jzCk8lkJZc081oE1lDULKGu/BVqzvvOZ8Nrx8aMb3YLR
sF5q7H7ik47FXUbV8xtAMgyoBMrKy4b2J7qmcucEJaSdnH52Wf7wNH3Xqr5F
s3indznHBiTll4y99W7eIBK2g2bQxcZoGWkFtMY/u1Xx5Jy07AR4fSgqLg2s
AGy/GLQA1N6Yy5QnGZIIEU/NBCdvHptA0qEvstG6HMzuqXsnZOWnxSUHYm7M
lo3IkLlcrugSk1VvkDoXupZSn5yrqLjev/hL7yQD6L/IVc6kMKIz99W1f/FB
/7Kvxk/sVdU8sjN6o2YV0L6z6bSxp35w2SxDdw0p6pNGOuKeQiZcwFXWtz/0
iFmU1fM0dXcBYztZXTk0vy4ee0VOWkJA/CeAVLdT8ai++2lYK+Kd28M+tNYv
5+jaHya8dqIsVO5lZKJ27dixHY0f/L+JEzskZWcnjm9JBr2EkQWfhwxpxMjT
hzsOZZzjPebeKpeA3rv4C8WzkuC0SNt0L+GzYbJKlsjtnyNcu1GGZKGZK+iY
x3jMZZWW/iQrPyktPeniDLF+/J53Zhv1hznsg6vFJQcF57ePH10rvLLP0Pl4
8vqPsvJzXjFD+ezqyKb57B9XTBzbJL13Snr/nJ3RqnxyXttwV/nssrLqLipD
IvOQ6po73FNbAc90z/2Yf26fsadC/ugsffty7pn9IY1wRj+lay43dDxNeq36
9ipjbwOgTU39LZ+EpW97ZupviNk18kdXJq8fpG1b2fjf/0dw+Sji8v30jqGn
npAhB0jhGryJxNf3c49t0DffV1Zc9IjoYGfWga20rYtlD8/oWu5HHSbyzYFf
IXTVye4FnQTj5Z7eFpqeFFw7RF33rejK3hiW26fAkHnyvUPMFycRuZ1HBdTa
u/AzXVsVWEeyNUZD2Mxj3KEbO7iadWD9yMZFnbP+0vK3P/Yvmc0+sFVWcdc6
3BbWS9S15dQ1c220bvwVmSVfhbjqkJoJWQZr3DyKrOzsyOZlIbUIXAgkVQUW
lEoWbiBvOwiIf3sUTbbnfDKWbaTROdYzsGKehdIM7nZ05j9Ompjx3ApIinKv
8Mrh5o//m75zZUAzFfdY6DuX6lof5xAfIVx6AZq1+NYRj2iEIL1sOuI3dDwE
aq+h80XPgk/BIbyTTFN3ZZaYBCsWa/OoP6Qfz37GwOKyZ+wm4cVdoit7JPeO
2UebgU4NVFSgcUtKT4GnmH9uh+TecSHQQDn9fhk/pFf6lSJJ6UlNQ+n44TWs
vSunq68COVZZeYV3bru0/KTgwq7JkpPGvlru+V12dB6Sd3q7uOTo0OqvJo6u
B53nndkKhDrZo5sBxXhAPuHiUCX3TlgoLcbOalNvnZXaYu6tTgXdQOOefnET
qK6KZ/fGjiC5x1v+54/gHBq6XkjunUVy6fARl0skpgaXCLOa+of8c9vBWID0
KLy0z9BdDV5G0tILrL3LpeWn9e0PYi5zlmBF4kfIGyQdDZv6asaPrh9aPVty
94xjbGhozULuqc2IpebCPg9qqXn5XYbPQLo4A+aB6pCSQ127CFy7oJyjbbwb
dRqx0BvQuqX/uaaxLKyT+iRcK21QcvcSbeeKztkfAqrs+24Wfdc68a0TlNVf
D61aAN47OcLlgLxqQM6MGKS6tnKfdJyy+ht17R3P5KiN1ozcEkV75iE7Qvyn
gZRTMvGIsedpRC/lndrJ3LcqoBIDGQC1F2TJ0EJsf2n5pbbP/jK6eZFPIQKP
QCqbMXY/G177jZXeYR6sV1WWCG8cZx/e1THrr+yDa7MZXFvMogkDp+tLQsqJ
yRvHBlZ8E5SxLZQ6G70NN+uQMk+esGWjHuMeIebtw4w6TdyzW2nbF3NObXXQ
mm3DjfqOCvbB9X45N6STCy7tUlZc0jaWiUt+8k7SEi6jeaBuqvRc1GFQPb81
sPzLieMbhZf2UNd+Q/lhDufk5smbB8R3jysrr/Iv7rYzmqerb9N3LGEdWA3I
h3N8kw6R7i6PHVgpunpQev+0ofNp1DqtbXoiuLRP21xmpdRpam8bO5/FbWrr
cLOk7BiShbivgbFnBX37EsrqOUPff8Xc/f3Ipu+MPQ0eARWIfNM1dx3MTmNP
taKyhL5jBXXtXN7Z7arqq1N3jwI21rc9Ujy9yD2xUVZ+CjC5d3J0xiSLmuTg
c8YoiRilM0awIgVfQ2oeGGbP/E/bv/iLvv257OE54ZW9WI5xj2AEqWOIv8cK
NjOfdEzfWha16dhHgJi6KKyTaervBlX8HFE7EvAkEPiTQQ+WOByJGQ24AzqZ
i8dSVt5m7l3ViWS9+1Pbpx80/On/jm5fOWOUF+aZ0XBU8EK0UmrBK3Xq7snh
DUvDBrmu83HMqc9nCbtdvqCP/2tudAiIvxv+KaZl4IWLN9S/ZI6hu8o+2ujm
DWawpLKENKNpKO/46uOuuX/VNpUCxU328BL3/I+0rUtbPvyv7m+/HFwxm7Jy
Nn3LtxPHN0yWHGPuXWHuf1HwGcpmAyqeuqYkbNXTty6m71wNxBh9e7lHNExG
eZOOfBkix7hHOIrLkA6z4OIuxvZFQLMGEiP37E4ktu7iwUwykfQ7p6tuck5s
902OAHIzdFV4pRN8hILuzNj00vtnhjfMF9894xExRdcO0LYsVFTcBDKhvPzU
1O2jgkt7HMxW+ZObnV//dWjVbN7pHUB+NnYC7l07vOEb7okNk9f2Se8edU1Q
XPxRQEfG3lrzQKP6+XVLb6WD3gLOGO/8DuXzGwElR1J6gbFzMXvf8omTGxm7
lvUu+B99ez3o/9iRjUAcHV73LWvP99yTm5i7l4FRAB4WnN8BFv7ZbbbhJk3t
LXAswJCMPatoO5Yz9/3A3PsDY+8PzH2rmXtWg3XwCb6y9q1l7FrSu/BvrZ/8
UVl5HYjlU7cOxzCG5I+glpocViUmj+raUZNMXXMD0OPUnTO9333ql4uM3aDb
rZlEGNsB14DTaSy1BSG74o5JqUggYtP7FZLpuvvsA2u6533c9Jf/Gju4KeHW
57NEmd10KqwXG7oe+SUTA0u/VtfdBVRpG23OYIHYRZXKMUCOhPh3xhtddtEE
19rm0rB2Unge8UIJaZXalvtJrxXTxcCNDkS+zq8/afjj/+n+5q/D678BCxYY
Int4BghUDkZPUD0147DGXfZEwAkerqjbrm0py8TQGmEo+wEhxzPWpWt7EDHp
BpZ8xj23N+axTb+4FlBM5PCo3mwGq/+A2rJZP67xiBj0ncsDUkZIKxVe2T1Z
ctg3xYp7HC4+i7LqK/qPm5EgxHTayR8DguLYkQ2Iu/LgC8GFfYy9a0NasV8u
nDi+nnNi4/SL0nQ8aqN1ga/giEDDlZQeE5ccEl7e42A0KytvDq6cRV0zd3jd
fMGFnYDHKD983frZf1PXLQQMI7p+VHTjuIfbLy8/yz25VXhln4Xarm19rqy4
amh9MLppEefkjpBGZB5sGlw1t/3LvwAm6Vv8Wf/yz43djV4RjX1gXfe8j0Y3
LRDfPCQrP6lvKQNDiDktca875nXF/U4gg0nKLrD2LZeU/iS6edBK6/JN0j08
qodPRepl8KluHsXDG/TwKF4B2DLkFdG1jeWiqz9qam9K7xwBMiQP8YdEGBKt
PIgWnsxlkWyTL0oi5ml13b2O2R/ZRtscrE59+0NwabAImoIKgVmocV/KPBog
g0cWoLJoFlzEuM8VNmoNHRXck5vtjNY84TkOdH9d+8OAjCO8/OPwlqVRmwEI
2HGHAd2hcLNhYVakOzsExH8akPs2KBvTtz8KKrj9S+bqmh/aaU3WoRok1gy9
vZ3sHm3jPftoi09MizqMiXAQKSqaiCH15dMJdNIpk88VQjPy6HRiHs8ng0sP
4CfGzkeAbIFm2jnrr5I7J2Iui6rqasQ4VbBzIlP/CS8SU7PGIwAy5PKAnBXQ
TgE9VFl5GQi3XtABuxFor4MrvvVLx8Avoi6LtPQ0EAI5xzcyd68AMlVANpYM
ujR15ZQ138junzD1VkfNSsm9sxPHd9ppzYqnF6ZrbohvH0H9IVuw/JBRm9bU
WwWYU1N/x0ap0zaVcU5sYu5ahtS++f4r2rZFQP7sWfBJ99yPKGvmDqyYDbTp
/qWzOr74M9Csxw4BqW8F78xW2YMzktIT5t7KyZtHEFs2f2j82CZlxXVzX5X8
4WnRlb38c9vHj6yl71wysnkhbccSzvHNnKMbuud8Mrp5kaz8BPvAqsnr+wMa
UToVz2TSmUwqm0khHt1p5DOTTiNR29l0Np2aundqeP180dV9cY9TcPFHtE5N
Ai/Sms+m42FN3W3/FM0+0tjx1d/UdXf84tHpqquJsC9PeuYTMTK5bBFvFaYZ
s4QdLU3MJWbAdQFXPJ1M5LHCGcmYTzyia73vk3F7539h7H7qHOtAfBteeRET
tm8YUwPx7w7swXjtjYo+BYauJyGdBGim/StmhXRqbWNZWCvOZZK4ySWPG51J
v/M8IrEU4iWwlDt50gyUe+lXqCoH2DSurb/j5Q3aqI3tX/2Psvpm1KSarroW
tamRsA6szVQC8Rjf/4NHgNQ6dI5324bqxw6uktw6CBhM+vhKzKEHCjvv9BZp
6ZnkjD+diIUtGtXzq5M3DjpYHdnETCYZB6oxe9+K8Z/WKV9cU1VfE17Zo6y4
qKq6Pn5kjeLZTSD8ILUOz2xH80Pelty/mk3FcLYgwz8AE0WDqYg/FXTHbOpk
wJEM2AMylpPV7hfTIjqRg9kOFGSgawdlrIhBkgr7MRcbcHTZ4xtGxJZNBSQs
e3BWU38b0Lu67hYQXAGNA8W/97tPxo+sF986NHX7sLLykn24PqTiO5hdY0fX
axvuoZ6EuLaLXR5UJS7kck8FPZM3Douu7QOyuuASastOxjAPq1Q0pG647Zzo
dk/0d839dOrOcaAsq55fi7tNQDrHQ6oLnIjfDFkyVwk5x5gtROVgDo34njn8
FAEBeLr2VsSgYP+4kn1gQ9xj07XcT0f8eHuF2wwtBQbT+0D8x4IkvBmzUt92
P2JWUtcvE98+5hON6NrLkXwIaGjt+9eqy2XJjBZIevGQd7rqRlDF1zSUdc37
XNdUDmhH23An5jRiZfiQetmTLPb+tV4RY3j9HN6ZLUD0El3dL394Ud9Sqnhy
0S9hqaouKyou8E5uVNfctPRXW6mNYb08atFETbJUyOeVcEQ3DwAKFd04AEhJ
XnFRUnomrJuK2vXWoQbe2e2m/jqs1qGd3jQNZMj717KIaPSPOZuZxIzs8XVj
N+rtc2ab6MZBXXMZ6Kfg3E7A0kAlt400c05s4Z/fpXh0Bqje4pLD0tLjQHoE
YxRc2OtgdKRngm9pH/troTRM3ToUcyPzkF7BMJYiHowdvOYcY11u4ejA8q8F
5/eGTWr1i5LgNAep0ZYriqf61cMqOIojQf2xiH240TbcaO6t6f12lpvTa6bU
egTD+TwW5Aj5EOI3BszonLEMN3lFI/r2ir4lsxycUWPvczenH6nFXEhA/T4g
RTP0MJmIZVpTUxJSi5XPbvR895Wxo8onpADZKWKaRgogAhmSyH5GWTtPcucn
fdtDy0BtQC5Qv7gxeXWfouIi9/SWyZuHhNeOKJ5clT+6LCu/IH94brryiqHj
oabhluj6j5zjW4VXDo3/tF54ZR8gKAetWdd4X1xy1DxYb+x8bOh4pu+s4eLZ
z24Lr50M61Vhw/Tfv4T0ipBOOXnrjAFhSAr/3E5962MgXI0dWgMYfsamBycB
KTiumHBx+n2TowEZO6jgAFl9xiiN2ZTpiA91nXr7hUKMIKaBajHCkFY+pmUn
41GP1dDxyEZvdQvYwxu+5ZzeFdLLNY33kKAkxI6D/fw9xblsQU1AasWGDVJd
U2lIK6Ou+2by5rGwUQnUbaSSBZrw6T3ah4D4t0UOn7pHw3P9NnCrR4yKiZO7
GHtW+uRcTcOdGcs0nuE/++aag79wBKL2E/aMgUdMLdQ1lvpkPHnF9f4lX2nr
7nu5vfqWspBakk1E/RI2omWL6CMb5queXgZ6sbjkJ2npCcCW4ls/ie+c0jQ8
cE0MZhBZCxOMMgkkenrA0Fmpa6uwDDWGDfJk0GuhNImuH1Y8Oa9vLZu6e5y+
4/uxI5uVTy9N197kX9zNPbXNwWhTPisZXveN4OIu4aXdf/8iuLSHf2Hn8Ppv
9J31HrQKg6TsjLr2prrudkAtzqSJupCEv2LBsxA7v7lsoTLam04luoN54IW4
5GDMhcTU+KeYYYva0PnYwepycenD6xZyz+4LKEX6jgceHgUpxEAcqTio6ldf
RKL0RtLvBMqFX8yQlJ2jrPkupOIZu56GNELsJZuDAYYQvzHgD00GK3bgETMt
Q7Vu4cjAinnK6rsu7pCprzId9uGeJLlfLSG8RATYLCUS0ZYKTQuQeX4pR/74
BlAJlU9veXl9xvZHfumEVzTKPrDWK6Qzdi4LyMez6WTMoQsoeH6VIGpVpcJe
wtJKZMooxFEWao0hX5LRqEPrV3B8UyyfdMwv5/rkEz4J2y8b17Y85p3ZaaO1
TFff5l/cb2d02Rnd/5DFRuvgntmtBzKkgMI9vU1854ypvyGsk6IJyopPBuHA
SNIXkvqtEFv0hrOZwWjS1I/IkFGXVXDxR/NAnaHrsWu8184aHN26hH/hkHeK
aep96uQMZjB6xJNakJUc3+cmwQRQ0KBzrMs8WONgDfQt+VLfjiQkASo/9oYl
pjEhQ0L8xpAjpZd0ImbqrwrIOdNVt/qXz3ZyR0wDVR4kri2Rx4n0PZpP449o
ITIOPGzpkFoEpBEXb3S6pnxoxRxp6UWvYMA8UDNddYO1f613kknfsdwvZecI
6wDuX4fnxyC1RTx2I18cjJLPF/YnyIi0dIC/aBWGHbbRBk3t3ekX5f+whxqJ
5EzKn5Qg8Ym8Id4ZNHNFof+54lWib1mytiBJoG9snkgcgciQQMt2WXnn9sge
nHbzKfrO2pHN34lunfEIh41dj8E7LpNMYEU3Mrh9JVtsQvuVw8rhl0w7pW0u
DSg4jF0rOaf3hLVCXUtZzG0muRH9hPOQEL8pYAoUKYlF7Xp964Owms86uAEs
wWmhtqU0YpTlUPfI92n9ZTNxnpT60im/km9of+gY69e3VQ2v/0509bibP6Cp
ucvatzYg5zN2rggqxok2cHU9U+TOlyuKgysEcRC9xATJlyRMfP8sYss+u8NB
a9LU3VMBhvwHKYao4BoDUrEB9fYBWrYVr3VYRH94jciXNGwiUxkZdPgWIKOw
UOold4+gHuM/GrufgVcMdd0C6cMbbh5F344k6EDjEItdH/FWs79UYuNN4wKN
Af3a0PYAiOLS8vOUNQt8sjFzf5Vvip3LvxzBDx17IH5beMWZBCxu3qB5qM4j
Yg6smKOouOGVTBg7H6H+xu/HJFmSBMhHFUMGqNs6iam7wsHqtlA7RjcvGTu8
VVFxaWT9AnX1ncGVX5u6n+eQuI88kTgIbwonE9IWX2g2R1ICqYYT1IRvAQxp
Z6F1amhN6tq70gcXY1ZVzDr99y9R63TEIJksOaHvqQNkxTtbFJedyxMOPMQk
JNZxMocS+d+3n2Qku3tE9ez62OE1hu5q1r5VzB83UNfM0bY8d473mbqfeCVj
iGm7iHtzBf2aODPvcQlTCdtIi3200Tba3rvoS0NnpZtPtQzVpuLRwvAKB4WA
+O0g99LcETohFgsbe576xHRd65O+RbPstE4btdZKayGtogUxrehXbzlC8WfR
H0QBzGbSEYvG3P/cPFjvHB8eO7S+d+Hn9O2LVc8u8S/soW1dPFlySvrgkqT8
kqz8sgx8PrgEvkrLwXJRhq0gWy5LwX8fIAtYQf+LrhBfJdhXYsvEsR3swxuc
rDZVZQlt2xLxzcPikiPim3/3UnJEdO3AyKbvdB0N3kk6+8AG1v6NohsnRTdP
FS2vfMUXYeG/J4v2Ofmz/U9wzh0YXP712KEfJm/sH1rx1cCyL4wDreAVo2t/
CF43SD2glyYbSe79ZeoqSOYv5+3MZVJ+CVPbVh5UCalrv+Nf3h/RT2mayxJ+
5yuN5uAkJMTvA3GPXdtUNmNR8c7spKxbGDFqtE13fVN0Mq8gVr6EkEneU/vG
FT8gFnkstuF6feczp4BO+WEO69Aa63Cdvu1h//LPmXuXIl6RZ7byTm/mnt4M
1sEKvn6KWNAt2AqX/Pq6BfsvYGDWwXUOVpum5t7UvYshnSqoU4X+7iWoUwbU
EuGNE/rueu/kKGPPmuH1CyaOrecc3/CuyzF8ZaL464kN3OMbuCc3cUD/T24c
3bKw+5uPtY33gQxM37Wcf36Hqe+5sbsibFZn0ylsSjb/LoT4GmQxjTlL1qZB
Jz/jbsN0TUnEouWe2UVd/23IqNJ3PArIx399+xAQvxXkckE5S9f6YMamH/ph
Pvf0jqjNoK6+EXMakBDqLKk458nYmV/ZPKr+ZdDIRDTwIhnyegSDyopLrL0r
qGu/Hlw1t2veZ0BAGl4/b3D5rP4lX9A2fTOyYR51w9zh9WCZN7wO+aSum4d+
xTeOINvnIf994zKXun5e/xJAvGtdrHZN7V3li7LcP8jJGQwqE5+RPbyG5IcU
jTJ/XEv94WvW7mXMPUtfu7B2F1ZYe8Buy5BPsL4bWWGB7XuWsPYiW9j7ltO2
LABDZuxeTN++qPWTDwZXzmHtXzWAlBtbaB58kfDakaS1hYuSQ0pg/0pgjv3p
bFHO21w6E4+p62/7pSx1w93ubz5x8QZs9FYbtT6bTv5DThoExH8i0FwSCfPQ
Czujxc3p65j9N039Lb+EPv3iBnhk0AcRk1bePyEBntMAyxWD2TCS0eC0SFV5
ycHsDOqmeWe2jR/dGFTxYnaTlYJYh1OhYCocSoZCYCURCoAF/RpMBAPgE9ke
ftsCdkggLQTN1C7+xb3uiS5dywN17ZstNb96bEDEjsme3LRQurxihrjkoI0x
kAwHU5FQKhJ+zQJ6hfwrlAyHEuFQPBxMRtB+hsOJCNgSTETAFvDzcFA5Ye59
HtBJ4l67+NZRQJ5uEdMvYSieXXSNdaUjgWzBWxUPCH0/GTJLuA1gr7BMMm7q
fWah1PgEw+1ffKysuhHW8NW1JWgGUWiRgfj9goiiSGvqbgVVfHX93bbPP3SN
ddtozYa28tRMCHP+JoqhvMfDkk1j8Rc54tHG5JZsNuF1appLzX0vYm6rtuEu
bedyXXN5wufwTQ7baE0zJhnqBY0Ln4S0U7CT/yKAuKV6dpOCJITcwNyznH/h
QMQoz8Sj6Xg0gy5p4pPc8o5LOjYT0k5xT+0dP7ROcHbb8KYFht4GtKrFm04y
VlimYGXKk4PBxpVKJlwmF6vTwWyLe6xOdg/r4NrJm4dmrDo7vX36xc2IQZJD
CmFk0bw+ZEg1kannPYAZ/bE3VyrpGu/VNpXFHLae7z7hnduZDHimKy8nvRYs
ERMExO8XOTwjFlKipeZmzGkSXTvct+jToE5h6H5mZ7QBdTKHF2t4Hy8gPBcN
+jxmSJdmImdCKhZ2MNu1jaVhrQhIL9zT24WX9/kl4zNWNVDxXBO9Mbc5k4yi
TpDZbMHZBK8b9aZ5UeyAAYVw4tgm+q4Vsvtnx45sBBr3xPGN8genpPdPyspP
yu6fRFbQT2zlVywPTo3/tG50y4Kpu8eByE3b+b38waW42/zLZ7rIHJxFnZqy
qUQyHPBPMazDTSGNIGJSy8rPjSNJ3ipnLBp95xNDz9NUyE+SKkaPeHwoejrf
I50O5guEX41MGkjv01U3og4zY9ey0a0r4m6Dpv52QM7OFxyHICB+p8gQuVjB
0xKc5mub7kRtetaPG0c3fxfWK7VN5b5JWg6diXp7bcQ3AhefyKcYy59WkAmz
6VRYK9a3PQRqfkgnm665zTmxbbr2TlAjC0gYDmZHQMZOBlyZeIT0si64hL/F
6TqX8ymE/As7JaXnQxrZdN2j4fVzRVf26hrvgMf/paXu1qtbfmnRNt4VXt7L
3LtMXXvPwezkHN8mf3IVkPkb+/NytxGTFRq3kgp6wxqBa7zbI6CAsZv7a3hn
d0pLzwQUfK+Iamh54BFQwRsqS+Sayxc7OP0d9EXOmIB2Z8wq9YsbYbVAeOVA
/7JvAhK6lVJrpXXk8flJqGJD/K6RK9SyQfjHMT5g6a8KSFnDG5aNH98aUgsQ
cULBx9zIc4TY9u6PJWnfIYWggnMg4dyIBFyHvFZai6m30q/gujkDU/fOCK/u
Nw80+BUCr2jYxRkIKjgxlzEdDZIk+VaGRGSjqNOkbasQ3TwhLTsrvnVCdO2Y
9N5ZxcOL8gcXZA8ukssrX3+2vOa/8oeXJKVnRdd/AsvkzePCqz9ZRzvTM/7i
aQRymEXnGV/LJKJxjy2kmfTwhgAHBlVC5wRl6s5x0fWjlsG6gEpkpdSbB2pi
Ng2aq+clB54iX0di7W2viZf+Fn3NYlJ51KZDKiRO0hRPr/Uu/AJo9G4exdj7
HGj0WcIYBAHxewahtOKEk02nrUP1Nnq7izM4sGLeZMnJoJSuabgNHmdU8CEd
kl95/H/JT5J0Ms5lCW/woqbQSc5sMhbWCC0DtdaRJq9k3NxfC3hy6vZRC7XN
J+N4p5hA6faKR2dsOiRvWA4L4MHcpLM5ki5Ix2zUMpRJJVLRUDriz0RD2cRM
Gln3pSLeVMQHNqJLADAbsf6zBfmXLxX2p8LgV+hXYgvoAxBrM/FwJhbKJCJI
FlyymAU+G0CGGWLCGGo+jkXiLpNfNgbkRq+IFlCMOzkj8scXJm8e0bY88YrH
nOxuY/czj3A0E4sUhyi+p/s3WUfmZaDmmUzUbtC2lXnFTENHbd93n+haK/wy
nq71QTLkIjJE5t4vehEC4jcD8jnIos49SErZsNfY88zNH7ZQWvuWzpI/vu6X
jmtbSoOaySxGktksKboQj89bhI0i60yOYBCiLCzSYCaN8E/IjdFdKuhBDj1U
42T3eIQjxu5qSekpSdkp00CzRzTik435pui+KUbEqEDcmDMZgoWI0OyX0+hg
VFmgz1eLg7/jKXo5E08RzxSEs2IZsejQaIQ7smcy7AX6rF8y5hePgv77pmg2
eo+i4srU3ePapseuiT4Pl2IZqrWzeqJ2PVIgEnGL8iDxTVnMNPM+RPWS6Jkt
fjfl4i6jofOJk0c1DbT0Lf5MVX3Pr+Tqm+9Hrep8oW5R9u3x4xAQv3m8QifY
Yx7zmA1djzwiurGnYWDpF6rqco+Mo2u+F9JLUBJCNWUi11n2rc9QrmguK4dk
VyAjlVFrTTLul4zLH16zjTQTJVOQtBqAJVxcqoVa6xzrdY33mvoaZQ/OS0tP
6buQks0hNT+g4PgnR4NK3oxVDWiE7H6ekCMLwykKJiYE1yyehTtfoNA3dP6V
E/Xzk/aaHxT/AyjUMacxqJ70TY74pWxkZYph7G+UP74kLTulb3vuGutxTgxa
qA0Odm/EIMsk4+CV4ROPqesrJkvOie9eNA22JMOB/Hs5EmC2IXwqmCxWnssm
vDZjx2M3d8Q81Ny/5EtZ+aWggqtvvw86UDSiXLH0CwHxOwUh6xRmtNAtUYde
13bfKxoxdL4YWPK5suqeX8HXNZaGsQyBqAqZJYXBN09M5gq16QE9ZjBKwh66
VDio63g+umVl94LPjT3PMTIj/PRygDxnLGqgb9pGGuzMTudYj3W0W1l5XXzz
sKr6jo3WHlROhHQSn5ThEVL98omYXZdFrDkFYTVPGOpf8rTJE6aOXPF433Z+
CruQsiIhuBYzb/FKNhWPe8yhaQE4gb6p0bBODBbXeL+68ZH4znHZo/PmwWbw
FRnUcKOT3RXSiFPRMOJmmU4AaVlwYZf45hHR1cMD38/uWzJb31mVngm9j0Mq
Ov9QqFqIIuE2GtofuUV0C7VlYPkcccmJgIShby0PqkXkyceIlJgtgLOREL9z
YFpchnjKceEKmcZvLkPKNLQ+6Zn/6XT13YBqUtd0D/HNy+GlRX9ZxsjliB2z
GEMiP0wnw1qx6MZJypq57V9+0LtwdlDFwfYh0/tjlARksKhd6xOjBtaRJqCN
unk0fXvF1K0jkyXH1Q3lHgEVKIYRo9wvoYF1n5Q9Y5Ing2784IUJtWyu2CGz
SKrM5988BHIHXPHMklxYTIdkg+loKGbXALr2Cof94pGIThy16wKKcUPXc8n9
C6LrB9U1txzjVA9v0DbaYqHUevhDIYM8FfFlcYtM3jTQNH5knXmobcaqjTmM
NkbvwNI5tK2LZqzGt/L4G09+Pl8QosF6OuLXtz/0CEZs9Lb+ZXNE146FlBx1
wz0g3CJWIXz+JE8WLXydoAwB8TsCpu3mCK9FYjMeQhO1arX1t72CIUNbZefc
vykqrs1Y9aqqq2GtoMhjJ/02kiRZlxDGEtGIqe8FbeuKscNrdc1POub8ZXjT
8nQ0iO+M51HM4Um90KifTCIWc1uDKr5lsNrY+9zBbPfJJpycEWXFRf6F3eLb
J7XND/0SRtxtidq0QTnLIxgA5BOQjUUN0lTQhZE/wYSEbTiHyYK/NEdQlE2b
oIsMntkM/UcmGpyxqIIqrkcw7OEN+SX0qEWd8DlCaoG5r0Zy/zz/wh5J2THL
COgzz8UZMPe/MPVWeoUjMzZtOhrGpXD0CMmQi31gs+LxlYTPjZ+BZFx046f+
JZ8Ftcr3cLzJFsn3yBsq4lE3lPqlLOtwQ9+i2ZPXD4e1U5r6u4DSAT0WXIBI
r4Ps+6j2EBC/MeQKuhVZ34SUtTJRm15dcz2kGtM2lnXM+ni66mbUZpA/OhtS
juPqOV62/vVAnzsijjiXjXsswus/9S6eLb51LGLWWgYaW//nT7xze/NorPFL
XIWbcvAsi8h/06lk2Bc2qWwjjbqWMnNfFXjYwwaFnd4qLTvOObGZd/HH6eoS
wOcJlwGpXWhWBoBgyRtwjXV5eBSglYc1goRTn01GSf2aOM7bHGYK5g2kbmoi
4bNH9FPhaQ7QoJGCCOM9/smRiF6c8NqSPkdQMaFvfTh58wjnxJbJG/uN3U+D
0+KAgmMZrte2llsGqgFzAv4EnJ/LZopOPnKskJo3uGKB8snVZNCDJwzJZlXP
bzJ2Lo5YjO8X0ERm7k2HvarKq14BxTHW1T33M/65XQmPfbr2FpB1c2jZiMJZ
Jyuy4ecHkiQExGtASk4Jr13x6CxQhA2dj1s//YviyYWE3wPkt4CUTib9xh8t
nC1fmtfEWDebSri5/UNr5nfO+dQ8WJ+eCcf9btGVA22ffqh8drWInF/Xk4Id
HCGpVDwa89q8Iqq+46G64Y6VWh/WTkbtBudYt/Lxee6x9eNH1gsu7dU3lfqm
aHGvBdBRKugBJAbES59oxMnqstNaHYw2N7cvIKEDLTio5ISmuaFpHhgjWEL4
wkW2qzgBKdPDH3Cw222jTTZaK6DcoIwZ0fATfns6Hk34nUH5hKn3qbjk8MSx
TWOH103dOWKl1kYsaiBMAv7UNpXqWkqd7Pa405iOzWSRGl5FTjg4gyGjjDm0
Q6sXDSyf5eYOpRNRbMz8SwcVT84nvA4ydgZ9ZaSJWthZPDCQnN1FibfIfobs
FrVrpquvhRRjdlYbeM0JL+9L+lyKikv+KVomlcTnCiAgIN4dOcJhGBXhUj6L
/MFZIElaqXWAJEVX9yUDLuXTCw5mWyaZxIUxckqfCADBTMbZTCbhdU7dO9b6
xZ+pa78Z3fTdVMnRmMsYseiG187t/PoT22hLtkgTf2N/8LnMFP4VqaeSSfod
zoleffsjbcNthCo1wmTIGzHKrIPV0tJjnGMbWAdWjx1ZN1lyUNt63z3WFVJy
4m4TUG9TsUgq5I/ZtWGdMKThhbX8kBZdUXPRdQH4jGi5ES0valWmQp5UNAKW
ZMAzo5d6eYOmnqfS0hMTxzeOHfph/PBa0bX9ho5HQNdOBtxRk9zF7gBSrq7p
noPWHLfrMqlYFi3vmEnGM8kEkNlyeAQmnoKMkNmyqsqbXXP+1vbJB5R137B/
XMnctRSsd839sOfbv1HWzBFd3hvUStPFNW0JGiTkPeKq5QnpO5MOagTy+6ei
No225UHrpx9IS48ng15Z+SmfeJTIgZZ7i60NAgLi58BEwnzBfptN+a2I1CGh
OxgtnbM/HT/4Q8xpVTeWWoeqU4ilFd0ZeeJSmGSTjITSkSAQ3jxC5simhd3f
fK54ej2dToYNcsG53bSdy6buHm///E99i+bMmGS5XyxgiuSfiQHy8UuYca8j
GQmiaX5J/5tsKuDyiUbNA9XahnvGridOdkdYJ04AQjMr3Zw+Y+cjSelJ/rnd
3JPbgP7LO7lFcH6n+PoB+cPT6pobhvaHgPHAb22jjUBnt9OaLQMvwBZj52NN
w235k7PikkOCC7u5p7dyT2zhntzKO7tTXHJU23jXyWoPaQRxrz1qmfYKBs0D
lYAYjT2VLk5v3GXMpZOYbAaIMe5zOZjdyqcXpWUnkXgZhyFXKImIcyWyZ2LG
0FXJ3L9uYOm8tk//0vq3Pw1vWEzfsXJk87KuuZ83//WPvd994ubTscLfmPSY
JRTjPEmLhPyYSUTdvD5V5bWIRaN4eqn987+qnl2Ku+3yh2d9sjGyJEcWn2CB
JAkB8e7IkrHAZDKZVNClrr7p4Q96eP1DK79l7lwa1MhMvVX6rseAtdDIRPxR
y6biNmoDEr987VDn3L9S1y+3s7ryeHxxDiibpr4Xw+sXNP75/zH2/oBlIHyr
ooeKj8l4aFoguX2cuXuFsuKKg9UfNmriHnsGT6qDS5lI6UOzwsXptww3GXsr
zf1VDmarVzAU0k7G3NYZqxbo0T4hBYh51qEaQ1u5quq67NEF6YPzsvtnpfdO
Se6enLpzUlp2RvYAbDynrLyibb5n6qtEGuH1BxVjM1ZNzG2bMSv84lEnu9NK
qTN2P7MM1jrHeoAEm4mGiA4jACSWiobt9C7++d0TJ7dzz+6jrlva/sWHvPP7
ImZ1vqALk741uPti1KqeOL5l6s6xuNeJtRZCQqcPtn3yZ/b+1WDU5MwGafon
6BG3RyeDbjutSddyP6xTCK8e7Pn2c33nk4hZpXx2KaTiFvt34mceMiQExK9A
wbmFeHbRbDxBt6GzwskAnEOh7V4/snG+S8C201r1bffDRiWS4yKHOd+lZ2xa
dW0pZc3i/qVzA3IWMWGJm6pTkYDi8cWWj/9beOVQHlflfzFPQi4Tm9F3NTV+
8H975n/GObmdd34H0BbNg40B5VTS7yYsKlnS9gTkzITbHJBPePhUB7vbSm00
D9baR5tcYx1ubq+HN+ATUQNSFiCfiFEO2CNsUkRMCiDlRkxKsADGCynYPvGI
hz/g4fYBPrQB8XKozkKptzNBC0M+CTtq1wDBj3DyJKMOM0TMTc5K62LuW6V8
fhOjNdAs+8j2jlkfWqgdGLdjJqk83vUsGvye9wlHhtd+6+bRcilEXMTiPcHJ
p29f2T3/o7BJh6RaIuU+9ECFbOG5XNRhNPdXgteQT8IdP7ppaPVCU19VSCXU
NtwBb4qXfXhyhF8rZEgIiHcFzolFef4Jx78soCljf61lsNonY/EvHR1aNVvX
Veca7wI6qVdET4U8WdJvMJMOTfM1DQ9mzHKUNrDtiBqe8Dm5J7e0ffahuuY2
diSUOd9YhRbrD3jwBZcPtX7ygfDqkahV6ZoYVFXd4Z7ZzT64RvboulciSM0E
ihkSt9Dja0hgJRBEk34n0OuD0/yAnOOXjnnFDI9wGNCdkzvk4g65eRTw6eIM
gk+PcMQnpvulLL98PKDkRAySpMeK8CHh2JkjQnYI5TZDHBhP0JGJhbmnD44d
WhucnsoRaY5MvdU9C77UNjxKh32FPmKvCezFlMspK2/0LPzUL5vM4yZvzNaf
E9/6qee7TwBD5rLpPOHpj56eDK6tJ+MBjcTQ+cQx1mVnDdG2LWHs2eBktrq5
FEPbo7hdgzExPnWM8ipZ0vt/6+aCgPhNAH/q8kR+SPxJRKcE446xXkPnI790
XFl5e2jl7Km751wT3ebBeiu1AWiypBIHfpaKh5OIUyKRLRZl3ajDTF09p/Pr
Tx2sriwRwPh2rxvw4ZeJhlbP7f1utmWoEaMgICVGTCp1/UP6jlWjW5bpWp8n
fPaX/cBx3ZVUw/PFrFngf1KIKvYnz5OG9BwpIqLmj5jT5BGPuzgjfgU/GfSg
nJnFHemL4hzjLgNtxwb6rpXBaTFJ3RZqI2XNfMtwVyYRJ13ZSS7Huil/fLlj
1kfG7tp0LIK2iV6KTIJzYjt4HcQ8rqKXQBbzdsxks2DsLs6QqeeZi9WhbX1B
XTdPcOWElz9opdZZButSARc+PKROTSZfNKj82/1CISAgfg7SXbDwjfRSAQ9s
xitmGzoeAVkLPMi0bcvGjmy1DLc42L3G3kq/bCKbRtTDgtkAByptZTL+6an2
zz/oWzovatMWpQvKFXknEhxLIB2PGPsaWz//E2PP+phDT/wTNYXEInbmAG37
6t6FX03XlKdC3nyRnyHpIv7WseJ7p2cCyZA7m0m+zJ04xyJeSyGPjd4rKT3L
v7CLfegH5r61U6WXvOJxjMowWRJjOvA1HfFxzx3q/uZvkvtX/DJO0u9IBuxI
5rSrB8LGaTzInXxxFJW9tlCbuuZ+PrxpsYPVn4kDZTyb9NsNvfWjWxZbR4B6
HidcNfNk1o6gVmLuf2GjdzpYbaJrJ4bXzVPVPHBzB43dFc6JPjAuYk6Z8F59
+br8ffcKBAQEAoJ0MF+VTEgnNfQ8tVKanOOD/PMHKGsXTtfcB3or0MHtjM6k
35YnZheL6SYVDavr7zf95Q/0XaszySSpfuKiHREnRxgdMlgQ3IzNwL+wv/3z
D6VlF4DsSJApTimZeNg00Ny78IvBlfOtw+2kDJgrWnv70LKIY4xEUXFL11qZ
8NtfGjMmOiKzq37w3/Gjm5SVdxwsimWkj3/paO93nzN2/+Di0lDzOhqvR6bF
yGWd40P0nasASQ5v+p577jDv/KH+pXO4p3YY+2rCBilauwEzhBH0ikruCb+D
d/Fg+2d/pqxZNHnrgvzpHdH1Y+xDa/Sd1alIiBw61rt0LOTiDRu7n3qENFPP
C8a+dcx9qy3UdieQ8zse+mQ88HZBNYJs4WxAQED8E0DIUznceJrNxVwmJ7Pd
1FXpGuuerntEXT8H8ICD1e4RjBi7H3slbNJ6kiN+lQoHZA/Otn0GpME1hWm8
HGp7IFOrkT/AZcCMVyroXzarf8k8J7uXfMyJphFeili1gstHmj76A/fCESAH
kj3+BU9LtJGY26zvfMHYu6H9y7/yLxyJO3QFy0tRHksne5C2fbn0/g3ExIwS
GuBt4dVjHbM+HD+2I6iRkcSYx63SiOjrlQsUT+/Qd6zo+OLP3fM+6pr3UefX
f+39bhZ95xpN0+O4301SMH44lDPDJrWq6h774HrGzqWc45tUT6+7ePRUNFR0
epDPsFlh6q22jzb5pxjS8stDK+eJbp5w86jmvlrLYFXEPI1dp3yukBrun3yP
QED8joE7/2RJEzdiu4kGArIJTcMdpLgMl8bcs4K6Yam26X5wWmjqeWIaqsPm
Bkl9MJ1KRUxqbdMj9sHVQM7JptPo5F4q4bPFPWbsKNgnKXemZkL69qrW//kD
a/+WZNBF6M04n2DMm0nEDD1NLX/7w8iWlX45p0hnL4rwed2AQlqJ8tm1yRsH
2fvXtH3yAf/c4bhTly+OfEH3zCajkrLrlNVzraO9WP5ejH69YubI5u/bP/uL
rqUyHQ2Spn+C4xGxMBn0Su6dAWfG2N/ikfBNfY3883u7vv644+tPdK3P8ARu
ON/jgZ/geyrsj5jVAa0cnC5ktjON5+nFI5cSMaA+6zsf+iTjVmod88fNIxu+
AYK0c7xH1/LAOd6HlI7NkS5AuPEI1p2BgPhnIkOQYzqfy5Iefbl0IuayGDof
69seh9RiWfm5nm8/457ZE5CyPEKquqbELRxBf57DaqtkM9l0NBzSyhxjndlk
LJdO+xWTtB3fsw5u9Ss4xLFyRDAdENX03DO72r74UPbgSo6oZZonkvcQKmrG
xqL2fPPx0MoFdmZ3MSXm3ixJIgRvVQcU3KjTqmms6J7zMWDImF2Hs1WukFYx
YlKMHd5B37bMO8kkNFxkBgAwlfTB1fbP/zxxbFtIJ80V6ukUXiMuHmV063Jd
Z30qGkbOXSIW9zqma8u65n5K37EsZFDligKRsoQHag73LyUySBQk58yMXqxr
KbePNkZNSln5+f6lX3OOb/ZLOJahOl3LvYhOlokj86JYHaI8WQYNyOn/jJsC
AgICBS6B5IqiOXKFOlPJcNDD6Z1+fs0rHPIIGSMbF/Qvn6tpvBdx6Ezdj7Ut
5THrNOaAh05lZpGckck4EmudjLsmhlo++UP3gi/tjI48kdYxg7NFzi+b7Fv0
Wd+yb5ycAeJxR35OqNno4bNpK22w46u/UH74zsUdKuiiv2SpQTLboJVZdB11
XV9/xAMMCbRswm6CAjFVeycZo1u+Z+5b55fziyYNkIHYGJ2D388f+P5rJ4+G
mZVzRZOfYBiTJWdH1s/ziLm5osTd6UiAsW9T39LPfMop9Nymi3uLfaBnoMDt
4FipkMc88ELTeCdskDmYHSOblw0s/czY9Sysl6nrblv6nyeCbrTADS7wkxeI
6BE0ykBA/BPxUnga8gii5QsJi0w2nYo5DdN1t4xdT2asGumDs0CXZO1b5Z8c
CcjHVVVXzYPV6YiXyGyTJ+OIgX7qFVA9vKFsmoi8JmgtHfFr6h82ffhfrEPb
09EQocGSs6K4fJSK+FQvHiBxOvs2z1hUpBb8Zg27aBwojZj6m3u//QzVsvWv
GHrAp2NiiLp+8ejWZW4Ri9TfsX5ELSrG3s0dX35gpnRh5beyqG8k1ngmFR0/
uW9w5Sy3iENo3rhzKefMj8Pr5/mnpVgwO7adPMPYq4SwR2UzyYSL1ztdedXJ
7pgxq0RX93fO+Rvn2OawXmFjtKoqL4UUY1kkBrwo8zs5ckKY/DuvPgQExC8h
Vxy+gf0paJ0YZ6WSdnqLqvpaUDHmFdPZB9f1LvxCUnoKPMvW4Xp1zU03tz89
E8qgASOYYkk2kick1RwuPmVDeiVjz6qOWR8pn90o9tzDuAa3p+SzfpWIuW9N
+xd/kT0pIQOBiP1Irfwtw8qah9r6F33JO3cIsdQQ7EceCijXtG0rh76f42BT
yPlPnO+SMcGVk61/+4OutRask7/Cp0AzKcHV422ff6BpepoKe/HgomxqxiQf
3bJKcu90zG3Nv5SQJ09aiJDVdCoZDQfkY9rGe/q28qB6StdUPrDiq+H131oG
X8wYZZq6EkPHw1QkREj02VxxBV7sihCTqb8Q/w4BAfHPAclwWFEwIErNmKd1
7Y+Mvc/CWom2qWx441LqmnnTDeVeybixu8LQ/tAnHk0E3AilkGxGqIE4twGJ
1GPVd9S0fvrfvd99ZRlpJnYj5hXxpz+XnglqW6qAik3fscYvmyD7hNdoKSbM
N3U/l7cgDPkFYEigZROTiETXcrmwXso+uK1zzkfGvpYsmnI2R7JvNi25f6X9
M8CB1Yj7YmEKEm/aOFg/sGLuwNJZ+vaasE4ZMet84jHu6e3jP20KahWEFky+
d3CP9kw6kQx6Q2qeqe8ZOF1e4YiV2sL+cdXQym8lZWeCKj4QHdV1dwKy8Uwq
hnfkrfMJEBAQ/xq8JNfhkhUqKCW8olF920PXWJdXOi4tPTu6eTn7wA+m3jrX
RL+p95m575lbQI06jJhlgTQ6Yy2kIgE7vZ17anff4rl9i2dJ7p8P6RVJJFgP
z8+QRf3Pk363sadxaOUc6pqF5sHWl/TL4v68ufNYUUIgQ/YhDInMQxamAomf
JyNe4Y0zLR//UVJ2JeF3vPzfnOzxze65H+m7mrNoxkVCqMbfHJloSN34ZHjj
8v4lX9K3fTd2YCX74NqpO6fDBiVRFLvQWYToUvGo2xJQcMxDNcbuZw5Wh43e
yzu9g7p+kfDyQddEj1/CMrQ9tDPa07EwNoGZ++W3AAQExL8GpFsMUaMZrZ6A
5yDPJHx2G73d1F/lFY46GG2AGeg7vp84tlnfWYNs731u6n3q5PRHzNNI0ZYC
R6I1r5PRqEPr4g7Kn1ybOLFDcHG3tvmhk0PziTl+ucAr4djog9L7V6lr59N2
rrEMtWeI9IlYI/miCrBvZg/8v6ahViBDck7umzGryE6gNiXcZ0bb+rx7/qe0
HSu9U+PFpnwgUopvXxxc/qWNSSFMzy8dETXfpwJKvqGrSl1bauh47peOAXJD
td5MkTyMxAeB94VvimEeqDb2VFlHmsyDbYJL+0e3LOadP2jsqfSIaJahGgu1
ccYkI/LfktbqbJ4ImYFMCQHx7wNMhskXeTLiW3BhEnGCjJjkVlqHhVLr4lHM
gy/Ed84z9v0wfnybprECeeQpDdYRrPDfVNLvxGYXs6TpF7FTxCJGhWmgUV5R
Ii45Mnl1n/DSTt6pTewDa8aObJU9LvFKOblMBts34XMGVcKY21KkJ7+1/6hq
i8xDLv5y7PC2oEacfcmhERfQAgoBa/+mjq8+VFXfT4a8pIdnzG1mH9nN3r8+
oBSRaStIVsa15jxRSoysDoZPEeJ0mgp5QnqZi0ux01psI81Waq2hs5Z38QBt
+1LexZ/0bUiAp22kwTrc7FdywYsAN1ITx0A/8fLcxFEgICD+PVBkesYlyXyB
LvN5PAM5eK6DWrGN3WOj1juZ3ebBWmn5Vdb+H8YOb5A9uWXurbYz2hzsLgez
wzvFjpiU6Xg4SxAA2V46NhM2SD0CmnW0yzLc7pyghAyyTHyG5ISE36lpekzf
9YPieVkq4i9Shd+iZyN+3RZKe9/iL9mHtgbUk4SmnCuUk0U8v6O6jqqe72YN
rV5gGmxJRYJgl0wyDoThkc1LNE0VqbDvJemNIKtCveqCDZ4QbjOZuMvkl407
mG3I8FntFkrddO0DzundjN3LRTdOGzor7cwu20ijbbTZJxlLzQRx8TxH+gWR
p6d4I7TIQED8G6GgURZWiNRaRdWlEa0yFglOi5zsHiutCdCCdahOXVcxcWIb
c88q4bUTQIkGJOnhUe30Jju93TvFijmNhGEXb4Mkw4IOjMmsKKIOg+Te2a65
HwlvnEwh4YevpOt5Q+9zOcCQ/UtmsQ5uCaiFRYIZkXIH/R7z2JTP7/Uvm01Z
u1hWfs3YXauqLhs7vFH28GrUqi+y7uSLj0iQFt5PlOCQyYeAgucaH3Qw2lyc
AddEj6GrYureBdb+deCtoai4Z+6vtdPbHECkpDX7pBOpgCuTyZBsX3RuiUHk
yVfJLxnuISAg/neRIzz3ssWiI8YwRRyFO3dnM+loKGxUeoUjtuEGC6XRNtxo
6msWXT8KBKexI9ul5ZctlBqviO7k9FqH6+2MTp+EnfCYC3RIkEAR8xDUkYiG
9Eo7mxrUypE8im/nRrQ7qZlAzKGdrr7bNffjodXzjZ2VcbsGMR5hIyv2LMoj
pc2sI12i68fHD68VnN0mLT1tGmiJOa3ZTHHZ2TzmWkMQOzEzmc0mg+7gtNDO
6rEAQZrd7hMzHcwW1fObnJM/0ncs45zerm2ptg03WamNVgqSeDOonkwEXFhS
SrS1LDkFQQZxF51vaK+BgPi3xs8eztzP13P4zB4iT0bteq+YDvjQ1P3MOtLk
YPernt9iH1gN9NaJE7tV1YjzZEDFc453Wql11uFmr4gWRbKfFab7SFU4T9Sx
LdjDc8UEUmRzL7JDp2f8XtGItume+ObB8eObeOd3Kiou2unNqN84Gf6dyxXN
ImaSsZjLGtLKAQmjhvgocbyCuJp7+SdJvy0gH7fTWy1DtU5me0DO8U2O6JrL
eOcPjGxbQd+5THb/go3eC4RGxHTV99w11h02KpIhH1beooj1iFfDa0828V8I
CIj/YOB6Nx5FkknE4z5nWC+3DdfrWsstg9Vu7pCN0Scu+Wlk00Kgz06c2Kmp
vxOYYoS1Evd4l6m/ytBTaWd1hLST6YiPlCPx9OZE2YL8S5boYv/GgmN2Honn
SSdCvqjTPGM3RsHiskRdtkTAg/p+4/sRsTkk+SJbcc/sIut7QcZDkU3ORAwS
F6ff3F9t6nkOtOmQVuiXjRm7nwivHBjevJy65hvumR2m/jqvkGYfadK3PQDc
6JeNx1zm5EwoS5Z2hYW2ICB+byADuokgnUwmnYqG4y6zi92hbb6nb3/o5Az6
VZPm/lreuR0DK2YPLJszdnC9uu6WT0KfMU/7pxjWkQZd5xNj51MnuzOgGk8F
HWTQTe4lfb/Iz7xIjsWVX2LekDAtFdx1ssQUAaHEYtkscM4lbfZkfgnEdzwa
DGsn3ZwBc18lGIJ5ALB9X8SkCKm4xs7HvLM7h1bO71vyxdjBH7SN9wMKoU9E
A4SpabhtH2mIWtTpmWAmlcTnK7IFZoQMCQHx+0GRR0quODMDJlXmMul0LBwx
yCz9Ver6ElPvU6CfRkwqG6VOcGXPwMrZ3fM/pa6bL7q+3zZcF9ZNRp16n4hi
pdTo28o1TXdNA1VuTm9QPpb0WTPpJJJJIpMG1IVaSIiSWyRVEhJljsg+htMh
JoYSEeC4DAlaQvJSZNB8tBnEuQiwesgdVgu8/EHbSKO+tVzfet8yVOOa6J6x
aaJWpYfTJ3twhrZtSe/Cz3sXfz5xdJ2hpTykk4bUfCulTl17Q9/+IAC6GvYh
1WNxn0Y8uQexgncPAgLi94Psy1kUiMg7jI4yZJByOh4BBGIeeKFtLrMO1YQU
EzG71s3rU1ScZ+1d2b9kdu+iL0Y3fSu6esDYXekR0sIGRWha6GZ3Wodrjd0V
2sZSXVu5hVLjZLZ5uH3+ydGwVhBzmVKRYDIaSUbD6dhMJj6Tic2k49HCOvoV
W0khu0VSM6G41xLRTwWlDC+/3znWaRuuN3Q+UjfdBRRnpbyw01u8U4wZkyog
m7BS6qVlJ5i7lw4s+6Jv0Ze0bUunbh+1DTfMWJRhNc9ObwZMDvrm4Q+mwv7i
OoP4qLGKumhdyDyqy/9iEmAICIjfFjJ44SoU6EQbkYOiKOUCkdwGoYhMPBIG
che13tDx2Nz33MMbCGmEIc0koE35gzPjRzYNb1oyuHLe8Pr5rP0rxbcP65rL
bcMt3klWcFriEzOczHb7aCNYbNRaU1+lofOxoeMR8tnzFNAvaBYsFgpSicxC
QRZkZQjZ09j91ND5BOxp6q0Ex7KBFkYbHYw2j3A0oJr0Sbh2ereh/YnswemJ
Y+tGNy0YWvUNdf0S5v51U7eOmrqe+GXjEb3EN0WzDKM9H3jhE9NSQTdeXpzQ
3IkRY2JjJl/k0ZR/JakFBATEbx6EMluc1Qc3RhM2F9zyUmAP3PiSTSWiNrWb
O2AZbjT3v3DQW3xCSlDFDap4YF3Xcl9y9wT39G7mvo2jW1eMbFpM27Z47MAq
/rnt4jvHlM9v6Jofm3peWIaa7Ix+F4/lFo27hWyPiO2dHPNOjrsnxz3iCZ94
wjOJbPSA/wrGHWMUK7XN1FMDfjv94ras/LTwyu7xI2voOxaPblk0umUZY+/6
ieM7xdePqGtuWKi1fvlESDvlm6K7gCg7VGsZrHWM9YT1YjQDOW4vIjV5cnSF
7N85wlRdYEVooYaA+F3h5z5BL6FoAzlzWOTzgvEr4lQZnDHKgDhnYwK1usnB
bHdzen2i4aCSH1BMONmd5oFqXfM9+ePz4tsnBJd/4pw9MPbTTvahTawD65h7
VzF2rWDsXs7Ys4K5r2jZi38y9i6n71lB3/09Y89K1r417AMb2Ue2T5z6kX/x
6OTN47L7Z9Q1JebeSgezzSdlB9VCn2gUqP/gq4XaaGd0uHmUkFqYItx18gVf
ejLq8GUfpGJrUZHjPXl2/mnXAgIC4jeJQsALGrgdjbvNwWmBf4rlFgw7x/qc
7C7XeJeH2+Ph9gPdNqDg+mQTHv6Qk9VupzVZqUC6qzb1PtO1PdA2lwHhs3hB
trSWGxEdvNpCqbGPAM26xTXR65tignb8EoabNwDYGCyuiR4gIro4gx4Rza/g
zNjUSJrfLJw5hICA+FeDFMIKIBx10ql0xBe1q0NacVAlANzlFTM9AppHOOIR
Dnt5gx5AcbwBD7cPITpunwdZ+omlz40uHl6fhz/g4fWDxc0fcvOpbv6IZ5IO
9Gi/UhDUiKNWVSroRurAIr6LRRIw2qs8FP4gICD+RSCLA5Je3MQEXpbUWwu+
OqjhB/XPSWUTM6mQJ+GzxVyGqFU9Y1JG8EVFLOhXs2rGqok5DUA0TQZc6VgI
yf2IOA5lCb+gggN5lgiULppAKERfQkBAQPwL8PMUDa/IcS+HVJP7F///rW3j
jRFt4pz8M2kxV7TDS/+CMiQEBMS/HqQ1p6iQTVEsTLH1Bzf55Ivo7K0NF8xD
xdr8q78u3i+XI911ID9CQED8a0FEwLz5/8XuhQWKJCNoXv/LXK6QnYfYkiPz
RRRPe+ZJX/dc0UK2Ah11ICAg/gUorlpVcC8smgx8KbqQ2BEvlFVcUvbtRyHL
4uQJPyO8neIf5ojSX+RRiM1Qz4aAgICAgICAgICAgICAgICAgICAgICAgICA
gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
gICAgICAgICAgICAgICA+F9DLpd77Zafb3/Lz99x5zcd8V+I9+vMP2QIv7aR
t+z/2n+94/7veAXf7+jv0fhrf/L2r29p891P8q89h7+2qb+n8Z+fn3dv5H//
2Xz3Hv6vUUEORSKReMf9syjyRT0EK69seaX94q+ZTCaZTL7H6DLZLPgh+DnW
4Xfsajqdxvr29wMcOpFMZnMvtfbKo/SmjoHTW9yNd+l/KpX6ec+Lfwg6E4/H
X9nn54928XommwEnhPyazeWwU/qmQ2CnGgz558N87XFfi3dhmzd1GKyD7kVm
Zjxer9vjDoZCiWTilabAiOKJOPh8FyrAVrAbI0eAHGBhdG/oLrY/6FLx8MF6
8T1JPiBv6swv4rWCx8/bfMejgN3AfRIIBl1ul8vtDgQCsXj8lYv+pm5gQytu
/x1v+De1UPz11+5fvFL8QP0qFk2lwYOVekufX9tIMBTs7u0NhcO/uHM6k7E7
HFMSyQSXw+VxwcLhckWTkwaDIZ549db9eQ/BjWUwGhlMRjQa/VWdBDBbLOOc
Cbvd/u4/cTgcY+PjZrP51x7rtdAbDDQG3R/wY1/f/WUHBtvX3+/z+3+VZEKj
08VT4jc99eABZ7HZz6uqevp6R0ZGRmm0EWQBf2kMBoPJYjGYzNHR0RFs++go
aA38b2BwgD0+Rj4d4UhEKBKxWCywP4vNYjKZNLSR4VHQ4ijSFp1OZyDdKL6p
wKHdbrdUJgNXf4IzweXxxsfH6QwGtoBeiSZFJrM5Fo+9y3P0Fm4ErwCtVjsw
OPissrLk9u2r16/fvnunprZ2ZHTE4XSSL+Vp9XRza0trW+sQlYJ1GwwBfNKR
E8EEQwOjQLYgZwMf1BBlCDSLXJF8PhQKTWvUPB6Pg9zSPPTG5qm1muTPniOs
e6FwSKFS8vh8sD/4BGdAJpcDDid3cHu9UrmMAwCeD2Q3Lo3oDLjzQQfAMj4x
wRcIVNMqMJBfFE5As+BKyWQy0BT2xE1wOJNiMXgS334vgRtPqVQOj442Njc/
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
agSdgy3DaDGyt+LvoCUwmP8HVGeFDA==
     "], {{0, 318}, {438, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{149., Automatic},
   ImageSizeRaw->{438, 318},
   PlotRange->{{0, 438}, {0, 318}}]]],
 "\n",
 StyleBox[">< Versione Studente ><", "Chapter",
  FontColor->RGBColor[0.9490196078431372, 0.4, 0.4117647058823529]]
}], "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.733997097004491*^9, 3.733997106359313*^9}, {
   3.7339972171329017`*^9, 3.73399722857377*^9}, {3.73399762815193*^9, 
   3.733997675658998*^9}, {3.7339977519055576`*^9, 3.7339977785914526`*^9}, {
   3.733997880525403*^9, 3.733997890833058*^9}, {3.733998261137269*^9, 
   3.7339982661024284`*^9}, {3.7339983036115665`*^9, 
   3.7339983168307953`*^9}, {3.7340021238503313`*^9, 3.734002128241235*^9}, {
   3.7340022350245*^9, 3.7340022615129633`*^9}},
 TextAlignment->Center,
 CellTags->"Home"],

Cell[TextData[StyleBox["a cura di",
 FontSlant->"Italic"]], "Subtitle",
 CellChangeTimes->{{3.733997679911029*^9, 3.7339976893847747`*^9}, {
  3.733998308332799*^9, 3.733998311301587*^9}},
 TextAlignment->Center],

Cell["Simone Bertolini, Alessio Francesconi, Matteo Grillini", "Text",
 CellChangeTimes->{{3.7339992978858657`*^9, 3.733999352144992*^9}, {
  3.734002085322394*^9, 3.734002111162717*^9}},
 TextAlignment->Center],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Hyperlink", "[", 
   RowBox[{
    RowBox[{"StatusArea", "[", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<img/right_arrow.png\>\"", "]"}], ",", " ", 
      "\"\<Introduction\>\""}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
      "\"\<Introduction\>\""}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7353868350071344`*^9, 3.735386839859412*^9}, {
  3.7353868704481616`*^9, 3.735386932359703*^9}, {3.735387013658353*^9, 
  3.7353870631511836`*^9}}],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{False->
    TagBox[
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAABgPf8HFuQ/5A==
        "], {{0, 512}, {512, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{512, 512},
      PlotRange->{{0, 512}, {0, 512}}],
     StatusArea[#, "Introduction"]& ,
     TagBoxNote->"Introduction"], True->
    StyleBox[
     TagBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAABgPf8HFuQ/5A==
         "], {{0, 512}, {512, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{512, 512},
       PlotRange->{{0, 512}, {0, 512}}],
      StatusArea[#, "Introduction"]& ,
      TagBoxNote->"Introduction"], "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaseStyle->{"Hyperlink"},
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData:>{
     NotebookObject[
      FrontEndObject[
       LinkObject["7nkfc_shm", 3, 1]], 33], "Introduction"},
   ButtonNote->ButtonData],
  Annotation[#, {
    NotebookObject[
     FrontEndObject[
      LinkObject["7nkfc_shm", 3, 1]], 33], "Introduction"}, 
   "Hyperlink"]& ]], "Output",
 CellChangeTimes->{3.7353871255137506`*^9, 3.735388099355451*^9, 
  3.7354615471685233`*^9, 3.7354616718883033`*^9, 3.735461879424384*^9, 
  3.7355394215251884`*^9, 3.7355395469496083`*^9, 3.7355413414244366`*^9, 
  3.735541653305361*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["1.1 Introduzione", "Section",
 CellChangeTimes->{{3.734002437896296*^9, 3.734002450726939*^9}},
 CellTags->"Introduction"],

Cell["Lo scopo di questo progetto", "Text",
 CellChangeTimes->{{3.7353878710203915`*^9, 3.7353878755526505`*^9}}],

Cell[CellGroupData[{

Cell["Come \[EGrave] strutturato", "Item",
 CellChangeTimes->{{3.7353879593774447`*^9, 3.735387978565542*^9}}],

Cell["obiettivo", "Item",
 CellChangeTimes->{{3.7353879593774447`*^9, 3.7353879966675777`*^9}}],

Cell["idea didattica", "Item",
 CellChangeTimes->{{3.7353879593774447`*^9, 3.7353880021488914`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
   RowBox[{"StatusArea", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<img/right_arrow.png\>\"", "]"}], ",", " ", 
     "\"\<Setup\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<Setup\>\""}], 
    "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{False->
    TagBox[
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAABgPf8HFuQ/5A==
        "], {{0, 512}, {512, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{512, 512},
      PlotRange->{{0, 512}, {0, 512}}],
     StatusArea[#, "Setup"]& ,
     TagBoxNote->"Setup"], True->
    StyleBox[
     TagBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAABgPf8HFuQ/5A==
         "], {{0, 512}, {512, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{512, 512},
       PlotRange->{{0, 512}, {0, 512}}],
      StatusArea[#, "Setup"]& ,
      TagBoxNote->"Setup"], "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaseStyle->{"Hyperlink"},
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData:>{
     NotebookObject[
      FrontEndObject[
       LinkObject["7nkfc_shm", 3, 1]], 33], "Setup"},
   ButtonNote->ButtonData],
  Annotation[#, {
    NotebookObject[
     FrontEndObject[
      LinkObject["7nkfc_shm", 3, 1]], 33], "Setup"}, 
   "Hyperlink"]& ]], "Output",
 CellChangeTimes->{3.7353880998984823`*^9, 3.735461547542924*^9, 
  3.7354616724851046`*^9, 3.735461879908985*^9, 3.735539422229992*^9, 
  3.73553954744921*^9, 3.7355413418778377`*^9, 3.735541653501562*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Chapter"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7353878573356085`*^9, 3.7353879209282455`*^9}}],

Cell["", "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Setup Project", "Section",
 CellChangeTimes->{{3.734002437896296*^9, 3.734002450726939*^9}, {
  3.735387250122878*^9, 3.7353872808866377`*^9}},
 CellTags->"Setup"],

Cell["\<\
Per iniziare il tutorial ricorda di fare la seguente operazione

Clicca Evalutation Nella Barra, clicca Evalutation Notebook\
\>", "Text",
 CellChangeTimes->{{3.735387289598136*^9, 3.7353873172877197`*^9}, {
  3.7353873628323245`*^9, 3.7353873811343713`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
   RowBox[{"StatusArea", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<img/right_arrow.png\>\"", "]"}], ",", " ", 
     "\"\<Index\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<Index\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.735387561415683*^9, 3.735387567924055*^9}}],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{False->
    TagBox[
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAABgPf8HFuQ/5A==
        "], {{0, 512}, {512, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{512, 512},
      PlotRange->{{0, 512}, {0, 512}}],
     StatusArea[#, "Index"]& ,
     TagBoxNote->"Index"], True->
    StyleBox[
     TagBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAABgPf8HFuQ/5A==
         "], {{0, 512}, {512, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{512, 512},
       PlotRange->{{0, 512}, {0, 512}}],
      StatusArea[#, "Index"]& ,
      TagBoxNote->"Index"], "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaseStyle->{"Hyperlink"},
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData:>{
     NotebookObject[
      FrontEndObject[
       LinkObject["7nkfc_shm", 3, 1]], 33], "Index"},
   ButtonNote->ButtonData],
  Annotation[#, {
    NotebookObject[
     FrontEndObject[
      LinkObject["7nkfc_shm", 3, 1]], 33], "Index"}, 
   "Hyperlink"]& ]], "Output",
 CellChangeTimes->{3.7353875738033915`*^9, 3.735388100066492*^9, 
  3.735461547839325*^9, 3.735461672656705*^9, 3.7354618800805855`*^9, 
  3.7355394224417925`*^9, 3.735539547614215*^9, 3.735541342042838*^9, 
  3.7355416536927624`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Funzioni di 1\[Degree] Grado (Rette)", "Subsection",
 CellChangeTimes->{{3.734264156011918*^9, 3.734264174551561*^9}, {
  3.7342647671947713`*^9, 3.7342647691117325`*^9}, {3.7355397046289797`*^9, 
  3.735539707531193*^9}},
 CellTags->"Index"],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["Teoria",
 BaseStyle->"Hyperlink",
 ButtonData->"E_G1"]], "Subsubtitle",
 CellChangeTimes->{{3.7342647720608826`*^9, 3.7342647844254065`*^9}, {
  3.7353875996248684`*^9, 3.7353875996268682`*^9}}],

Cell[TextData[ButtonBox["Esercizi",
 BaseStyle->"Hyperlink",
 ButtonData->"ES_G1"]], "Subsubtitle",
 CellChangeTimes->{{3.7342647720608826`*^9, 3.7342648062551336`*^9}, {
  3.7353876476756163`*^9, 3.7353876476776166`*^9}}],

Cell["Funzioni di 2\[Degree] Grado (Parabole)", "Subsection",
 CellChangeTimes->{{3.734264156011918*^9, 3.734264174551561*^9}, {
  3.7342642766773386`*^9, 3.7342643066454735`*^9}, {3.734328641837165*^9, 
  3.7343286437612753`*^9}, {3.735539710041607*^9, 3.735539712835228*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["Teoria",
 BaseStyle->"Hyperlink",
 ButtonData->"E_2G"]], "Subsubtitle",
 CellChangeTimes->{{3.7342647720608826`*^9, 3.7342647844254065`*^9}, {
  3.7353876789794073`*^9, 3.735387678981407*^9}}],

Cell[TextData[ButtonBox["Esercizi",
 BaseStyle->"Hyperlink",
 ButtonData->"ES_G2"]], "Subsubtitle",
 CellChangeTimes->{{3.7342647720608826`*^9, 3.7342647844254065`*^9}, {
  3.7342648210253296`*^9, 3.7342648237490826`*^9}, {3.735387755745798*^9, 
  3.735387755748798*^9}}],

Cell["Funzioni di 3\[Degree] Grado(Cubiche)", "Subsection",
 CellChangeTimes->{{3.734264156011918*^9, 3.734264174551561*^9}, {
  3.734264280070696*^9, 3.7342642801609745`*^9}, {3.734264316170017*^9, 
  3.7342643174315257`*^9}, {3.735539715768649*^9, 3.735539722617691*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["Teoria",
 BaseStyle->"Hyperlink",
 ButtonData->"E_G3"]], "Subsubtitle",
 CellChangeTimes->{{3.7342647720608826`*^9, 3.7342647844254065`*^9}, {
  3.735387777156022*^9, 3.7353877771580224`*^9}}],

Cell[TextData[ButtonBox["Esercizi",
 BaseStyle->"Hyperlink",
 ButtonData->"ES_G3"]], "Subsubtitle",
 CellChangeTimes->{{3.7342647720608826`*^9, 3.7342647844254065`*^9}, {
  3.7342648313996153`*^9, 3.734264833278369*^9}, {3.7353878028584924`*^9, 
  3.7353878028604927`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[TextData[StyleBox["Funzioni di 1 \[Degree]Grado", "Section"]], "Text",
 CellChangeTimes->{{3.734265091372779*^9, 3.7342651012527695`*^9}, {
  3.7355397368829784`*^9, 3.735539739804395*^9}},
 CellTags->"E_G1"],

Cell[CellGroupData[{

Cell["Introduzione ", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}}],

Cell["\<\
Conosciamo la forma delle funzioni di primo grado : f (x) = m X + q ma cosa \
vogliono dire i parametri m e q?

Ma soprattutto non ti ricorda la forma della retta?
\
\>", "Text",
 CellChangeTimes->{{3.7345006715616665`*^9, 3.734500680325534*^9}, {
  3.7345007282947474`*^9, 3.734500731374178*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "x"}], "+", "1"}], ",", 
      RowBox[{
       RowBox[{"4", "x"}], "-", "2"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "x"}], "+", "3"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"PlotLabels", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Plotting", " ", "some", " ", "functions", " ", "as", " ", "example"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7345007524053965`*^9, 3.7345007883036575`*^9}, {
  3.7345008229814744`*^9, 3.7345008826352205`*^9}, {3.734716349827651*^9, 
  3.73471637954216*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1GtMk2cYxvFS7SzCREorFis9PIhaLdSXRxnI0htZU5yCrAhzGpVVMIQx
YUIcBnESOSgzgpxUsB9EhhDiWLYM1Li8jwNFRTvmAszhaXaCtcuGnGTEjrH0
/nDl9/X/6VJbssxpQoFAEDe7/y0YjhudmSHMLceG8hdNDL4hKMfiFz553fEP
QTmmish2ZY0RlGM/llWKnw4RlGPikIFAdo+gHKvOTdl0pJ6gHGv1yGkUhBOU
Y6I0EyffqUHXML9fb2Q2nFKjemburNuz8o6KNZas7TZXh7L8v9/NrLArUR27
/HldRtuWQHQ1i69MUv17VoFqmcn6Q3zsnwHoCtbUfbA/Z4ccXc52FVXLfmr2
R5exwylzvvbyW4QGMYFOyccUS1EN++3Ls6WtfRJUxRTz01vGN/iyd6S9Zkdx
IPtkrVY0qPBBl7A94Y+bOzu9UH+mzYuc2dcoRqXs/KPEroPRItSXDRfKokyL
hcw2Z1XeSb03u1qzwvgi2cW7FTG948F4qHWST7n/nWN3pIt/7+qgpyt5hD+W
2+E3fWmEz25pm/L1s/NHNhXcKD9zi0/eS87fP3Sb79u8r6022m7ovvugLCzx
loHLaX92VzppiNRd/zbhtN1grU35qLnHA4QHZA9T5SMGt2KY551QaPlr0uB2
ARx92h+z/4LLsCHbqb7yswS+qS9JODzqgcogqyF14R/JIlQOuzLqlpYWilEF
HP/gQETYOS9UCXOlNUNfTC8AYdn7Y4YCNQz0FI8U+fiiBJLyLevqOiVoEGR6
OTW27VI0GJStN2vfeilDl0P+5ZhEn3p/dCVkN2W2rwuVo6vAWxhuCXkegK4G
46dba7RVCjQEFl9ZmmUMCoQTD092aCR6qNx/7JR+QAkbI7pizzj1YC7ZorO2
q9A1oN1RlNQ42+2Wg/4hz4aqJA0aBjbL82iJkqAUfp97capGQ1AK403pbfJg
glKQO50KtY6gFFJzRl+HricohemjM5fiPiQoheCv5AHHywlKIcI02OtdRVAK
mx3nSitqCUrhM51q4rSVoBSufR/c29RKUArmm2ElXd0EpZCWPhEV20NQCnnz
O8Z6bASlYI2P/PiXPoJSeNEPUc/sBJ3tzROOpQ0TlMLbS7paHC8JSoHbbfJ/
9YqgFIwenrbcCYJS2HbhTtHUFEEpZBhPrD/0hqAU8L9QCv8BzO82pg==
       "]]},
     Annotation[#, "Charting`Private`Tag$5717#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1H9QE3QYx/GxwJgDkR8ThnNj+3qYuwbIlMmY7eHLduMqkCCw00tpgkcE
QcIZHmqR/BDrSoHBCewKJILjkq47kbhqT4GiUsSVjggsDQURr/gp5EFkx/PH
517/fv56K605ielCgUAQ92T/e3w8bmZlheGqJhwr3DA/vMRIE8av/2Ph0j+M
NGFQZO5yziwjTfj96Qr322OMNKF7yKAcf2SkCavyU194t46RJmxzyWsS6Bhp
Qrd0S7j0VRUZg76/Xs5qPKskOSZ21x7cej2IjMbCv3dlnRlV4LcL8oir04Cd
b9dmtu+W40hU3MXBLYDxFclB/56Tkc+hxf5NfOzDQNKAzb1HnXn7pGQU7i+u
kvzU4k9G4onUpy6IfTeQO1GgUThiSvzICPzt/XNlbTd9yO0oW5vROse9SS2+
sUPtNizzwo5A23vZH27Dg7rfW7q7xWQoqgv0K282uZPPYsOtpJ6j0W7kVhwv
khgsAUIyGLtsz5jvpyw7bj1fpcpvU2HYxNBcqP2RY1U5mrqGRcspU45VAzC3
tX3R23fU0Xljz9Kpcm9MOcQafj52zVE9FNuy/cAa7P1h6LQ26aqxXlqpP+Sc
deg1332ZUDNqHHhdVF3SNWIUHpGMpEmnjK4P1Z3XwgXwtEdCkfWvR8Z1AZ8I
L494wsnbzpjD55eNq0rgi7rShBMzLpCq82xYursRchrT1t9NcSOVsD+zdlNZ
kTu5GcpfOhKprReTW8DVzzb2zuN1pBoG+0qmir284UKN+I5IEQLJhdaI2m4f
MgyyxJOq/r1+ZDgo2q5Ur3kgIbVQ2BmT5FXnT+6A3OasjohQKakDD6HOGnIv
kNwJ5uyXbepKGamHgK825Zg3y0kDVBw+dTZsUEHugsTS3Rp7RxA0eXy8V59t
BPW+4uSm40oSwDkmaqxMVpHR0G+9F+2jYCSHO66fLdpUjOQw15zRLg1mJAfp
5KRMqWEkh7S8mYXQKEZyeHxy5fO4PYzkEPypNLD8I0ZyiLQMD3hUMpLDixP1
ZWeqGcnhLU3QfI2dkRy+vhg80NzGSA6JV7SlPb2M5JCeMW+I7WMkh4K1l2b7
+hnJwR6vf+2Xm4zkcN8Jhj9HGfnkb4FwNn2ckRw8N/a0TjxgJIfwAxb/6WlG
cjC7iPrz5xnJ4ZXz14sXFxnJIdP8QdSxJUZyoH6RHP4DHQA44w==
       "]]},
     Annotation[#, "Charting`Private`Tag$5717#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1H1QE3Qcx3GYUCAoz+DmZGM/YjAc/AIc8ZD7KuzgSpB4qpMiQzCOhhBy
hIdiKEJaKvIgMdiVsEhcSucdaB61r7F4kCTOEDTERBIETHkGCVrUrz8+9/r3
/dfHJSkjOoVjZGQUsbp/PTQaMW0wEGTKYCTPcW5gmSBTBpHWvy9ceU6QKQNh
QOZKxgxBpgx+PFFq9mCEIFMGZl79zniTIFMG5dm7X/+4miBTBlrj/Rojf4JM
GZimhPlw3xEhcwvY3flJWXvGBZl+EN2q2uNxQ4hMX8h79qqyZFiAPyw4yzqm
fODqR6q0xp3OeC8ooqlf7AORpXHCv6v4KO6UWBt2vAxh6u8jw5/wUNOdKHbN
oVDffqBvfwIXmd6QWFju8Mt5J2RKIX/3mksWdo7I3AxGUoEu5Jg9MiXw26dV
xdrbtsh0B/7a1IbZ7TbIFMMHWySmA3wrbOZVHEk/9RLs8b9/vrXVAi9vzOgd
GiIgyQ007NOYoUOw+rB/tAjODcboD2wzxZ6nHg9bvhTCaIFDcNgGDjKd4VqF
u+Jx/Ipu8LVyUbaWB3Ts7qy3el73+axyqTLSCUKvDZivxE/qRIN/FuZ72kNm
Q+Oijd2w7u1xz3y93hri95Jztw526rqUrrEqbwto//nuCd+YDvn7bZpTVXMm
ECi9fjmqcljedmtrRGPqspyT43AvmTspXxRfOK1UPZO/aBlVkPR0Xl4iN4z3
c6/Ljz7oC8mqW5FbHkmw6jw5ovu2uigqf9oYcB9v+/POBV1GbbL1H/GmcD+0
U9hxkYOJaapNxQVm0NLrF7R+jTkefyMnwLfGAmzrnmTtfcUKTewrRg4vrQem
LfZ3HZsstLKBS5UWQ+YCR4zLS5KpWm3hwrxe6VfMRaXFhKh7lz3ccexT1DTx
UaBtO/vCuANsjT8pXdcrwLyrITFW1U7AdMHMemWzzJsLTIKWHP8kr0c8YLqi
Ij22QlLGB6YbbvhuU4bC1RmY7lia9ckZ2i8ApgdGF+2UqpuFoLH8YldguidK
EgrjNIdcILbZTBv+12bsGzGvLYsTwTc37ULFWi/sTnq0zVZAgElxyOTrxQoR
ASbF2frURq4bASZF7sQE30VKgEkxef/0gncQASbFpaOGixFvEmBSdPuKyzt+
mgCTYkDYQI9lGQEmxR1jNcUlZwkwKX4oFc5VqgkwKbY0ufXUawkwKUa3+Rbp
2wkwKaakzgWHdxFgUsxde2Wmq5sAk6I6MvC9X28TYFJ83AfBD4cJMFd7czkz
KaOrvf9Jcd1GfcPYOAEmRZ93w5ympggwKSqMzbuz5wgwKb5Vd6NwcZEAk2Ka
4rOgg8sEmPT/3yLApPgPJDA9Fg==
       "]]},
     Annotation[#, "Charting`Private`Tag$5717#3"]& ]}, {{{}, 
     {GrayLevel[0.4], AbsoluteThickness[
      0.5], {LineBox[{
        Scaled[{0.02, 0}, {10, 20.99999918367347}], 
         Offset[{3, 0}, Scaled[{0.02, 0}, {10, 20.99999918367347}]], 
         Offset[{7, 0}, Scaled[{0.02, 0}, {10, 20.999999178533404`}]], 
         Offset[{12, 0}, Scaled[{0.02, 0}, {10, 20.999999178533404`}]]}], 
       LineBox[{
        Scaled[{0.02, 0}, {10, 37.99999836734694}], 
         Offset[{3, 0}, Scaled[{0.02, 0}, {10, 37.99999836734694}]], 
         Offset[{7, 0}, Scaled[{0.02, 0}, {10, 37.99960468650754}]], 
         Offset[{12, 0}, Scaled[{0.02, 0}, {10, 37.99960468650754}]]}], 
       LineBox[{
        Scaled[{0.02, 0}, {10, -16.99999918367347}], 
         Offset[{3, 0}, Scaled[{0.02, 0}, {10, -16.99999918367347}]], 
         Offset[{7, 0}, Scaled[{0.02, 0}, {10, -16.99999918457844}]], 
         Offset[{12, 0}, Scaled[{0.02, 0}, {10, -16.99999918457844}]]}]}, {
       InsetBox[
        TagBox[
         RowBox[{
          RowBox[{"2", " ", "x"}], "+", "1"}],
         HoldForm], Offset[{15, 0}, 
        Scaled[{0.02, 0}, {10, 20.999999178533404}]], ImageScaled[{0, 0.5}]], 
       InsetBox[
        TagBox[
         RowBox[{
          RowBox[{"4", " ", "x"}], "-", "2"}],
         HoldForm], Offset[{15, 0}, 
        Scaled[{0.02, 0}, {10, 37.99960468650754}]], ImageScaled[{0, 0.5}]], 
       InsetBox[
        TagBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "x"}], "+", "3"}],
         HoldForm], Offset[{15, 0}, 
        Scaled[{0.02, 0}, {10, -16.99999918457844}]], 
        ImageScaled[{0, 0.5}]]}, {}, {}}}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 65}, {All, All}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-41.99999836734694, 37.99999836734694}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.734500762357285*^9, 3.734500789397403*^9}, 
   3.734500823997093*^9, {3.734500857073833*^9, 3.734500883322728*^9}, 
   3.7347163869910936`*^9, 3.735386512280676*^9, 3.7353865989256315`*^9, 
   3.735387126445804*^9, 3.735388100621524*^9, 3.735461553962139*^9, 
   3.735461674157708*^9, 3.7354618806043873`*^9, 3.7355394279258165`*^9, 
   3.7355395481984167`*^9, 3.735541342388039*^9, 3.735541653895563*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.734265411729381*^9, 3.734426123691478*^9, 
  3.7344299354126263`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.734500951732555*^9, 3.734500960028581*^9}}],

Cell[CellGroupData[{

Cell["Comprensione guidata del parametro q", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.735539749901639*^9, 3.735539750917443*^9}}],

Cell[TextData[{
 "Partiamo cercando di capire cosa rappresenta il ",
 StyleBox["q",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " della formula nei grafici :"
}], "Text",
 CellChangeTimes->{{3.7345010630125484`*^9, 3.7345010883905134`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "*", "x"}], "+", " ", "q"}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "3"}], ",", " ", 
        RowBox[{"+", "3"}]}], "}"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"2", "x"}], "+", "q"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"q", ",", " ", 
      RowBox[{"-", "10"}], ",", 
      RowBox[{"+", "10"}]}], "}"}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Plotting", " ", "an", " ", "example"}], ",", " ", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{
     "Check", " ", "if", " ", "zoom", " ", "function", " ", "is", " ", 
      "correct"}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.734501161680472*^9, 3.7345011739527473`*^9}, {
  3.734501210780246*^9, 3.734501235434394*^9}, {3.7345012937893457`*^9, 
  3.7345013971899204`*^9}, {3.7347166436273437`*^9, 3.7347166538967533`*^9}, {
  3.7347167313457804`*^9, 3.734716748116282*^9}, {3.7347169086691036`*^9, 
  3.734716924127616*^9}, {3.7347472384551992`*^9, 3.7347472415020914`*^9}, {
  3.7355381238135242`*^9, 3.735538131256776*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`q$$], -10, 10}}, Typeset`size$$ = {
    360., {118., 125.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`q$5962$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`q$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`q$$, $CellContext`q$5962$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[2 $CellContext`x + $CellContext`q$$, {$CellContext`x, -3, 
         Plus[3]}, PlotLabel -> 2 $CellContext`x + $CellContext`q$$], 
      "Specifications" :> {{$CellContext`q$$, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {165., 172.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7345011768120584`*^9, 3.734501239447301*^9, {3.734501305263352*^9, 
   3.7345013236675696`*^9}, 3.7345013584792557`*^9, 3.734501397705552*^9, 
   3.734716775958246*^9, 3.7353865131157236`*^9, 3.735386599062639*^9, 
   3.73538712655081*^9, 3.7353881009545426`*^9, 3.7354615545111403`*^9, 
   3.735461674454109*^9, 3.7354618808695874`*^9, {3.7355381446036663`*^9, 
   3.7355381667602797`*^9}, 3.7355394283168173`*^9, 3.7355395487152176`*^9, 
   3.735541342481639*^9, 3.735541654051563*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hyperText", "[", 
   RowBox[{"\"\<Hai dubbi su come cambia il grafico quando cambia \!\(\*
StyleBox[\"q\",
FontWeight->\"Bold\",
FontSlant->\"Italic\"]\)?\>\"", ",", 
    "\"\<Il termine noto q indica l\[CloseCurlyQuote]ordinata del punto di \
intersezione del grafico con l\[CloseCurlyQuote]asse Y\>\"", ",", 
    "LinkHand"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Creating", " ", "a", " ", "cliccable", " ", "text"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7345016626353645`*^9, 3.734501673818714*^9}, {
  3.734501998886305*^9, 3.734502208119441*^9}, {3.7345022506776333`*^9, 
  3.7345023266454487`*^9}, {3.734502390696959*^9, 3.734502418916597*^9}, {
  3.734502636711109*^9, 3.734502693697912*^9}, {3.734502733556945*^9, 
  3.734502750359337*^9}, {3.7345028078580184`*^9, 3.7345028416735263`*^9}, {
  3.73471675661714*^9, 3.734716768739394*^9}, {3.7347169593824797`*^9, 
  3.7347169664928503`*^9}, {3.7347499679497395`*^9, 3.734749989212011*^9}, {
  3.73475013793229*^9, 3.734750156121544*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia \
\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontWeight->\\\"Bold\\\",\\nFontSlant->\\\"\
Italic\\\"]\\)?\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "Il termine noto q indica l\[CloseCurlyQuote]ordinata del punto di \
intersezione del grafico con l\[CloseCurlyQuote]asse Y"], Method -> 
    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
    True}]]], "Output",
 CellChangeTimes->{
  3.734502293057641*^9, 3.734502665103933*^9, 3.734502695993023*^9, {
   3.734502736373279*^9, 3.7345027541026945`*^9}, 3.7345028093861*^9, 
   3.7345028447817307`*^9, 3.7347167732707405`*^9, 3.734749990118272*^9, 
   3.734750157277809*^9, 3.7347504176471243`*^9, 3.735386513344736*^9, 
   3.7353865991886463`*^9, 3.735387126958833*^9, 3.7353881010895505`*^9, 
   3.735461554745141*^9, 3.7354616745809093`*^9, 3.7354618812301903`*^9, 
   3.7355394285180182`*^9, 3.735539548890818*^9, 3.73554134261244*^9, 
   3.7355416542553635`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione del caso particolare", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}}],

Cell["Hai posto attenzione a cosa succede quando q = 0?", "Text",
 CellChangeTimes->{{3.7345029675117826`*^9, 3.7345029797414255`*^9}, {
  3.7346883278264246`*^9, 3.7346883360782404`*^9}, {3.7347167994697275`*^9, 
  3.734716801668829*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Row", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Hyperlink", "[", 
      RowBox[{
       RowBox[{"StatusArea", "[", 
        RowBox[{
         RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
         "\"\<AG_C1_G1\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
         "\"\<AG_C1_G1\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<No\>\"", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"p1", "\[Equal]", " ", "0"}], ",", 
         RowBox[{
          RowBox[{"p1", "=", "1"}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"2", "x"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"-", "5"}], ",", 
               RowBox[{"+", "5"}]}], "}"}], ",", " ", 
             RowBox[{"PlotLegends", "\[Rule]", "\"\<y = 2 x + 0\>\""}]}], 
            "]"}], "]"}]}]}], "]"}]}], "]"}]}], "}"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Generating", " ", 
    RowBox[{"Button", "[", "YES", "]"}], " ", "to", " ", "proceed", " ", 
    "and", " ", 
    RowBox[{"Button", "[", "NO", "]"}], " ", "to", " ", "draw", " ", "the", 
    " ", "answer"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7345029885305758`*^9, 3.734503011150111*^9}, {
   3.7345030422233295`*^9, 3.7345031442374134`*^9}, {3.734503177721815*^9, 
   3.734503300349271*^9}, {3.7345033508342648`*^9, 3.734503388044582*^9}, {
   3.734504129326068*^9, 3.7345041970183425`*^9}, {3.7345042340631676`*^9, 
   3.7345042509149756`*^9}, {3.7345043086039963`*^9, 3.734504309072737*^9}, 
   3.7345043490496173`*^9, {3.734504383098099*^9, 3.7345044178440657`*^9}, {
   3.7345047324904203`*^9, 3.734504751402792*^9}, {3.734504812045418*^9, 
   3.7345048518122034`*^9}, {3.7345049018776445`*^9, 
   3.7345049206760445`*^9}, {3.7345049562809944`*^9, 
   3.7345049575466523`*^9}, {3.734505069910708*^9, 3.734505100876888*^9}, {
   3.734505135340006*^9, 3.7345051983900146`*^9}, {3.734505263803197*^9, 
   3.7345053055259595`*^9}, {3.7345057308107967`*^9, 3.7345057721089706`*^9}, 
   3.734506266121472*^9, {3.7345068755043697`*^9, 3.7345068855200253`*^9}, {
   3.7346869754592657`*^9, 3.734686976099867*^9}, {3.734687289634714*^9, 
   3.7346872958179283`*^9}, {3.7346873669956985`*^9, 3.734687373466313*^9}, {
   3.734688356002079*^9, 3.734688491861334*^9}, {3.7346886723811016`*^9, 
   3.734688673582304*^9}, {3.734717039438263*^9, 3.7347170512478933`*^9}, {
   3.734717807209796*^9, 3.7347178565912914`*^9}, {3.7347948341871877`*^9, 
   3.7347948739258547`*^9}, 3.7347949065839777`*^9, 3.7347998378218403`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
          Automatic, Method -> "Preemptive"], StatusArea[#, "AG_C1_G1"]& , 
         TagBoxNote -> "AG_C1_G1"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
           Automatic, Method -> "Preemptive"], StatusArea[#, "AG_C1_G1"]& , 
          TagBoxNote -> "AG_C1_G1"], {"HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["7nkfc_shm", 3, 1]], 33], "AG_C1_G1"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["7nkfc_shm", 3, 1]], 33], "AG_C1_G1"}, "Hyperlink"]& ],
   "\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> If[MClib`p1 == 0, MClib`p1 = 1; Print[
        Plot[2 $CellContext`x, {$CellContext`x, -5, 
          Plus[5]}, PlotLegends -> "y = 2 x + 0"]]], Appearance -> Automatic, 
    Evaluator -> Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.734716580875136*^9, 3.7347950101538153`*^9, 
  3.7353865134497423`*^9, 3.735386599213648*^9, 3.7353871269798346`*^9, 
  3.735388101130553*^9, 3.7354615547763405`*^9, 3.735461674612109*^9, 
  3.73546188124579*^9, 3.7355394285336185`*^9, 3.7355395489230185`*^9, 
  3.7355413426380405`*^9, 3.7355416542865634`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Analisi guidata del coefficiente di primo grado", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}},
 CellTags->"AG_C1_G1"],

Cell["\<\
Ora abbiamo capito cosa vuol dire il termine noto sul grafico ma il \
coefficiente di primo grado m come si traduce sul grafico?\
\>", "Text",
 CellChangeTimes->{{3.734504552225568*^9, 3.7345045605891476`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"m", "*", "x"}], "-", "2"}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", " ", 
       RowBox[{"+", "3"}]}], "}"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"m", " ", "*", "x"}], "-", "2"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", " ", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7345045914906626`*^9, 3.7345046146448374`*^9}, {
  3.73510672993303*^9, 3.735106736951003*^9}, {3.735538197118265*^9, 
  3.7355382234498577`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`m$$], -10, 10}}, Typeset`size$$ = {
    360., {117., 123.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`m$6031$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`m$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`m$$, $CellContext`m$6031$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`m$$ $CellContext`x - 2, {$CellContext`x, -3, 
         Plus[3]}, PlotLabel -> $CellContext`m$$ $CellContext`x - 2], 
      "Specifications" :> {{$CellContext`m$$, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {163., 170.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7345046195198936`*^9, 3.7351067379687233`*^9, 3.7353865134997454`*^9, 
   3.735386599268651*^9, 3.735387127030837*^9, 3.7353881011695547`*^9, 
   3.735461554885541*^9, 3.73546167465891*^9, 3.73546188129259*^9, {
   3.735538201020686*^9, 3.7355382273048706`*^9}, 3.7355394285804186`*^9, 
   3.735539548969818*^9, 3.73554134268484*^9, 3.7355416543353634`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EventHandler", "[", 
   RowBox[{
    RowBox[{"MouseAppearance", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Hai dubbi su come cambia il grafico quando cambia m?\
\[CloseCurlyDoubleQuote] \>\"", ",", 
        RowBox[{"FontColor", "\[Rule]", "Blue"}]}], "]"}], ",", "LinkHand"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<MouseClicked\>\"", "\[RuleDelayed]", "  ", 
      RowBox[{
      "MessageDialog", "[", 
       "\"\<Il coefficiente di primo grado indica \
l\[CloseCurlyQuote]inclinazione del grafico rispetto \
all\[CloseCurlyQuote]asse X\>\"", "]"}]}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.734506466452481*^9, 3.7345064958257895`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia m?\
\[CloseCurlyDoubleQuote] \"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "Il coefficiente di primo grado indica l\[CloseCurlyQuote]inclinazione \
del grafico rispetto all\[CloseCurlyQuote]asse X"], Method -> "Preemptive", 
    PassEventsDown -> Automatic, PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{3.7345064998864284`*^9, 3.7353865135997515`*^9, 
  3.7353865993696566`*^9, 3.735387127134843*^9, 3.735388101281561*^9, 
  3.7354615550279417`*^9, 3.7354616747525096`*^9, 3.7354618813881903`*^9, 
  3.7355394287364187`*^9, 3.7355395491102185`*^9, 3.7355413427170405`*^9, 
  3.7355416544757643`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione del caso particolare", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}}],

Cell[TextData[{
 "Hai notato cosa cambia se ",
 StyleBox["m",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " < 0 o ",
 StyleBox["m",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " > 0?"
}], "Text",
 CellChangeTimes->{{3.734506649536941*^9, 3.734506671161417*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", "\"\<\\t\>\"", ",", 
    RowBox[{"Button", "[", 
     RowBox[{"\"\<No\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p2", " ", "\[Equal]", " ", "0"}], ",", 
        RowBox[{
         RowBox[{"p2", "=", "1"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "x"}], "+", "2"}], ",", 
              RowBox[{"x", "+", "2"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "5"}], ",", 
              RowBox[{"+", "5"}]}], "}"}], ",", " ", 
            RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
           "]"}], "]"}], ";", " ", 
         RowBox[{
         "Print", "[", 
          "\"\<Come puoi vedere i grafici formano con l\[CloseCurlyQuote]asse \
X angoli acuti se m>0 e ottusi se m<0\>\"", "]"}]}], ",", 
        RowBox[{"p2", "=", "1"}]}], "]"}]}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7345068076352158`*^9, 3.734506848009202*^9}, {
  3.734506903390159*^9, 3.734506908798191*^9}, {3.7345069573351603`*^9, 
  3.734506988873291*^9}}],

Cell[BoxData[
 TemplateBox[{
  ButtonBox[
   "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> Automatic,
     Method -> "Preemptive"],"\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> If[MClib`p2 == 0, MClib`p2 = 1; Print[
        Plot[{-$CellContext`x + 2, $CellContext`x + 2}, {$CellContext`x, -5, 
          Plus[5]}, PlotLegends -> "Expressions"]]; 
      Print["Come puoi vedere i grafici formano con l\[CloseCurlyQuote]asse X \
angoli acuti se m>0 e ottusi se m<0"], MClib`p2 = 1], Appearance -> Automatic,
     Evaluator -> Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.734506851435546*^9, 3.7345069097552867`*^9, 
  3.7345069896791353`*^9, 3.7347999882893586`*^9, 3.7353865136167517`*^9, 
  3.735386599387658*^9, 3.7353871271528444`*^9, 3.7353881013095627`*^9, 
  3.7354615551527414`*^9, 3.7354616747837095`*^9, 3.7354618814037905`*^9, 
  3.735539428753019*^9, 3.7355395491414185`*^9, 3.7355413427326407`*^9, 
  3.735541654491364*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.734506614627508*^9, 3.7345066303487577`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione del caso particolare", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}}],

Cell["Hai notato cosa succede se m = 0?", "Text",
 CellChangeTimes->{{3.7345070642719755`*^9, 3.734507089364261*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Button", "[", "\"\<Si\>\"", " ", "]"}], ",", "\"\<\\t\>\"", ",", 
    
    RowBox[{"Button", "[", 
     RowBox[{"\"\<No\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p3", " ", "\[Equal]", " ", "0"}], ",", 
        RowBox[{
         RowBox[{"p3", "=", "1"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"0", "x"}], "+", "1"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "5"}], ",", 
              RowBox[{"+", "5"}]}], "}"}], ",", " ", 
            RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
           "]"}], "]"}], ";", " ", 
         RowBox[{
         "Print", "[", 
          "\"\<Come puoi vedere il grafico \[EGrave] parallelo all'asse \
X\>\"", "]"}]}], ",", 
        RowBox[{"p3", "=", "1"}]}], "]"}]}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.734507111197999*^9, 3.734507112701412*^9}, {
  3.7345071435683517`*^9, 3.734507165341338*^9}, {3.7345071962081976`*^9, 
  3.7345072007563524`*^9}, {3.7346882819498606`*^9, 3.734688302109898*^9}}],

Cell[BoxData[
 TemplateBox[{
  ButtonBox[
   "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> Automatic,
     Method -> "Preemptive"],"\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> If[MClib`p3 == 0, MClib`p3 = 1; Print[
        Plot[0 $CellContext`x + 1, {$CellContext`x, -5, 
          Plus[5]}, PlotLegends -> "Expressions"]]; 
      Print["Come puoi vedere il grafico \[EGrave] parallelo all'asse X"], 
      MClib`p3 = 1], Appearance -> Automatic, Evaluator -> Automatic, Method -> 
    "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.734507167812174*^9, 3.734507203796135*^9, 
  3.7353865136417537`*^9, 3.735386599413659*^9, 3.735387127179846*^9, 
  3.7353881013405647`*^9, 3.7354615552151413`*^9, 3.73546167481491*^9, 
  3.7354618814349904`*^9, 3.7355394288310184`*^9, 3.735539549203819*^9, 
  3.735541342779441*^9, 3.735541654538164*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Caso particolare ",
 StyleBox["X",
  FontWeight->"Bold"],
 "=",
 StyleBox["k",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345073172201977`*^9, 3.7345073271699533`*^9}}],

Cell["\<\
Prima di farti sperimentare liberamente bisogna riflettere su un caso unico \
delle rette non delle funzioni.
Pensa a quale possa essere e poi scopriamolo insieme.


Il caso delle rette verticali che sono della forma X=k con k che \[EGrave] un \
qualunque numero.\
\>", "Text",
 CellChangeTimes->{{3.7345074035608597`*^9, 3.734507428474025*^9}, {
  3.7345074742876225`*^9, 3.734507485146605*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"-", "10"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", 
          RowBox[{"+", "4"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", 
          RowBox[{"+", "4"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<x = \>\"", ",", 
        RowBox[{"ToString", "[", "k", "]"}]}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"-", "3.5"}], ",", "3.5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.734507514570382*^9, 3.7345075961520786`*^9}, {
   3.734582346171256*^9, 3.734582377141985*^9}, {3.734582416390339*^9, 
   3.734582416671611*^9}, {3.7345825612635975`*^9, 3.7345825642996535`*^9}, {
   3.734582704667713*^9, 3.73458270951155*^9}, 3.7345842987816615`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = -3.5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`k$$], -3.5, 3.5}}, Typeset`size$$ = {
    360., {120., 125.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`k$6099$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`k$$ = -3.5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$6099$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ListLinePlot[{{$CellContext`k$$, 10}, {$CellContext`k$$, -10}}, 
        PlotRange -> {{-4, 
           Plus[4]}, {-4, 
           Plus[4]}}, PlotLabel -> StringJoin["x = ", 
          ToString[$CellContext`k$$]]], 
      "Specifications" :> {{$CellContext`k$$, -3.5, 3.5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {166., 173.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.734507583093998*^9, 3.734507603249482*^9}, {
   3.734582409235715*^9, 3.7345824172184763`*^9}, 3.7345825869708166`*^9, 
   3.7345827228103247`*^9, 3.734584300040515*^9, 3.7353865136857557`*^9, 
   3.735386599458662*^9, 3.7353871272218485`*^9, 3.735388101383567*^9, 
   3.735461555277542*^9, 3.73546167484611*^9, 3.7354618814661903`*^9, 
   3.7355394289628196`*^9, 3.735539549313019*^9, 3.735541342810641*^9, 
   3.735541654586964*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Ora tocca a te!", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}},
 CellTags->"TS1"],

Cell["\<\
Inserisci tu le rette e osserva come sono rappresentate graficamente.Puoi \
confrontare contemporaneamente 5 equazioni\
\>", "Text",
 CellChangeTimes->{{3.734584475422347*^9, 3.734584492542039*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"freeEq", " ", "=", " ", 
  RowBox[{"{", "}"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "List", " ", "that", " ", "contains", " ", "at", " ", "most", " ", "5", 
     " ", "expressions", " ", "to", " ", "be", " ", "compared"}], ",", " ", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{"Insert", " ", "in", " ", "package"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7345845701585894`*^9, 3.734584574994399*^9}, {
  3.734717231974553*^9, 3.7347172422400436`*^9}, {3.7347181108858223`*^9, 
  3.7347181516421776`*^9}, {3.7347181991009607`*^9, 3.7347182257185035`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.7345845771773443`*^9, 3.7345854308380914`*^9, 
  3.734586665585668*^9, 3.7347172955133257`*^9, 3.735293017832015*^9, 
  3.735386513778761*^9, 3.735386599561668*^9, 3.7353871273638563`*^9, 
  3.7353881016325817`*^9, 3.735461555402342*^9, 3.7354616752683105`*^9, 
  3.7354618816075907`*^9, 3.7355386251503763`*^9, 3.735539429496022*^9, 
  3.7355395495016203`*^9, 3.735541342843841*^9, 3.7355416547127647`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"currentEq", " ", "=", "\"\<\>\"", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Current", " ", "expression", " ", "that", " ", "user", " ", "is", " ", 
     "inserting"}], ",", " ", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{"Insert", " ", "in", " ", "package"}]}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.734584857448537*^9, 3.7345849042009277`*^9}, 
   3.7345850186656656`*^9, {3.734585118813517*^9, 3.7345851198601613`*^9}, {
   3.73471729962276*^9, 3.7347173329840403`*^9}, {3.7347182374531965`*^9, 
   3.734718289241253*^9}}],

Cell[BoxData["\<\"\"\>"], "Output",
 CellChangeTimes->{3.7345849052083883`*^9, 3.7345850209675007`*^9, 
  3.7345851219289083`*^9, 3.734717344069256*^9, 3.735293020675027*^9, 
  3.7353865138157635`*^9, 3.735386599577669*^9, 3.735387127379857*^9, 
  3.7353881017085857`*^9, 3.735461555417942*^9, 3.7354616752839108`*^9, 
  3.735461881623191*^9, 3.735538629244196*^9, 3.7355394295770226`*^9, 
  3.7355395495172205`*^9, 3.735541342859441*^9, 3.735541654743964*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dynamic", "[", "freeEq", "]"}], " ", 
  RowBox[{"(*", " ", "DEBUG", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7345853538692427`*^9, 3.734585357806115*^9}, {
  3.7347182980137477`*^9, 3.7347183044287624`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`freeEq, StandardForm],
  ImageSizeCache->{16., {2., 8.}}]], "Output",
 CellChangeTimes->{3.734585358556283*^9, 3.7347174241993747`*^9, 
  3.7353865138297644`*^9, 3.735386599636672*^9, 3.7353871273958583`*^9, 
  3.7353881017175865`*^9, 3.7354615554647417`*^9, 3.735461675299511*^9, 
  3.735461881701191*^9, 3.7355394295926228`*^9, 3.73553954958162*^9, 
  3.735541342875041*^9, 3.7355416547595644`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Panel", "[", 
   RowBox[{"Column", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"InputField", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", "currentEq", "]"}], ",", "String"}], "]"}],
          ",", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Confronta\>\"", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "freeEq", "]"}], "<", "5"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"freeEq", ",", 
               RowBox[{"ToExpression", "[", "currentEq", "]"}]}], "]"}], ",", 
             
             RowBox[{
             "MessageDialog", "[", 
              "\"\<Hai gi\[AGrave] inserito 5 grafici, eliminane uno prima di \
aggiungerne uno nuovo!\>\"", "]"}]}], "]"}]}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Dynamic", "[", 
       RowBox[{"Row", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", "=", "i"}], "}"}], ",", 
            RowBox[{"Column", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Plot", "[", 
                RowBox[{
                 RowBox[{"freeEq", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{"-", "10"}], ",", 
                   RowBox[{"+", "10"}]}], "}"}], ",", 
                 RowBox[{"PlotLabel", "\[Rule]", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"freeEq", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
                 RowBox[{"ImageSize", "->", "Small"}]}], "]"}], ",", 
               "\"\<\\t\>\"", ",", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<Elimina\>\"", ",", 
                 RowBox[{"freeEq", "=", 
                  RowBox[{"Delete", "[", 
                   RowBox[{"freeEq", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{"freeEq", ",", 
                    RowBox[{"freeEq", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
                "]"}]}], "}"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "freeEq", "]"}]}], "}"}]}], "]"}], "]"}], 
       "]"}]}], "}"}], "]"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Drawing", " ", "the", " ", "list", " ", "of", " ", "the", " ", 
     "functions", " ", "that", " ", "the", " ", "user", " ", "want", " ", 
     "to", " ", "compare"}], ",", " ", 
    RowBox[{
     RowBox[{
     "Delete", " ", "button", " ", "allow", " ", "to", " ", "remove", " ", 
      "that", " ", "expression", " ", "from", " ", "the", " ", "list"}], ";", 
     " ", 
     RowBox[{"TODO", " ", "Insert", " ", "in", " ", "package"}]}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.734584951884784*^9, 3.7345850128410425`*^9}, {
  3.7345851132292385`*^9, 3.7345851636351585`*^9}, {3.734585199782674*^9, 
  3.7345853225816307`*^9}, {3.7345854156036406`*^9, 3.7345854156973734`*^9}, {
  3.7345855715627775`*^9, 3.734585626903761*^9}, {3.734585774165642*^9, 
  3.734585813173481*^9}, {3.7345858895678377`*^9, 3.734585898401967*^9}, {
  3.7345859757360353`*^9, 3.734586001901822*^9}, {3.7345860476343837`*^9, 
  3.734586080791399*^9}, {3.734586306933238*^9, 3.734586340685607*^9}, {
  3.734586437509316*^9, 3.7345864543649907`*^9}, {3.7345885853640985`*^9, 
  3.734588620322151*^9}, {3.7345887586137147`*^9, 3.7345888022991247`*^9}, {
  3.7345888414401913`*^9, 3.7345888436347003`*^9}, {3.7345891346816206`*^9, 
  3.7345892176112394`*^9}, {3.734717406554085*^9, 3.7347174167461433`*^9}, {
  3.7347184408642807`*^9, 3.734718500298196*^9}}],

Cell[BoxData[
 PanelBox[
  TagBox[GridBox[{
     {
      TemplateBox[{InputFieldBox[
         Dynamic[$CellContext`currentEq], String],ButtonBox[
        "\"Confronta\"", ButtonFunction :> If[Length[$CellContext`freeEq] < 5, 
           AppendTo[$CellContext`freeEq, 
            ToExpression[$CellContext`currentEq]], 
           MessageDialog[
           "Hai gi\[AGrave] inserito 5 grafici, eliminane uno prima di \
aggiungerne uno nuovo!"]], Appearance -> Automatic, Evaluator -> Automatic, 
         Method -> "Preemptive"]},
       "RowDefault"]},
     {
      DynamicBox[ToBoxes[
        Row[
         Table[
          With[{$CellContext`i = $CellContext`i}, 
           Column[{
             Plot[
              Part[$CellContext`freeEq, $CellContext`i], {$CellContext`x, -10, 
               Plus[10]}, PlotLabel -> ToString[
                Part[$CellContext`freeEq, $CellContext`i]], ImageSize -> 
              Small], "\t", 
             Button[
             "Elimina", $CellContext`freeEq = Delete[$CellContext`freeEq, 
                Position[$CellContext`freeEq, 
                 
                 Part[$CellContext`freeEq, $CellContext`i]]]]}]], \
{$CellContext`i, 
           Length[$CellContext`freeEq]}]], StandardForm],
       ImageSizeCache->{4., {0., 0.}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"]]], "Output",
 CellChangeTimes->{3.735293025851055*^9, 3.7353865138687663`*^9, 
  3.735386599657673*^9, 3.735387127415859*^9, 3.735388101749588*^9, 
  3.7354615555115423`*^9, 3.735461675330711*^9, 3.735461881732391*^9, 
  3.7355386707332172`*^9, 3.735539429670623*^9, 3.7355395496128206`*^9, 
  3.7355413430838413`*^9, 3.735541654790765*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.73471742952279*^9, 3.7352930309730864`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{
     RowBox[{"StatusArea", "[", 
      RowBox[{
       RowBox[{
       "Button", "[", "\"\<Ti senti pronto per gli esercizi\>\"", "]"}], ",", 
       " ", "\"\<ES_G1\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<ES_G1\>\""}], 
      "}"}]}], "]"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7352970565647717`*^9, 3.735297060318987*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Ti senti pronto per gli esercizi\"", ButtonFunction :> {}, 
          Evaluator -> None, Appearance -> Automatic, Method -> "Preemptive"],
          StatusArea[#, "ES_G1"]& , TagBoxNote -> "ES_G1"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Ti senti pronto per gli esercizi\"", ButtonFunction :> {}, 
           Evaluator -> None, Appearance -> Automatic, Method -> 
           "Preemptive"], StatusArea[#, "ES_G1"]& , TagBoxNote -> "ES_G1"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["7nkfc_shm", 3, 1]], 33], "ES_G1"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["7nkfc_shm", 3, 1]], 33], "ES_G1"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7352970825742598`*^9, 3.7353865138997684`*^9, 
  3.7353865996946754`*^9, 3.7353871274728622`*^9, 3.73538810178559*^9, 
  3.7354615555925426`*^9, 3.735461675361911*^9, 3.735461881763591*^9, 
  3.735539429764223*^9, 3.7355395496908207`*^9, 3.735541343130642*^9, 
  3.7355416548375645`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Esercizi Tipologia 1", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}, {3.7346172310281005`*^9, 3.734617241201078*^9}, {
   3.735325637656559*^9, 3.7353256409337463`*^9}},
 CellTags->"ES_G1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dynamic", "[", "teacherEQ", "]"}], 
  RowBox[{"(*", " ", "DEBUG", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7346132087818155`*^9, 3.7346132211930084`*^9}, {
  3.734801122706935*^9, 3.7348011279189725`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[MClib`teacherEQ, StandardForm],
  ImageSizeCache->{883., {27., 12.}}]], "Output",
 CellChangeTimes->{3.7353214792328205`*^9, 3.735386513943771*^9, 
  3.7353865997136765`*^9, 3.7353871274898634`*^9, 3.735388101796591*^9, 
  3.735461555608143*^9, 3.7354616753931108`*^9, 3.735461881794791*^9, 
  3.735539429826623*^9, 3.735539549768821*^9, 3.7355413431618423`*^9, 
  3.735541654873765*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dynamic", "[", "exercises", "]"}], 
  RowBox[{"(*", " ", "DEBUG", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7346163843193846`*^9, 3.734616384600638*^9}, {
   3.734616920118405*^9, 3.7346169473146863`*^9}, 3.734801134568338*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[MClib`exercises, StandardForm],
  ImageSizeCache->{1104.5, {133., 12.}}]], "Output",
 CellChangeTimes->{
  3.734616673421238*^9, {3.7346167144698167`*^9, 3.7346167355230656`*^9}, {
   3.7346169229620657`*^9, 3.7346169481584487`*^9}, 3.734689175919614*^9, 
   3.7346893102338285`*^9, 3.734689495342474*^9, 3.7346900392147837`*^9, 
   3.7346901897467856`*^9, 3.7346902268546553`*^9, {3.7346902570629125`*^9, 
   3.7346902869325686`*^9}, {3.7346903271852465`*^9, 
   3.7346903484184923`*^9}, {3.734690386297764*^9, 3.734690402980995*^9}, 
   3.7351096467719116`*^9, 3.735315079212102*^9, 3.7353202748688574`*^9, 
   3.7353206595523367`*^9, 3.735321314668256*^9, 3.7353865139677725`*^9, 
   3.735386599737678*^9, 3.7353871275118647`*^9, 3.7353881018125916`*^9, 
   3.735461555686143*^9, 3.7354616754243107`*^9, 3.7354618818103914`*^9, 
   3.735539429842223*^9, 3.7355395498312206`*^9, 3.735541343177442*^9, 
   3.7355416548923655`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exKindAPrinter", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.7353168024791183`*^9, 3.7353168092373366`*^9}, {
  3.7353202561333475`*^9, 3.735320256261397*^9}, {3.7353203640198593`*^9, 
  3.7353204352493*^9}, {3.7353205145786686`*^9, 3.7353205151460953`*^9}, {
  3.735320627042025*^9, 3.7353206276225863`*^9}, {3.7353220918861217`*^9, 
  3.7353220920757794`*^9}, {3.735322893961685*^9, 3.735322894172697*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            StyleBox[
            "\"A quale funzione corrisponde la seguente retta?\"", FontWeight -> 
             Bold, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TemplateBox[{"\"Zoom sugli zeri:\"", 
                  TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$6170 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 1, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$6170 = 1; 
                    MClib`Private`y$6170 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$6170, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                   "RowDefault"]}, "RowDefault"]}, {
                TemplateBox[{
                  DynamicBox[
                   ToBoxes[
                    Plot[
                    Part[
                    MClib`teacherEQ, 1, 1], {$CellContext`x, 
                    MClib`Private`y$6170 - MClib`Private`j$6170, 
                    MClib`Private`y$6170 + MClib`Private`j$6170}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                ButtonBox[
                "\"Reset Zoom\"", 
                 ButtonFunction :> (MClib`Private`j$6170 = 5; 
                  MClib`Private`y$6170 = 0), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]}, {
            DynamicBox[
             ToBoxes[
              RadioButtonBar[
               Dynamic[
                Part[MClib`userAnswer, 1, 1]], 
               Part[MClib`exercises, 1, 1], Enabled -> Dynamic[
                 Part[MClib`enableAnswer, 1, 1]]], StandardForm]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            StyleBox[
            "\"A quale funzione corrisponde la seguente retta?\"", FontWeight -> 
             Bold, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TemplateBox[{"\"Zoom sugli zeri:\"", 
                  TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$6171 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 1, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$6171 = 1; 
                    MClib`Private`y$6171 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$6171, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                   "RowDefault"]}, "RowDefault"]}, {
                TemplateBox[{
                  DynamicBox[
                   ToBoxes[
                    Plot[
                    Part[
                    MClib`teacherEQ, 1, 2], {$CellContext`x, 
                    MClib`Private`y$6171 - MClib`Private`j$6171, 
                    MClib`Private`y$6171 + MClib`Private`j$6171}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                ButtonBox[
                "\"Reset Zoom\"", 
                 ButtonFunction :> (MClib`Private`j$6171 = 5; 
                  MClib`Private`y$6171 = 0), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]}, {
            DynamicBox[
             ToBoxes[
              RadioButtonBar[
               Dynamic[
                Part[MClib`userAnswer, 1, 2]], 
               Part[MClib`exercises, 1, 2], Enabled -> Dynamic[
                 Part[MClib`enableAnswer, 1, 2]]], StandardForm]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            StyleBox[
            "\"A quale funzione corrisponde la seguente retta?\"", FontWeight -> 
             Bold, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TemplateBox[{"\"Zoom sugli zeri:\"", 
                  TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$6172 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 1, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$6172 = 1; 
                    MClib`Private`y$6172 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$6172, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                   "RowDefault"]}, "RowDefault"]}, {
                TemplateBox[{
                  DynamicBox[
                   ToBoxes[
                    Plot[
                    Part[
                    MClib`teacherEQ, 1, 3], {$CellContext`x, 
                    MClib`Private`y$6172 - MClib`Private`j$6172, 
                    MClib`Private`y$6172 + MClib`Private`j$6172}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                ButtonBox[
                "\"Reset Zoom\"", 
                 ButtonFunction :> (MClib`Private`j$6172 = 5; 
                  MClib`Private`y$6172 = 0), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]}, {
            DynamicBox[
             ToBoxes[
              RadioButtonBar[
               Dynamic[
                Part[MClib`userAnswer, 1, 3]], 
               Part[MClib`exercises, 1, 3], Enabled -> Dynamic[
                 Part[MClib`enableAnswer, 1, 3]]], StandardForm]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.735316811875969*^9, 3.7353179618825383`*^9, 3.735318051094756*^9, 
   3.7353182037897725`*^9, {3.7353202513736563`*^9, 3.7353202571997433`*^9}, {
   3.7353203452669764`*^9, 3.7353204358015385`*^9}, 3.7353205154056177`*^9, 
   3.7353206277984943`*^9, {3.7353220885216475`*^9, 3.735322092663125*^9}, {
   3.735322875321619*^9, 3.735322897446884*^9}, 3.735326415705061*^9, 
   3.735327387512645*^9, 3.735327598942738*^9, 3.735327692197072*^9, 
   3.7353865140817785`*^9, 3.7353865998166823`*^9, 3.7353871275778685`*^9, 
   3.735388101873595*^9, 3.735461555820944*^9, 3.735461675486711*^9, 
   3.7354618819975915`*^9, 3.7354725575589104`*^9, 3.735472723570349*^9, 
   3.735472878062332*^9, {3.7354729801258116`*^9, 3.735472983627025*^9}, 
   3.735473318651602*^9, 3.735473807191526*^9, 3.7354740547007203`*^9, 
   3.7354741225955553`*^9, 3.7354744970415297`*^9, 3.735476519894907*^9, 
   3.7354771386065516`*^9, 3.735489948556652*^9, 3.7355394301094236`*^9, 
   3.7355395498780212`*^9, 3.735541343208642*^9, 3.735541654939165*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.735238490927022*^9, 3.735238499487774*^9}, {
   3.7352386841935987`*^9, 3.7352387062841234`*^9}, {3.7352389664544*^9, 
   3.735238968538827*^9}, {3.735315766741535*^9, 3.735315773644414*^9}, {
   3.7353158810044765`*^9, 3.735315912948639*^9}, {3.7353162377323165`*^9, 
   3.735316237880562*^9}, {3.7353167330795016`*^9, 3.7353167367092404`*^9}, {
   3.7353206368574853`*^9, 3.7353206513672314`*^9}, {3.735322907116438*^9, 
   3.735322907225444*^9}, 3.7353256502212777`*^9, 3.7353258556770287`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"clicked", " ", "=", " ", "0"}]], "Input",
 CellChangeTimes->{{3.735326712823055*^9, 3.7353267155872126`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.735326719873458*^9, 3.735327004685748*^9, 
  3.7353273944830437`*^9, 3.7353865142157865`*^9, 3.7353865999566903`*^9, 
  3.73538712778588*^9, 3.7353881020306044`*^9, 3.735461555976944*^9, 
  3.7354616756385126`*^9, 3.735461882137992*^9, 3.735539430784225*^9, 
  3.735539550090223*^9, 3.735541343286642*^9, 3.735541655161566*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Verifica\>\"", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"userAnswer", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", "===", "   ", "0"}], 
        "  ", "||", " ", 
        RowBox[{
         RowBox[{"userAnswer", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "===", " ", "0"}], " ",
         "||", " ", 
        RowBox[{
         RowBox[{"userAnswer", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "3"}], "]"}], "]"}], " ", "===", "  ", "0"}]}], 
       ",", "  ", 
       RowBox[{
       "MessageDialog", "[", 
        "\"\<Rispondi a tutte le domande prima di verificare\>\"", "]"}], " ",
        ",", " ", 
       RowBox[{
        RowBox[{"checkAnswer", "[", "1", "]"}], ";", " ", 
        RowBox[{"clicked", " ", "=", "1"}]}]}], "]"}]}], " ", "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.735325793403467*^9, 3.7353258375029893`*^9}, {
  3.735326573637094*^9, 3.7353267804769244`*^9}, {3.735326834974042*^9, 
  3.735326910637369*^9}, {3.735326983225521*^9, 3.7353270246158886`*^9}, {
  3.7353270561606927`*^9, 3.735327068983426*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Button["Verifica", 
    If[
     Or[Part[MClib`userAnswer, 1, 1] === 0, Part[MClib`userAnswer, 1, 2] === 
      0, Part[MClib`userAnswer, 1, 3] === 0], 
     MessageDialog["Rispondi a tutte le domande prima di verificare"], 
     MClib`checkAnswer[1]; $CellContext`clicked = 1]], StandardForm],
  ImageSizeCache->{49., {8., 17.}}]], "Output",
 CellChangeTimes->{{3.7353258242532315`*^9, 3.7353258450734224`*^9}, 
   3.7353267448668876`*^9, 3.73532678600224*^9, 3.7353270090239964`*^9, 
   3.7353270758778205`*^9, 3.735386514229787*^9, 3.7353865999746914`*^9, 
   3.7353871278038816`*^9, 3.735388102061606*^9, 3.7354615559925437`*^9, 
   3.735461675654113*^9, 3.7354618821535916`*^9, 3.735539430799825*^9, 
   3.7355395501526227`*^9, 3.735541343317842*^9, 3.735541655177166*^9}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.735325825904326*^9, 3.7353258407921777`*^9}, {
  3.7353259549577074`*^9, 3.7353260188043594`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"clicked", " ", "===", " ", "1"}], ",", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Vai alla prossima sezione\>\"", "]"}], 
        ",", "\"\<ES_G1_B\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
        "\"\<ES_G1_B\>\""}], "}"}]}], "]"}], ",", " ", 
    "\"\<Verifica la risposta prima di passare alla prossima sezione\>\""}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7346967420957303`*^9, 3.7346967588950157`*^9}, {
   3.73469767419576*^9, 3.734697737120322*^9}, {3.7346978213097963`*^9, 
   3.7346978422941136`*^9}, {3.734697921733178*^9, 3.734697927363409*^9}, 
   3.7346980307122602`*^9, {3.734698146626672*^9, 3.734698185636639*^9}, {
   3.7346983076326*^9, 3.73469831888916*^9}, {3.7347007312495213`*^9, 
   3.734700732212577*^9}, {3.7347023770532074`*^9, 3.7347023778370113`*^9}, {
   3.734702440994263*^9, 3.734702472380178*^9}, {3.7347027855756793`*^9, 
   3.73470280855837*^9}, {3.734703015503701*^9, 3.734703036002659*^9}, 
   3.7353263347674313`*^9, {3.7353263990051055`*^9, 3.7353264039403877`*^9}, {
   3.735326705374629*^9, 3.735326707204734*^9}, {3.7353268102456274`*^9, 
   3.7353268132417984`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[$CellContext`clicked === 1, 
    Hyperlink[
     StatusArea[
      Button["Vai alla prossima sezione"], "ES_G1_B"], {
      EvaluationNotebook[], "ES_G1_B"}], 
    "Verifica la risposta prima di passare alla prossima sezione"], 
   StandardForm],
  ImageSizeCache->{413., {3., 9.}}]], "Output",
 CellChangeTimes->{
  3.734698064816067*^9, 3.7346981608734846`*^9, 3.7346981909589214`*^9, 
   3.7346983598472476`*^9, 3.7347024062595415`*^9, 3.734702445801684*^9, 
   3.734702477895997*^9, 3.734703040249074*^9, 3.7353263499102974`*^9, 
   3.7353264082746353`*^9, 3.7353264815658274`*^9, {3.7353268032232256`*^9, 
   3.735326816906008*^9}, 3.7353865142497883`*^9, 3.7353865999916925`*^9, 
   3.7353871278228827`*^9, 3.7353881020876074`*^9, 3.7354615560237436`*^9, 
   3.735461675669713*^9, 3.7354618821691914`*^9, 3.7355394308622255`*^9, 
   3.735539550216023*^9, 3.735541343333442*^9, 3.735541655208366*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", "correctCounter", "]"}]], "Input",
 CellChangeTimes->{{3.735461575184673*^9, 3.735461581818887*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[MClib`correctCounter, StandardForm],
  ImageSizeCache->{7., {0., 8.}}]], "Output",
 CellChangeTimes->{3.735461586247097*^9, 3.7354616757009125`*^9, 
  3.735461784837245*^9, 3.7354618821847916`*^9, 3.7354771470149927`*^9, 
  3.735539430893425*^9, 3.7355395503642254`*^9, 3.735541343349042*^9, 
  3.7355416552841673`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Esercizi Tipologia 2", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}, {3.7346172310281005`*^9, 3.734617241201078*^9}, {
   3.735325637656559*^9, 3.7353256409337463`*^9}, {3.7353277372036457`*^9, 
   3.735327737339654*^9}},
 CellTags->"ES_G1_B"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"exKindBPrinter", "[", "2", "]"}]}]], "Input",
 CellChangeTimes->{{3.7353257505650167`*^9, 3.7353257785136156`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            DynamicBox[
             ToBoxes[
              Style[
               StringJoin[
                ToString[
                 Part[MClib`teacherEQ, 2, 1]], " \t Qual e' il suo grafico?"],
                FontWeight -> Bold], StandardForm]]}, {
            TemplateBox[{
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 1]], 
                   Part[MClib`exercises, 2, 1, 1], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$6306 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 1, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$6306 = 1; 
                    MClib`Private`y$6306 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$6306, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 1, 1], {$CellContext`x, 
                    MClib`Private`y$6306 - MClib`Private`j$6306, 
                    MClib`Private`y$6306 + MClib`Private`j$6306}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$6306 = 5; 
                    MClib`Private`y$6306 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 1]], 
                   Part[MClib`exercises, 2, 1, 2], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$6307 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 1, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$6307 = 1; 
                    MClib`Private`y$6307 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$6307, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 1, 2], {$CellContext`x, 
                    MClib`Private`y$6307 - MClib`Private`j$6307, 
                    MClib`Private`y$6307 + MClib`Private`j$6307}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$6307 = 5; 
                    MClib`Private`y$6307 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 1]], 
                   Part[MClib`exercises, 2, 1, 3], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$6308 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 1, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$6308 = 1; 
                    MClib`Private`y$6308 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$6308, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 1, 3], {$CellContext`x, 
                    MClib`Private`y$6308 - MClib`Private`j$6308, 
                    MClib`Private`y$6308 + MClib`Private`j$6308}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$6308 = 5; 
                    MClib`Private`y$6308 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 1]], 
                   Part[MClib`exercises, 2, 1, 4], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$6309 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 1, 4] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$6309 = 1; 
                    MClib`Private`y$6309 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$6309, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 1, 4], {$CellContext`x, 
                    MClib`Private`y$6309 - MClib`Private`j$6309, 
                    MClib`Private`y$6309 + MClib`Private`j$6309}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$6309 = 5; 
                    MClib`Private`y$6309 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            DynamicBox[
             ToBoxes[
              Style[
               StringJoin[
                ToString[
                 Part[MClib`teacherEQ, 2, 2]], " \t Qual e' il suo grafico?"],
                FontWeight -> Bold], StandardForm]]}, {
            TemplateBox[{
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 2]], 
                   Part[MClib`exercises, 2, 2, 1], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$6310 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 2, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$6310 = 1; 
                    MClib`Private`y$6310 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$6310, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 2, 1], {$CellContext`x, 
                    MClib`Private`y$6310 - MClib`Private`j$6310, 
                    MClib`Private`y$6310 + MClib`Private`j$6310}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$6310 = 5; 
                    MClib`Private`y$6310 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 2]], 
                   Part[MClib`exercises, 2, 2, 2], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$6311 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 2, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$6311 = 1; 
                    MClib`Private`y$6311 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$6311, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 2, 2], {$CellContext`x, 
                    MClib`Private`y$6311 - MClib`Private`j$6311, 
                    MClib`Private`y$6311 + MClib`Private`j$6311}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$6311 = 5; 
                    MClib`Private`y$6311 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 2]], 
                   Part[MClib`exercises, 2, 2, 3], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$6312 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 2, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$6312 = 1; 
                    MClib`Private`y$6312 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$6312, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 2, 3], {$CellContext`x, 
                    MClib`Private`y$6312 - MClib`Private`j$6312, 
                    MClib`Private`y$6312 + MClib`Private`j$6312}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$6312 = 5; 
                    MClib`Private`y$6312 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 2]], 
                   Part[MClib`exercises, 2, 2, 4], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$6313 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 2, 4] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$6313 = 1; 
                    MClib`Private`y$6313 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$6313, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 2, 4], {$CellContext`x, 
                    MClib`Private`y$6313 - MClib`Private`j$6313, 
                    MClib`Private`y$6313 + MClib`Private`j$6313}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$6313 = 5; 
                    MClib`Private`y$6313 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            DynamicBox[
             ToBoxes[
              Style[
               StringJoin[
                ToString[
                 Part[MClib`teacherEQ, 2, 3]], " \t Qual e' il suo grafico?"],
                FontWeight -> Bold], StandardForm]]}, {
            TemplateBox[{
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 3]], 
                   Part[MClib`exercises, 2, 3, 1], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$6314 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 3, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$6314 = 1; 
                    MClib`Private`y$6314 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$6314, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 3, 1], {$CellContext`x, 
                    MClib`Private`y$6314 - MClib`Private`j$6314, 
                    MClib`Private`y$6314 + MClib`Private`j$6314}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$6314 = 5; 
                    MClib`Private`y$6314 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 3]], 
                   Part[MClib`exercises, 2, 3, 2], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$6315 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 3, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$6315 = 1; 
                    MClib`Private`y$6315 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$6315, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 3, 2], {$CellContext`x, 
                    MClib`Private`y$6315 - MClib`Private`j$6315, 
                    MClib`Private`y$6315 + MClib`Private`j$6315}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$6315 = 5; 
                    MClib`Private`y$6315 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 3]], 
                   Part[MClib`exercises, 2, 3, 3], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$6316 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 3, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$6316 = 1; 
                    MClib`Private`y$6316 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$6316, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 3, 3], {$CellContext`x, 
                    MClib`Private`y$6316 - MClib`Private`j$6316, 
                    MClib`Private`y$6316 + MClib`Private`j$6316}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$6316 = 5; 
                    MClib`Private`y$6316 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 3]], 
                   Part[MClib`exercises, 2, 3, 4], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$6317 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 3, 4] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$6317 = 1; 
                    MClib`Private`y$6317 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$6317, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 3, 4], {$CellContext`x, 
                    MClib`Private`y$6317 - MClib`Private`j$6317, 
                    MClib`Private`y$6317 + MClib`Private`j$6317}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$6317 = 5; 
                    MClib`Private`y$6317 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.7353257832468863`*^9, 3.735386514315792*^9, 3.735386600050696*^9, 
   3.7353871278868866`*^9, 3.735388102145611*^9, 3.735461556132944*^9, 
   3.7354616757713137`*^9, 3.7354618826567926`*^9, 3.7354734771880255`*^9, 
   3.7354748157589054`*^9, 3.7354749967112675`*^9, {3.735475098349764*^9, 
   3.735475104733527*^9}, 3.7354752958044386`*^9, 3.7354755000315437`*^9, 
   3.7354756552153254`*^9, 3.7354758298578196`*^9, 3.7354765393442736`*^9, 
   3.735477154952027*^9, 3.7355394311942267`*^9, 3.735539550525627*^9, 
   3.7355413434098434`*^9, 3.735541655330968*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"clicked1b", " ", "=", " ", "0"}]], "Input",
 CellChangeTimes->{{3.7353277771619315`*^9, 3.735327790319684*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.735327793011838*^9, 3.7353865147698183`*^9, 
  3.735386600517722*^9, 3.7353871283759146`*^9, 3.7353881025906363`*^9, 
  3.7354615566355457`*^9, 3.735461676223714*^9, 3.735461882703593*^9, 
  3.7355394320444307`*^9, 3.7355395510596313`*^9, 3.735541343473243*^9, 
  3.7355416559795694`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Verifica\>\"", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"userAnswer", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", "===", "   ", "0"}], 
       "  ", "||", " ", 
       RowBox[{
        RowBox[{"userAnswer", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", "===", " ", "0"}], " ", 
       "||", " ", 
       RowBox[{
        RowBox[{"userAnswer", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "3"}], "]"}], "]"}], " ", "===", "  ", "0"}]}], 
      ",", "  ", 
      RowBox[{
      "MessageDialog", "[", 
       "\"\<Rispondi a tutte le domande prima di verificare\>\"", "]"}], " ", 
      ",", " ", 
      RowBox[{
       RowBox[{"checkAnswer", "[", "2", "]"}], ";", " ", 
       RowBox[{"clicked1b", " ", "=", "1"}]}]}], "]"}]}], " ", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.735327785856429*^9, 3.7353277860474396`*^9}, {
  3.7353278311640205`*^9, 3.7353278365683293`*^9}, {3.735327909348492*^9, 
  3.735327909427497*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Button["Verifica", 
    If[
     Or[Part[MClib`userAnswer, 2, 1] === 0, Part[MClib`userAnswer, 2, 2] === 
      0, Part[MClib`userAnswer, 2, 3] === 0], 
     MessageDialog["Rispondi a tutte le domande prima di verificare"], 
     MClib`checkAnswer[2]; $CellContext`clicked1b = 1]], StandardForm],
  ImageSizeCache->{49., {8., 17.}}]], "Output",
 CellChangeTimes->{{3.735327822962551*^9, 3.7353278408515744`*^9}, 
   3.735327915361836*^9, 3.735386514786819*^9, 3.7353866005347233`*^9, 
   3.7353871283929152`*^9, 3.735388102611637*^9, 3.735461556651146*^9, 
   3.7354616762549143`*^9, 3.7354618827191925`*^9, 3.7355394320912304`*^9, 
   3.7355395510752316`*^9, 3.735541343504443*^9, 3.73554165601077*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"clicked1b", "===", " ", "1"}], ",", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Vai alla prossima sezione\>\"", "]"}], 
        ",", "\"\<RS1\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<RS1\>\""}], 
       "}"}]}], "]"}], ",", " ", 
    "\"\<Verifica la risposta prima di passare alla prossima sezione\>\""}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7353278151221027`*^9, 3.735327819234338*^9}, {
  3.7353280544767385`*^9, 3.73532806184616*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[$CellContext`clicked1b === 1, 
    Hyperlink[
     StatusArea[
      Button["Vai alla prossima sezione"], "RS1"], {
      EvaluationNotebook[], "RS1"}], 
    "Verifica la risposta prima di passare alla prossima sezione"], 
   StandardForm],
  ImageSizeCache->{413., {3., 9.}}]], "Output",
 CellChangeTimes->{3.73538651480482*^9, 3.7353866005517244`*^9, 
  3.7353871284109163`*^9, 3.735388102634639*^9, 3.7354615566823463`*^9, 
  3.7354616762705145`*^9, 3.7354618827347927`*^9, 3.735539432122431*^9, 
  3.7355395511376314`*^9, 3.7355413435512433`*^9, 3.7355416560263696`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Risultati", "Section",
 CellChangeTimes->{{3.7355407420819025`*^9, 3.7355407434311094`*^9}},
 CellTags->"RS1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"correctAnswerG1", " ", "=", "  ", "correctCounter", 
  RowBox[{"(*", 
   RowBox[{
   "sar\[AGrave]", " ", "uguale", " ", "alla", " ", "correctAnswer", " ", 
    "in", " ", "questo", " ", "momento", " ", "cosi", " ", "da", " ", 
    "salvare", " ", "il", " ", "numero", " ", "di", " ", "risposte", " ", 
    "esatte", " ", "al", " ", "primo", " ", "step"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.73532812444074*^9, 3.7353281830990953`*^9}, {
  3.7354620214578023`*^9, 3.7354620243814087`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.735328393662139*^9, 3.7353865148588233`*^9, 
  3.7353866006627307`*^9, 3.7353871284879208`*^9, 3.7353881027186437`*^9, 
  3.735461556963146*^9, 3.735461676365114*^9, 3.735461882798193*^9, 
  3.735462032357027*^9, 3.735477282052633*^9, 3.735490023963957*^9, 
  3.735490085988205*^9, 3.7355394322472305`*^9, 3.7355395512186317`*^9, 
  3.735541343582443*^9, 3.7355416560499697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", "correctCounter", "]"}]], "Input",
 CellChangeTimes->{{3.735490026467966*^9, 3.735490036912204*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[MClib`correctCounter, StandardForm],
  ImageSizeCache->{7., {0., 8.}}]], "Output",
 CellChangeTimes->{3.735490043499834*^9, 3.7354900898746247`*^9, 
  3.735539432278431*^9, 3.735539551249832*^9, 3.7355413436000433`*^9, 
  3.73554165608117*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"correctAnswerG1", "  ", "<", " ", "4"}], ",", " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<Su 6 domande hai risposto correttamente a ``.\>\"", ",", 
      "correctAnswerG1"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{
    "Text", "[", 
     "\"\<volendo puoi proseguire ma sarebbe meglio ripassare un po di teoria \
e poi riprovare gli esercizi\>\"", "]"}]}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<Su 6 domande hai risposto correttamente a ``.\>\"", ",", 
      "correctAnswerG1"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{
    "Text", "[", 
     "\"\<hai compreso bene l\[CloseCurlyQuote]argomento ora puoi proseguire, \
ma se hai ancora qualche dubbio puoi comunque tornare indietro e riguardare \
le equazioni di primo grado\>\"", "]"}]}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Text", "[", "\"\<Qualcosa \[EGrave] andato storto!!\>\"", "]"}]}],
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{
     RowBox[{"StatusArea", "[", 
      RowBox[{
       RowBox[{"Button", "[", "\"\<Torna alla teoria\>\"", "]"}], ",", " ", 
       "\"\<E_G1\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<E_G1\>\""}], 
      "}"}]}], "]"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Row", "[", 
   RowBox[{"{", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Torna all' indice\>\"", "]"}], ",", " ", 
        "\"\<Index\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<Index\>\""}],
        "}"}]}], "]"}], "}"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "in", " ", "questi", " ", "due", " ", "casi", " ", "caso", " ", "si", " ", 
    "chiama", " ", "lu", " ", "funzione", " ", "che", " ", "resetta", " ", 
    "i", " ", "vettori", " ", "nel", " ", "package"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Ricarica Esercizi\>\"", ",", " ", 
    RowBox[{
     RowBox[{"resetGrade", "[", 
      RowBox[{"1", ",", " ", "correctAnswerG1"}], "]"}], ";", " ", 
     RowBox[{"NotebookLocate", "[", "\"\<ES_G1\>\"", "]"}]}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "in", " ", "questi", " ", "due", " ", "casi", " ", "caso", " ", "si", " ", 
    "chiama", " ", "lu", " ", "funzione", " ", "che", " ", "resetta", " ", 
    "i", " ", "vettori", " ", "nel", " ", "package"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{
     RowBox[{"StatusArea", "[", 
      RowBox[{
       RowBox[{"Button", "[", "\"\<Sezione Successiva\>\"", "]"}], ",", " ", 
       "\"\<E_2G\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<E_2G\>\""}], 
      "}"}]}], "]"}], "}"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7353281891034384`*^9, 3.7353283107723975`*^9}, {
  3.735328344684337*^9, 3.735328352657793*^9}, {3.7354771997556424`*^9, 
  3.7354772688973784`*^9}, {3.7354900765001726`*^9, 3.735490080952388*^9}, {
  3.7354901336759815`*^9, 3.735490138306198*^9}, {3.735541936977091*^9, 
  3.7355419456693597`*^9}}],

Cell[BoxData[
 RowBox[{
  InterpretationBox["\<\"Su 6 domande hai risposto correttamente a \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\).\"\>",
   StringForm["Su 6 domande hai risposto correttamente a ``.", 0],
   Editable->False], " ", 
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"volendo puoi proseguire ma sarebbe meglio ripassare un po di \
teoria e poi riprovare gli esercizi\"\>", TextForm]], "InlineText"],
   Text["volendo puoi proseguire ma sarebbe meglio ripassare un po di teoria \
e poi riprovare gli esercizi"]]}]], "Output",
 CellChangeTimes->{3.7353283967573156`*^9, 3.735386514941828*^9, 
  3.735386600680732*^9, 3.735387128506922*^9, 3.735388102751645*^9, 
  3.735461557009947*^9, 3.7354616764275146`*^9, 3.7354618828293934`*^9, 
  3.7354620484502635`*^9, 3.7354772456036882`*^9, 3.735477276006206*^9, 
  3.7354900988276567`*^9, 3.7354901429390182`*^9, 3.735539432341831*^9, 
  3.7355395513358326`*^9, 3.7355413436156435`*^9, 3.7355416560967703`*^9, 
  3.735541965957448*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Torna alla teoria\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "E_G1"]& , TagBoxNote -> "E_G1"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Torna alla teoria\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "E_G1"]& , TagBoxNote -> "E_G1"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["7nkfc_shm", 3, 1]], 33], "E_G1"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["7nkfc_shm", 3, 1]], 33], "E_G1"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7353283967573156`*^9, 3.735386514941828*^9, 
  3.735386600680732*^9, 3.735387128506922*^9, 3.735388102751645*^9, 
  3.735461557009947*^9, 3.7354616764275146`*^9, 3.7354618828293934`*^9, 
  3.7354620484502635`*^9, 3.7354772456036882`*^9, 3.735477276006206*^9, 
  3.7354900988276567`*^9, 3.7354901429390182`*^9, 3.735539432341831*^9, 
  3.7355395513358326`*^9, 3.7355413436156435`*^9, 3.7355416560967703`*^9, 
  3.7355419659730477`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Torna all' indice\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "Index"]& , TagBoxNote -> "Index"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Torna all' indice\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "Index"]& , TagBoxNote -> "Index"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["7nkfc_shm", 3, 1]], 33], "Index"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["7nkfc_shm", 3, 1]], 33], "Index"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7353283967573156`*^9, 3.735386514941828*^9, 
  3.735386600680732*^9, 3.735387128506922*^9, 3.735388102751645*^9, 
  3.735461557009947*^9, 3.7354616764275146`*^9, 3.7354618828293934`*^9, 
  3.7354620484502635`*^9, 3.7354772456036882`*^9, 3.735477276006206*^9, 
  3.7354900988276567`*^9, 3.7354901429390182`*^9, 3.735539432341831*^9, 
  3.7355395513358326`*^9, 3.7355413436156435`*^9, 3.7355416560967703`*^9, 
  3.7355419660042477`*^9}],

Cell[BoxData[
 ButtonBox["\<\"Ricarica Esercizi\"\>",
  Appearance->Automatic,
  ButtonFunction:>(MClib`resetGrade[1, $CellContext`correctAnswerG1]; 
   NotebookLocate["ES_G1"]),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{3.7353283967573156`*^9, 3.735386514941828*^9, 
  3.735386600680732*^9, 3.735387128506922*^9, 3.735388102751645*^9, 
  3.735461557009947*^9, 3.7354616764275146`*^9, 3.7354618828293934`*^9, 
  3.7354620484502635`*^9, 3.7354772456036882`*^9, 3.735477276006206*^9, 
  3.7354900988276567`*^9, 3.7354901429390182`*^9, 3.735539432341831*^9, 
  3.7355395513358326`*^9, 3.7355413436156435`*^9, 3.7355416560967703`*^9, 
  3.7355419660042477`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Sezione Successiva\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "E_2G"]& , TagBoxNote -> "E_2G"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Sezione Successiva\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "E_2G"]& , TagBoxNote -> "E_2G"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["7nkfc_shm", 3, 1]], 33], "E_2G"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["7nkfc_shm", 3, 1]], 33], "E_2G"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7353283967573156`*^9, 3.735386514941828*^9, 
  3.735386600680732*^9, 3.735387128506922*^9, 3.735388102751645*^9, 
  3.735461557009947*^9, 3.7354616764275146`*^9, 3.7354618828293934`*^9, 
  3.7354620484502635`*^9, 3.7354772456036882`*^9, 3.735477276006206*^9, 
  3.7354900988276567`*^9, 3.7354901429390182`*^9, 3.735539432341831*^9, 
  3.7355395513358326`*^9, 3.7355413436156435`*^9, 3.7355416560967703`*^9, 
  3.735541966019848*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[TextData[StyleBox["Equazioni di 2 \[Degree]Grado", "Section"]], "Text",
 CellChangeTimes->{{3.734265091372779*^9, 3.7342651012527695`*^9}, {
  3.734265291815647*^9, 3.734265291986204*^9}},
 CellTags->"E_2G"],

Cell[CellGroupData[{

Cell["Introduzione ", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}}],

Cell["\<\
Le equazioni di secondo grado hanno la forma y=ax2+bx+c ovvero una parabola \
ma cosa vogliono dire i parametri a, b e c?
\
\>", "Text",
 CellChangeTimes->{3.7352937658105516`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "*", 
       RowBox[{"x", "^", "2"}]}], "+", 
      RowBox[{"5", "*", "x"}], " ", "+", " ", "8"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "*", 
       RowBox[{"x", "^", "2"}]}], "+", 
      RowBox[{"5", "*", "x"}], " ", "+", " ", "8"}]}], " ", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", " ", 
     RowBox[{"+", "3"}]}], "}"}], ",", " ", 
   RowBox[{"PlotLabels", "\[Rule]", " ", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7342654412972345`*^9, 3.7342654813045607`*^9}, {
  3.734265544459816*^9, 3.73426556636392*^9}, {3.7355382730891714`*^9, 
  3.7355382905887213`*^9}, {3.735540453320922*^9, 3.735540593768527*^9}, {
  3.7355406366835775`*^9, 3.7355406513496428`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$6849#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
/8Og8EoOp9EI+B9w0np+
       "]]},
     Annotation[#, "Charting`Private`Tag$6849#2"]& ]}, {{{}, 
     {GrayLevel[0.4], AbsoluteThickness[
      0.5], {LineBox[{
        Scaled[{0.02, 0}, {3, 31.99999865306124}], 
         Offset[{3, 0}, Scaled[{0.02, 0}, {3, 31.99999865306124}]], 
         Offset[{7, 0}, Scaled[{0.02, 0}, {3, 31.999296612393888`}]], 
         Offset[{12, 0}, Scaled[{0.02, 0}, {3, 31.999296612393888`}]]}], 
       LineBox[{
        Scaled[{0.02, 0}, {3, 14.000000122448965`}], 
         Offset[{3, 0}, Scaled[{0.02, 0}, {3, 14.000000122448965`}]], 
         Offset[{7, 0}, Scaled[{0.02, 0}, {3, 14.000000117556995`}]], 
         Offset[{12, 0}, Scaled[{0.02, 0}, {3, 14.000000117556995`}]]}]}, {
       InsetBox[
        TagBox[
         RowBox[{
          RowBox[{"1", " ", 
           SuperscriptBox["x", "2"]}], "+", 
          RowBox[{"5", " ", "x"}], "+", "8"}],
         HoldForm], Offset[{15, 0}, 
        Scaled[{0.02, 0}, {3, 31.999296612393888}]], ImageScaled[{0, 0.5}]], 
       InsetBox[
        TagBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["x", "2"]}], "+", 
          RowBox[{"5", " ", "x"}], "+", "8"}],
         HoldForm], Offset[{15, 0}, 
        Scaled[{0.02, 0}, {3, 14.000000117556995}]], 
        ImageScaled[{0, 0.5}]]}, {}, {}}}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 86}, {All, All}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-15.99999865306124, 31.99999865306124}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.734265483926264*^9, 3.7342655676925263`*^9, 3.7344260407807293`*^9, 
   3.7353865150408335`*^9, 3.7353866007567363`*^9, 3.735387128583926*^9, 
   3.73538810282265*^9, 3.735461557119147*^9, 3.7354616765367146`*^9, 
   3.7354618828917933`*^9, 3.7355382939811344`*^9, 3.7355394324550314`*^9, 
   3.735539551526434*^9, {3.7355404674869795`*^9, 3.73554049608552*^9}, 
   3.73554053163806*^9, {3.7355406489156327`*^9, 3.7355406534360504`*^9}, 
   3.735541343851644*^9, 3.735541656329171*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione guidata del parametro c", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.7352940246883583`*^9, 3.7352940263724546`*^9}, {
   3.7355406676783104`*^9, 3.7355406678457127`*^9}},
 CellTags->"CG_G2_PC"],

Cell["\<\
Partiamo cercando di capire cosa rappresenta il c della formula:
\
\>", "Text",
 CellChangeTimes->{3.7352940479846907`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", " ", 
       RowBox[{"2", "*", "x"}], "+", " ", "c"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "3"}], ",", " ", 
        RowBox[{"+", "3"}]}], "}"}], ",", " ", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", " ", 
        RowBox[{"2", "*", "x"}], "+", " ", "c"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", " ", 
      RowBox[{"-", "10"}], ",", 
      RowBox[{"+", "10"}]}], "}"}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Plotting", " ", "an", " ", "example"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7352941158435726`*^9, 3.735294151338602*^9}, {
  3.735538310781869*^9, 3.735538319621705*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], -10, 10}}, Typeset`size$$ = {
    360., {118., 123.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`c$7072$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$7072$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`x^2 + 
        2 $CellContext`x + $CellContext`c$$, {$CellContext`x, -3, 
         Plus[3]}, 
        PlotLabel -> $CellContext`x^2 + 2 $CellContext`x + $CellContext`c$$], 
      "Specifications" :> {{$CellContext`c$$, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {164., 171.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.735294155681851*^9, 3.735386515205843*^9, 
  3.735386600913745*^9, 3.735387128789938*^9, 3.735388102993659*^9, 
  3.735461557290747*^9, 3.735461676678115*^9, 3.735461883037194*^9, 
  3.7355383250249352`*^9, 3.735539432685234*^9, 3.735539551685835*^9, 
  3.735541343882844*^9, 3.7355416564241724`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hyperText", "[", 
   RowBox[{
   "\"\<Hai dubbi su come cambia il grafico quando cambia c?\>\"", ",", 
    "\"\<il termine noto c indica l\[CloseCurlyQuote]ordinata del punto di \
intersezione del grafico con l\[CloseCurlyQuote]asse Y\>\"", ",", 
    "LinkHand"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.735294277443815*^9, 3.7352942961028824`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia c?\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "il termine noto c indica l\[CloseCurlyQuote]ordinata del punto di \
intersezione del grafico con l\[CloseCurlyQuote]asse Y"], Method -> 
    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
    True}]]], "Output",
 CellChangeTimes->{3.735294299853097*^9, 3.735386515316849*^9, 
  3.7353866010257516`*^9, 3.7353871289039445`*^9, 3.7353881031106663`*^9, 
  3.7354615574311476`*^9, 3.735461676802915*^9, 3.735461883147394*^9, 
  3.735539432898035*^9, 3.7355395518418355`*^9, 3.735541343916044*^9, 
  3.735541656615175*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione del caso particolare", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}},
 CellTags->"E2_CP_C0"],

Cell["\<\
Hai posto attenzione a cosa succede quando c=0?
\
\>", "Text",
 CellChangeTimes->{3.735294396325615*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", " ", "=", " ", "0"}]], "Input",
 CellChangeTimes->{{3.73529452403992*^9, 3.735294526750075*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7352945303512807`*^9, 3.7352950083636217`*^9, 
  3.735295042239559*^9, 3.7353865153358507`*^9, 3.7353866010427523`*^9, 
  3.7353871289209456`*^9, 3.7353881031206665`*^9, 3.7354615574623475`*^9, 
  3.7354616768185153`*^9, 3.735461883178594*^9, 3.7355394329136353`*^9, 
  3.7355395518574357`*^9, 3.7355413439316444`*^9, 3.7355416566271753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Row", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Hyperlink", "[", 
      RowBox[{
       RowBox[{"StatusArea", "[", 
        RowBox[{
         RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
         "\"\<CG_G2_PB\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
         "\"\<CG_G2_PB\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<No\>\"", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"p1", "\[Equal]", " ", "0"}], ",", 
         RowBox[{
          RowBox[{"p1", "=", "1"}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{
              SuperscriptBox["x", "2"], " ", "+", "  ", 
              RowBox[{"2", "x"}]}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"-", "5"}], ",", 
               RowBox[{"+", "5"}]}], "}"}], ",", " ", 
             RowBox[{
             "PlotLegends", "\[Rule]", 
              "\"\<y = \!\(\*SuperscriptBox[\(x\), \(2\)]\) + 2x\>\""}]}], 
            "]"}], "]"}], ";", " ", 
          RowBox[{
          "Print", "[", 
           "\"\<Come puoi vedere il grafico passa per l' origine\>\"", 
           "]"}]}]}], "]"}]}], "]"}]}], "}"}], "]"}], " "}]], "Input",
 CellChangeTimes->{
  3.735294543784049*^9, {3.735294589004636*^9, 3.735294617019238*^9}, {
   3.7352947191260777`*^9, 3.7352947338249187`*^9}, {3.735294788102023*^9, 
   3.73529483630178*^9}, {3.735294950252298*^9, 3.735294951118347*^9}, {
   3.735295022521431*^9, 3.7352950389733725`*^9}, {3.7352954309297905`*^9, 
   3.735295435380046*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
          Automatic, Method -> "Preemptive"], StatusArea[#, "CG_G2_PB"]& , 
         TagBoxNote -> "CG_G2_PB"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
           Automatic, Method -> "Preemptive"], StatusArea[#, "CG_G2_PB"]& , 
          TagBoxNote -> "CG_G2_PB"], {"HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["7nkfc_shm", 3, 1]], 33], "CG_G2_PB"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["7nkfc_shm", 3, 1]], 33], "CG_G2_PB"}, "Hyperlink"]& ],
   "\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> If[MClib`p1 == 0, MClib`p1 = 1; Print[
        Plot[$CellContext`x^2 + 2 $CellContext`x, {$CellContext`x, -5, 
          Plus[5]}, PlotLegends -> 
         "y = \!\(\*SuperscriptBox[\(x\), \(2\)]\) + 2x"]]; 
      Print["Come puoi vedere il grafico passa per l' origine"]], Appearance -> 
    Automatic, Evaluator -> Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7352946206314445`*^9, 3.7352950120498323`*^9, 
  3.7352950453127346`*^9, 3.735295438726237*^9, 3.7353865153618517`*^9, 
  3.7353866010617533`*^9, 3.7353871289409466`*^9, 3.735388103145668*^9, 
  3.7354615574779477`*^9, 3.7354616768341155`*^9, 3.735461883194194*^9, 
  3.7355394329790354`*^9, 3.7355395519198356`*^9, 3.7355413439628444`*^9, 
  3.7355416566583757`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione guidata del parametro b", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.7352940246883583`*^9, 3.7352940263724546`*^9}, {
   3.7352950820538363`*^9, 3.7352950826698713`*^9}, {3.7355406763015614`*^9, 
   3.7355406765181637`*^9}},
 CellTags->"CG_G2_PB"],

Cell["\<\
Ma il parametro b come si traduce sul grafico?
\
\>", "Text",
 CellChangeTimes->{3.7352951044361167`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "+", " ", 
      RowBox[{"b", "*", "x"}], " ", "-", " ", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", " ", 
       RowBox[{"+", "3"}]}], "}"}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", " ", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", " ", 
       RowBox[{"b", "*", "x"}], "-", " ", "1"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.735295129079526*^9, 3.7352951688908033`*^9}, {
  3.7355383355281935`*^9, 3.73553834778047*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`b$$], -10, 10}}, Typeset`size$$ = {
    360., {118., 125.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`b$7140$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`b$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`b$$, $CellContext`b$7140$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`x^2 + $CellContext`b$$ $CellContext`x - 
        1, {$CellContext`x, -3, 
         Plus[3]}, 
        PlotLabel -> $CellContext`x^2 + $CellContext`b$$ $CellContext`x - 1], 
      "Specifications" :> {{$CellContext`b$$, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {165., 172.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7352951539239473`*^9, 3.735295172470008*^9}, 
   3.735386515414855*^9, 3.7353866011137567`*^9, 3.7353871289889493`*^9, 
   3.7353881031756697`*^9, 3.735461557524748*^9, 3.7354616768809156`*^9, 
   3.7354618832253942`*^9, 3.7355383583527365`*^9, 3.735539433103836*^9, 
   3.7355395519666357`*^9, 3.7355413439940443`*^9, 3.7355416567051754`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hyperText", "[", 
   RowBox[{
   "\"\<Hai dubbi su come cambia il grafico quando cambia b?\>\"", ",", 
    "\"\<il coefficiente del termine di primo grado della X ha segno opposto \
ed e\[CloseCurlyQuote] il doppio dell\[CloseCurlyQuote]ascissa del vertice \
della parabola\>\"", ",", "LinkHand"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.735295205881919*^9, 3.7352952240749598`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia b?\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "il coefficiente del termine di primo grado della X ha segno opposto ed \
e\[CloseCurlyQuote] il doppio dell\[CloseCurlyQuote]ascissa del vertice della \
parabola"], Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
    True}]]], "Output",
 CellChangeTimes->{3.7352952277591705`*^9, 3.7353865155198607`*^9, 
  3.735386601224763*^9, 3.735387129136958*^9, 3.735388103290676*^9, 
  3.735461557712948*^9, 3.7354616769911156`*^9, 3.735461883343996*^9, 
  3.735539433323637*^9, 3.7355395521090364`*^9, 3.7355413440096445`*^9, 
  3.7355416568611755`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione del caso particolare", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.7352940246883583`*^9, 3.7352940263724546`*^9}, {
   3.7352950820538363`*^9, 3.7352950826698713`*^9}, {3.7352953535623655`*^9, 
   3.7352953587526627`*^9}},
 CellTags->"E2_CP_B0"],

Cell["Hai posto attenzione a cosa succede quando B=0?", "Text",
 CellChangeTimes->{
  3.735295386225234*^9, {3.735300485285884*^9, 3.735300485504896*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", " ", "=", " ", "0"}]], "Input",
 CellChangeTimes->{{3.735295517018715*^9, 3.735295530151466*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.735295533004629*^9, 3.735386515538862*^9, 
  3.735386601241764*^9, 3.7353871291599593`*^9, 3.735388103300677*^9, 
  3.735461557728548*^9, 3.735461677006716*^9, 3.735461883345996*^9, 
  3.735539433340237*^9, 3.735539552140236*^9, 3.7355413440418444`*^9, 
  3.7355416568767757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Row", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Hyperlink", "[", 
      RowBox[{
       RowBox[{"StatusArea", "[", 
        RowBox[{
         RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
         "\"\<CG_G2_PB\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
         "\"\<CG_G2_PB\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<No\>\"", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"p2", "\[Equal]", " ", "0"}], ",", 
         RowBox[{
          RowBox[{"p2", "=", "1"}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{
              SuperscriptBox["x", "2"], " ", "+", "  ", "1"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"-", "5"}], ",", 
               RowBox[{"+", "5"}]}], "}"}], ",", " ", 
             RowBox[{
             "PlotLegends", "\[Rule]", 
              "\"\<y = \!\(\*SuperscriptBox[\(x\), \(2\)]\) + 1\>\""}]}], 
            "]"}], "]"}], ";", " ", 
          RowBox[{
          "Print", "[", 
           "\"\<come puoi vedere il grafico ha vertice \
sull\[CloseCurlyQuote]asse Y\>\"", "]"}]}]}], "]"}]}], "]"}]}], "}"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.7352954781824937`*^9, 3.735295504310988*^9}, {
  3.735295536147809*^9, 3.73529553983702*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
          Automatic, Method -> "Preemptive"], StatusArea[#, "CG_G2_PB"]& , 
         TagBoxNote -> "CG_G2_PB"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
           Automatic, Method -> "Preemptive"], StatusArea[#, "CG_G2_PB"]& , 
          TagBoxNote -> "CG_G2_PB"], {"HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["7nkfc_shm", 3, 1]], 33], "CG_G2_PB"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["7nkfc_shm", 3, 1]], 33], "CG_G2_PB"}, "Hyperlink"]& ],
   "\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> If[MClib`p2 == 0, MClib`p2 = 1; Print[
        Plot[$CellContext`x^2 + 1, {$CellContext`x, -5, 
          Plus[5]}, PlotLegends -> 
         "y = \!\(\*SuperscriptBox[\(x\), \(2\)]\) + 1"]]; 
      Print["come puoi vedere il grafico ha vertice \
sull\[CloseCurlyQuote]asse Y"]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.735295511807417*^9, 3.7352955452843313`*^9, 
  3.7353865155638638`*^9, 3.735386601260765*^9, 3.735387129207962*^9, 
  3.735388103325678*^9, 3.735461557759748*^9, 3.7354616770379157`*^9, 
  3.735461883392796*^9, 3.735539433403637*^9, 3.7355395522026367`*^9, 
  3.7355413440574446`*^9, 3.7355416569129763`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione guidata del parametro a", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.7352940246883583`*^9, 3.7352940263724546`*^9}, {
   3.7352950820538363`*^9, 3.7352950826698713`*^9}, {3.7352957197473106`*^9, 
   3.735295720286341*^9}, {3.7355407730158653`*^9, 3.7355407741418695`*^9}},
 CellTags->"E_G2_CA"],

Cell["\<\
cosa vuol dire graficamente il coefficiente a?
\
\>", "Text",
 CellChangeTimes->{3.7352957486359625`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "*", 
       SuperscriptBox["x", "2"]}], " ", "-", " ", 
      RowBox[{"2", "*", "x"}], "  ", "+", " ", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", " ", 
       RowBox[{"+", "3"}]}], "}"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
       RowBox[{"a", "*", " ", 
        SuperscriptBox["x", "2"]}], " ", "-", " ", 
       RowBox[{"2", "*", "x"}], " ", "+", " ", "1"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.735295806557276*^9, 3.7352958479546432`*^9}, {
  3.7355383728314376`*^9, 3.7355383779526606`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -10, 10}}, Typeset`size$$ = {
    360., {120., 127.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$7208$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$7208$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`a$$ $CellContext`x^2 - 2 $CellContext`x + 
        1, {$CellContext`x, -3, 
         Plus[3]}, 
        PlotLabel -> $CellContext`a$$ $CellContext`x^2 - 2 $CellContext`x + 
         1], "Specifications" :> {{$CellContext`a$$, -10, 10}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {167., 174.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7352958559701023`*^9, 3.735386515616866*^9, 
  3.7353866013067675`*^9, 3.735387129254965*^9, 3.73538810335668*^9, 
  3.735461557790948*^9, 3.7354616770691156`*^9, 3.735461883423996*^9, 
  3.7355383804818697`*^9, 3.7355394334348373`*^9, 3.7355395522494364`*^9, 
  3.7355413441042447`*^9, 3.7355416569545774`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7352952710456457`*^9, 3.7352953459239287`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hyperText", "[", 
   RowBox[{
   "\"\<Hai dubbi su come cambia il grafico quando cambia a?\>\"", ",", 
    "\"\<il coefficiente del termine di secondo grado della X se positivo mi \
indica che la parabola e\[CloseCurlyQuote] rivolta verso \
l\[CloseCurlyQuote]alto mentre se negativa e\[CloseCurlyQuote] rivolta verso \
il basso.\>\"", ",", "LinkHand"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.7352958920841675`*^9, 3.7352959107552357`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia a?\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "il coefficiente del termine di secondo grado della X se positivo mi \
indica che la parabola e\[CloseCurlyQuote] rivolta verso \
l\[CloseCurlyQuote]alto mentre se negativa e\[CloseCurlyQuote] rivolta verso \
il basso."], Method -> "Preemptive", PassEventsDown -> Automatic, 
    PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{3.73529599492805*^9, 3.735386515735873*^9, 
  3.7353866014267745`*^9, 3.735387129380972*^9, 3.7353881034766865`*^9, 
  3.7354615579157486`*^9, 3.7354616771939163`*^9, 3.735461883548796*^9, 
  3.7355394335826387`*^9, 3.7355395524828377`*^9, 3.7355413441354446`*^9, 
  3.735541657207178*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Caso particolare a",
 StyleBox[" ",
  FontWeight->"Bold"],
 "= 0\n"
}], "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345073172201977`*^9, 3.7345073271699533`*^9}, {3.7352960962278438`*^9, 
   3.7352961040232897`*^9}, {3.735540783213111*^9, 3.7355407833067107`*^9}},
 CellTags->"E2_CP_A0"],

Cell["\<\
Hai posto attenzione a cosa succede quando a=0?

\
\>", "Text",
 CellChangeTimes->{{3.7352961419104567`*^9, 3.7352961435955534`*^9}, {
  3.7352961888321404`*^9, 3.735296192954376*^9}, {3.7352964588785863`*^9, 
  3.735296469342185*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p3", " ", "=", " ", "0"}]], "Input",
 CellChangeTimes->{{3.7352964727883816`*^9, 3.7352964775716553`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.735296481078856*^9, 3.735386515801877*^9, 
  3.7353866014427757`*^9, 3.735387129397973*^9, 3.7353881034876876`*^9, 
  3.735461557946948*^9, 3.7354616772719164`*^9, 3.7354618835643964`*^9, 
  3.735539433645039*^9, 3.7355395525140376`*^9, 3.735541344166645*^9, 
  3.7355416572227783`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Row", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Hyperlink", "[", 
      RowBox[{
       RowBox[{"StatusArea", "[", 
        RowBox[{
         RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
         "\"\<TS2\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<TS2\>\""}], 
        "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<No\>\"", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"p3", "\[Equal]", " ", "0"}], ",", 
         RowBox[{
          RowBox[{"p3", "=", "1"}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"-", " ", "2"}], "x"}], " ", "+", " ", "1"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"-", "5"}], ",", 
               RowBox[{"+", "5"}]}], "}"}], ",", " ", 
             RowBox[{"PlotLegends", "\[Rule]", "\"\<y = -2x + 1\>\""}]}], 
            "]"}], "]"}], ";", " ", 
          RowBox[{
          "Print", "[", 
           "\"\<come puoi vedere il grafico non e\[CloseCurlyQuote] piu\
\[CloseCurlyQuote] una parabola ma degenera in una retta\>\"", "]"}]}]}], 
        "]"}]}], "]"}]}], "}"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.7352961975206375`*^9, 3.7352962507426815`*^9}, {
  3.7352963816241674`*^9, 3.735296389068593*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
          Automatic, Method -> "Preemptive"], StatusArea[#, "TS2"]& , 
         TagBoxNote -> "TS2"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
           Automatic, Method -> "Preemptive"], StatusArea[#, "TS2"]& , 
          TagBoxNote -> "TS2"], {"HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["7nkfc_shm", 3, 1]], 33], "TS2"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["7nkfc_shm", 3, 1]], 33], "TS2"}, "Hyperlink"]& ],
   "\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> If[MClib`p3 == 0, MClib`p3 = 1; Print[
        Plot[(-2) $CellContext`x + 1, {$CellContext`x, -5, 
          Plus[5]}, PlotLegends -> "y = -2x + 1"]]; 
      Print["come puoi vedere il grafico non e\[CloseCurlyQuote] piu\
\[CloseCurlyQuote] una parabola ma degenera in una retta"]], Appearance -> 
    Automatic, Evaluator -> Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.735296256208994*^9, 3.735296453831298*^9, 
  3.7353865158268785`*^9, 3.7353866014617767`*^9, 3.735387129418974*^9, 
  3.7353881035116887`*^9, 3.7354615579625483`*^9, 3.735461677287516*^9, 
  3.7354618835819964`*^9, 3.7355394336606393`*^9, 3.7355395525758386`*^9, 
  3.735541344182245*^9, 3.7355416572539787`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Ora tocca a te!", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}},
 CellTags->"TS2"],

Cell["\<\
Inserisci tu le parabole e osserva come sono rappresentate graficamente.Puoi \
confrontare contemporaneamente 5 equazioni\
\>", "Text",
 CellChangeTimes->{
  3.7352965250533714`*^9, {3.7352996587526083`*^9, 3.7352996612697525`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"freeEq2", " ", "=", " ", 
  RowBox[{"{", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"currentEq2", "=", "\"\<\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Panel", "[", 
   RowBox[{"Column", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"InputField", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", "currentEq2", "]"}], ",", "String"}], 
          "]"}], ",", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Confronta\>\"", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "freeEq2", "]"}], "<", "5"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"freeEq2", ",", 
               RowBox[{"ToExpression", "[", "currentEq2", "]"}]}], "]"}], ",", 
             RowBox[{
             "MessageDialog", "[", 
              "\"\<Hai gi\[AGrave] inserito 5 grafici, eliminane uno prima di \
aggiungerne uno nuovo!\>\"", "]"}]}], "]"}]}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Dynamic", "[", 
       RowBox[{"Row", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", "=", "i"}], "}"}], ",", 
            RowBox[{"Column", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Plot", "[", 
                RowBox[{
                 RowBox[{"freeEq2", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{"-", "10"}], ",", 
                   RowBox[{"+", "10"}]}], "}"}], ",", 
                 RowBox[{"PlotLabel", "\[Rule]", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"freeEq2", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
                 RowBox[{"ImageSize", "->", "Small"}]}], "]"}], ",", 
               "\"\<\\t\>\"", ",", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<Elimina\>\"", ",", 
                 RowBox[{"freeEq2", "=", 
                  RowBox[{"Delete", "[", 
                   RowBox[{"freeEq2", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{"freeEq2", ",", 
                    RowBox[{"freeEq2", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
                "]"}]}], "}"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "freeEq2", "]"}]}], "}"}]}], "]"}], "]"}], 
       "]"}]}], "}"}], "]"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Drawing", " ", "the", " ", "list", " ", "of", " ", "the", " ", 
     "functions", " ", "that", " ", "the", " ", "user", " ", "want", " ", 
     "to", " ", "compare"}], ",", " ", 
    RowBox[{
     RowBox[{
     "Delete", " ", "button", " ", "allow", " ", "to", " ", "remove", " ", 
      "that", " ", "expression", " ", "from", " ", "the", " ", "list"}], ";", 
     " ", 
     RowBox[{"TODO", " ", "Insert", " ", "in", " ", "package"}]}]}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7352966296833553`*^9, 3.7352966387698755`*^9}, {
  3.735296671751762*^9, 3.7352966971112127`*^9}, {3.7352997962404723`*^9, 
  3.735299802173812*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.735296700763421*^9, 3.7352998087771893`*^9, 
  3.73538651585688*^9, 3.7353866014847775`*^9, 3.7353871294469757`*^9, 
  3.73538810353769*^9, 3.735461557994748*^9, 3.7354616773031163`*^9, 
  3.7354618836131964`*^9, 3.7355394337250395`*^9, 3.7355395526070385`*^9, 
  3.7355413441978445`*^9, 3.735541657285178*^9}],

Cell[BoxData["\<\"\"\>"], "Output",
 CellChangeTimes->{3.735296700763421*^9, 3.7352998087771893`*^9, 
  3.73538651585688*^9, 3.7353866014847775`*^9, 3.7353871294469757`*^9, 
  3.73538810353769*^9, 3.735461557994748*^9, 3.7354616773031163`*^9, 
  3.7354618836131964`*^9, 3.7355394337250395`*^9, 3.7355395526070385`*^9, 
  3.7355413441978445`*^9, 3.735541657285178*^9}],

Cell[BoxData[
 PanelBox[
  TagBox[GridBox[{
     {
      TemplateBox[{InputFieldBox[
         Dynamic[$CellContext`currentEq2], String],ButtonBox[
        "\"Confronta\"", ButtonFunction :> 
         If[Length[$CellContext`freeEq2] < 5, 
           AppendTo[$CellContext`freeEq2, 
            ToExpression[$CellContext`currentEq2]], 
           MessageDialog[
           "Hai gi\[AGrave] inserito 5 grafici, eliminane uno prima di \
aggiungerne uno nuovo!"]], Appearance -> Automatic, Evaluator -> Automatic, 
         Method -> "Preemptive"]},
       "RowDefault"]},
     {
      DynamicBox[ToBoxes[
        Row[
         Table[
          With[{$CellContext`i = $CellContext`i}, 
           Column[{
             Plot[
              
              Part[$CellContext`freeEq2, $CellContext`i], {$CellContext`x, \
-10, 
               Plus[10]}, PlotLabel -> ToString[
                Part[$CellContext`freeEq2, $CellContext`i]], ImageSize -> 
              Small], "\t", 
             Button[
             "Elimina", $CellContext`freeEq2 = Delete[$CellContext`freeEq2, 
                Position[$CellContext`freeEq2, 
                 
                 Part[$CellContext`freeEq2, $CellContext`i]]]]}]], \
{$CellContext`i, 
           Length[$CellContext`freeEq2]}]], StandardForm],
       ImageSizeCache->{4., {0., 0.}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"]]], "Output",
 CellChangeTimes->{3.735296700763421*^9, 3.7352998087771893`*^9, 
  3.73538651585688*^9, 3.7353866014847775`*^9, 3.7353871294469757`*^9, 
  3.73538810353769*^9, 3.735461557994748*^9, 3.7354616773031163`*^9, 
  3.7354618836131964`*^9, 3.7355394337250395`*^9, 3.7355395526070385`*^9, 
  3.7355413441978445`*^9, 3.735541657285178*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{
     RowBox[{"StatusArea", "[", 
      RowBox[{
       RowBox[{
       "Button", "[", "\"\<Ti senti pronto per gli esercizi\>\"", "]"}], ",", 
       " ", "\"\<ES_G2\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<ES_G2\>\""}], 
      "}"}]}], "]"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7352969587431765`*^9, 3.735297001087599*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Ti senti pronto per gli esercizi\"", ButtonFunction :> {}, 
          Evaluator -> None, Appearance -> Automatic, Method -> "Preemptive"],
          StatusArea[#, "ES_G2"]& , TagBoxNote -> "ES_G2"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Ti senti pronto per gli esercizi\"", ButtonFunction :> {}, 
           Evaluator -> None, Appearance -> Automatic, Method -> 
           "Preemptive"], StatusArea[#, "ES_G2"]& , TagBoxNote -> "ES_G2"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["7nkfc_shm", 3, 1]], 33], "ES_G2"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["7nkfc_shm", 3, 1]], 33], "ES_G2"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.735297005907874*^9, 3.735386515885882*^9, 
  3.7353866015157795`*^9, 3.7353871294779773`*^9, 3.7353881035726924`*^9, 
  3.7354615580259485`*^9, 3.735461677336316*^9, 3.7354618836443963`*^9, 
  3.7355394337562394`*^9, 3.7355395526850386`*^9, 3.735541344275845*^9, 
  3.7355416573163786`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7352963108141174`*^9, 3.7352963143283186`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Esercizi Tipologia 1", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}, {3.7346172310281005`*^9, 3.734617241201078*^9}, {
   3.7353284389597297`*^9, 3.73532844387201*^9}},
 CellTags->"ES_G2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exKindAPrinter", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.735328510406816*^9, 3.735328510583826*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            StyleBox[
            "\"A quale funzione corrisponde la seguente retta?\"", FontWeight -> 
             Bold, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TemplateBox[{"\"Zoom sugli zeri:\"", 
                  TemplateBox[{}, "RowDefault"]}, "RowDefault"]}, {
                TemplateBox[{
                  DynamicBox[
                   ToBoxes[
                    Plot[
                    Part[
                    MClib`teacherEQ, 3, 1], {$CellContext`x, 
                    MClib`Private`y$7284 - MClib`Private`j$7284, 
                    MClib`Private`y$7284 + MClib`Private`j$7284}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                ButtonBox[
                "\"Reset Zoom\"", 
                 ButtonFunction :> (MClib`Private`j$7284 = 5; 
                  MClib`Private`y$7284 = 0), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]}, {
            DynamicBox[
             ToBoxes[
              RadioButtonBar[
               Dynamic[
                Part[MClib`userAnswer, 3, 1]], 
               Part[MClib`exercises, 3, 1], Enabled -> Dynamic[
                 Part[MClib`enableAnswer, 3, 1]]], StandardForm]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            StyleBox[
            "\"A quale funzione corrisponde la seguente retta?\"", FontWeight -> 
             Bold, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TemplateBox[{"\"Zoom sugli zeri:\"", 
                  TemplateBox[{}, "RowDefault"]}, "RowDefault"]}, {
                TemplateBox[{
                  DynamicBox[
                   ToBoxes[
                    Plot[
                    Part[
                    MClib`teacherEQ, 3, 2], {$CellContext`x, 
                    MClib`Private`y$7285 - MClib`Private`j$7285, 
                    MClib`Private`y$7285 + MClib`Private`j$7285}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                ButtonBox[
                "\"Reset Zoom\"", 
                 ButtonFunction :> (MClib`Private`j$7285 = 5; 
                  MClib`Private`y$7285 = 0), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]}, {
            DynamicBox[
             ToBoxes[
              RadioButtonBar[
               Dynamic[
                Part[MClib`userAnswer, 3, 2]], 
               Part[MClib`exercises, 3, 2], Enabled -> Dynamic[
                 Part[MClib`enableAnswer, 3, 2]]], StandardForm]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            StyleBox[
            "\"A quale funzione corrisponde la seguente retta?\"", FontWeight -> 
             Bold, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TemplateBox[{"\"Zoom sugli zeri:\"", 
                  TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$7286 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 3, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$7286 = 1; 
                    MClib`Private`y$7286 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7286, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$7286 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 3, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$7286 = 1; 
                    MClib`Private`y$7286 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7286, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                   "RowDefault"]}, "RowDefault"]}, {
                TemplateBox[{
                  DynamicBox[
                   ToBoxes[
                    Plot[
                    Part[
                    MClib`teacherEQ, 3, 3], {$CellContext`x, 
                    MClib`Private`y$7286 - MClib`Private`j$7286, 
                    MClib`Private`y$7286 + MClib`Private`j$7286}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                ButtonBox[
                "\"Reset Zoom\"", 
                 ButtonFunction :> (MClib`Private`j$7286 = 5; 
                  MClib`Private`y$7286 = 0), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]}, {
            DynamicBox[
             ToBoxes[
              RadioButtonBar[
               Dynamic[
                Part[MClib`userAnswer, 3, 3]], 
               Part[MClib`exercises, 3, 3], Enabled -> Dynamic[
                 Part[MClib`enableAnswer, 3, 3]]], StandardForm]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.735328513954019*^9, 3.7353865160308905`*^9, 
  3.735386601590784*^9, 3.7353871295549817`*^9, 3.7353881036246953`*^9, 
  3.7354615582443485`*^9, 3.7354616774299164`*^9, 3.735461883722397*^9, 
  3.7355394339278393`*^9, 3.735539552764039*^9, 3.735541344353845*^9, 
  3.7355416573641787`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"clicked2", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", 
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Verifica\>\"", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"userAnswer", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "1"}], "]"}], "]"}], " ", "===", "   ", "0"}], 
       "  ", "||", " ", 
       RowBox[{
        RowBox[{"userAnswer", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "2"}], "]"}], "]"}], " ", "===", " ", "0"}], " ", 
       "||", " ", 
       RowBox[{
        RowBox[{"userAnswer", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "3"}], "]"}], "]"}], " ", "===", "  ", "0"}]}], 
      ",", "  ", 
      RowBox[{
      "MessageDialog", "[", 
       "\"\<Rispondi a tutte le domande prima di verificare\>\"", "]"}], " ", 
      ",", " ", 
      RowBox[{
       RowBox[{"checkAnswer", "[", "3", "]"}], ";", " ", 
       RowBox[{"clicked2", " ", "=", "1"}]}]}], "]"}]}], " ", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"clicked2", "===", " ", "1"}], ",", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Vai alla prossima sezione\>\"", "]"}], 
        ",", "\"\<ES_G2_B\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
        "\"\<ES_G2_B\>\""}], "}"}]}], "]"}], ",", " ", 
    "\"\<Verifica la risposta prima di passare alla prossima sezione\>\""}], 
   "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.73532856100571*^9, 3.7353285949966545`*^9}, {
  3.735328626753471*^9, 3.7353286344839125`*^9}, {3.735328674033175*^9, 
  3.7353286795834923`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Button["Verifica", 
    If[
     Or[Part[MClib`userAnswer, 3, 1] === 0, Part[MClib`userAnswer, 3, 2] === 
      0, Part[MClib`userAnswer, 3, 3] === 0], 
     MessageDialog["Rispondi a tutte le domande prima di verificare"], 
     MClib`checkAnswer[3]; $CellContext`clicked2 = 1]], StandardForm],
  ImageSizeCache->{49., {8., 17.}}]], "Output",
 CellChangeTimes->{3.735328686972915*^9, 3.735386516517918*^9, 
  3.735386601773794*^9, 3.7353871297069902`*^9, 3.7353881038047056`*^9, 
  3.7354615584873495`*^9, 3.7354616775713167`*^9, 3.735461883862797*^9, 
  3.7355394344902425`*^9, 3.7355395529436398`*^9, 3.735541344401645*^9, 
  3.73554165763278*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[$CellContext`clicked2 === 1, 
    Hyperlink[
     StatusArea[
      Button["Vai alla prossima sezione"], "ES_G2_B"], {
      EvaluationNotebook[], "ES_G2_B"}], 
    "Verifica la risposta prima di passare alla prossima sezione"], 
   StandardForm],
  ImageSizeCache->{413., {3., 9.}}]], "Output",
 CellChangeTimes->{3.735328686972915*^9, 3.735386516517918*^9, 
  3.735386601773794*^9, 3.7353871297069902`*^9, 3.7353881038047056`*^9, 
  3.7354615584873495`*^9, 3.7354616775713167`*^9, 3.735461883862797*^9, 
  3.7355394344902425`*^9, 3.7355395529436398`*^9, 3.735541344401645*^9, 
  3.73554165763278*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Esercizi Tipologia 2", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}, {3.7346172310281005`*^9, 3.734617241201078*^9}, {
   3.7353284389597297`*^9, 3.73532844387201*^9}, {3.7353284790140204`*^9, 
   3.7353284790980253`*^9}},
 CellTags->"ES_G2_B"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exKindBPrinter", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.735328743788165*^9, 3.735328743918172*^9}, {
  3.735328851156306*^9, 3.735328852660392*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            DynamicBox[
             ToBoxes[
              Style[
               StringJoin[
                ToString[
                 Part[MClib`teacherEQ, 4, 1]], " \t Qual e' il suo grafico?"],
                FontWeight -> Bold], StandardForm]]}, {
            TemplateBox[{
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 1]], 
                   Part[MClib`exercises, 4, 1, 1], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$7417 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 1, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$7417 = 1; 
                    MClib`Private`y$7417 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7417, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$7417 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 1, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$7417 = 1; 
                    MClib`Private`y$7417 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7417, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 1, 1], {$CellContext`x, 
                    MClib`Private`y$7417 - MClib`Private`j$7417, 
                    MClib`Private`y$7417 + MClib`Private`j$7417}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$7417 = 5; 
                    MClib`Private`y$7417 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 1]], 
                   Part[MClib`exercises, 4, 1, 2], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$7418 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 1, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$7418 = 1; 
                    MClib`Private`y$7418 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7418, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$7418 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 1, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$7418 = 1; 
                    MClib`Private`y$7418 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7418, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 1, 2], {$CellContext`x, 
                    MClib`Private`y$7418 - MClib`Private`j$7418, 
                    MClib`Private`y$7418 + MClib`Private`j$7418}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$7418 = 5; 
                    MClib`Private`y$7418 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 1]], 
                   Part[MClib`exercises, 4, 1, 3], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{}, "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 1, 3], {$CellContext`x, 
                    MClib`Private`y$7419 - MClib`Private`j$7419, 
                    MClib`Private`y$7419 + MClib`Private`j$7419}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$7419 = 5; 
                    MClib`Private`y$7419 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 1]], 
                   Part[MClib`exercises, 4, 1, 4], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$7420 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 1, 4] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$7420 = 1; 
                    MClib`Private`y$7420 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7420, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$7420 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 1, 4] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$7420 = 1; 
                    MClib`Private`y$7420 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7420, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 1, 4], {$CellContext`x, 
                    MClib`Private`y$7420 - MClib`Private`j$7420, 
                    MClib`Private`y$7420 + MClib`Private`j$7420}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$7420 = 5; 
                    MClib`Private`y$7420 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            DynamicBox[
             ToBoxes[
              Style[
               StringJoin[
                ToString[
                 Part[MClib`teacherEQ, 4, 2]], " \t Qual e' il suo grafico?"],
                FontWeight -> Bold], StandardForm]]}, {
            TemplateBox[{
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 2]], 
                   Part[MClib`exercises, 4, 2, 1], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$7421 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 2, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$7421 = 1; 
                    MClib`Private`y$7421 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7421, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$7421 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 2, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$7421 = 1; 
                    MClib`Private`y$7421 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7421, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 2, 1], {$CellContext`x, 
                    MClib`Private`y$7421 - MClib`Private`j$7421, 
                    MClib`Private`y$7421 + MClib`Private`j$7421}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$7421 = 5; 
                    MClib`Private`y$7421 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 2]], 
                   Part[MClib`exercises, 4, 2, 2], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$7422 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 2, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$7422 = 1; 
                    MClib`Private`y$7422 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7422, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$7422 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 2, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$7422 = 1; 
                    MClib`Private`y$7422 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7422, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 2, 2], {$CellContext`x, 
                    MClib`Private`y$7422 - MClib`Private`j$7422, 
                    MClib`Private`y$7422 + MClib`Private`j$7422}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$7422 = 5; 
                    MClib`Private`y$7422 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 2]], 
                   Part[MClib`exercises, 4, 2, 3], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$7423 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 2, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$7423 = 1; 
                    MClib`Private`y$7423 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7423, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$7423 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 2, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$7423 = 1; 
                    MClib`Private`y$7423 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7423, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 2, 3], {$CellContext`x, 
                    MClib`Private`y$7423 - MClib`Private`j$7423, 
                    MClib`Private`y$7423 + MClib`Private`j$7423}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$7423 = 5; 
                    MClib`Private`y$7423 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 2]], 
                   Part[MClib`exercises, 4, 2, 4], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{}, "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 2, 4], {$CellContext`x, 
                    MClib`Private`y$7424 - MClib`Private`j$7424, 
                    MClib`Private`y$7424 + MClib`Private`j$7424}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$7424 = 5; 
                    MClib`Private`y$7424 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            DynamicBox[
             ToBoxes[
              Style[
               StringJoin[
                ToString[
                 Part[MClib`teacherEQ, 4, 3]], " \t Qual e' il suo grafico?"],
                FontWeight -> Bold], StandardForm]]}, {
            TemplateBox[{
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 3]], 
                   Part[MClib`exercises, 4, 3, 1], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$7425 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 3, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$7425 = 1; 
                    MClib`Private`y$7425 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7425, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$7425 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 3, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$7425 = 1; 
                    MClib`Private`y$7425 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7425, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 3, 1], {$CellContext`x, 
                    MClib`Private`y$7425 - MClib`Private`j$7425, 
                    MClib`Private`y$7425 + MClib`Private`j$7425}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$7425 = 5; 
                    MClib`Private`y$7425 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 3]], 
                   Part[MClib`exercises, 4, 3, 2], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$7426 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 3, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$7426 = 1; 
                    MClib`Private`y$7426 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7426, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$7426 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 3, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$7426 = 1; 
                    MClib`Private`y$7426 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7426, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 3, 2], {$CellContext`x, 
                    MClib`Private`y$7426 - MClib`Private`j$7426, 
                    MClib`Private`y$7426 + MClib`Private`j$7426}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$7426 = 5; 
                    MClib`Private`y$7426 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 3]], 
                   Part[MClib`exercises, 4, 3, 3], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$7427 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 3, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$7427 = 1; 
                    MClib`Private`y$7427 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7427, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$7427 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 3, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$7427 = 1; 
                    MClib`Private`y$7427 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$7427, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 3, 3], {$CellContext`x, 
                    MClib`Private`y$7427 - MClib`Private`j$7427, 
                    MClib`Private`y$7427 + MClib`Private`j$7427}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$7427 = 5; 
                    MClib`Private`y$7427 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 3]], 
                   Part[MClib`exercises, 4, 3, 4], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{}, "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 3, 4], {$CellContext`x, 
                    MClib`Private`y$7428 - MClib`Private`j$7428, 
                    MClib`Private`y$7428 + MClib`Private`j$7428}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$7428 = 5; 
                    MClib`Private`y$7428 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.735328747761392*^9, 3.7353288557015657`*^9, 
  3.7353865166699266`*^9, 3.735386601853799*^9, 3.735387129851999*^9, 
  3.735388103900711*^9, 3.73546155875255*^9, 3.7354616777741175`*^9, 
  3.7354618839251966`*^9, 3.7355394346774426`*^9, 3.73553955302464*^9, 
  3.7355413444640455`*^9, 3.73554165771078*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"clicked2B", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", 
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Verifica\>\"", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"userAnswer", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "1"}], "]"}], "]"}], " ", "===", "   ", "0"}], 
       "  ", "||", " ", 
       RowBox[{
        RowBox[{"userAnswer", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "2"}], "]"}], "]"}], " ", "===", " ", "0"}], " ", 
       "||", " ", 
       RowBox[{
        RowBox[{"userAnswer", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "3"}], "]"}], "]"}], " ", "===", "  ", "0"}]}], 
      ",", "  ", 
      RowBox[{
      "MessageDialog", "[", 
       "\"\<Rispondi a tutte le domande prima di verificare\>\"", "]"}], " ", 
      ",", " ", 
      RowBox[{
       RowBox[{"checkAnswer", "[", "4", "]"}], ";", " ", 
       RowBox[{"clicked2B", " ", "=", "1"}]}]}], "]"}]}], " ", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"clicked2B", "===", " ", "1"}], ",", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Vai alla prossima sezione\>\"", "]"}], 
        ",", "\"\<RS_G2\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<RS_G2\>\""}],
        "}"}]}], "]"}], ",", " ", 
    "\"\<Verifica la risposta prima di passare alla prossima sezione\>\""}], 
   "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7353287773870864`*^9, 3.7353288247337947`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Button["Verifica", 
    If[
     Or[Part[MClib`userAnswer, 4, 1] === 0, Part[MClib`userAnswer, 4, 2] === 
      0, Part[MClib`userAnswer, 4, 3] === 0], 
     MessageDialog["Rispondi a tutte le domande prima di verificare"], 
     MClib`checkAnswer[4]; $CellContext`clicked2B = 1]], StandardForm],
  ImageSizeCache->{49., {8., 17.}}]], "Output",
 CellChangeTimes->{3.7353288285640135`*^9, 3.735386517194957*^9, 
  3.7353866023208256`*^9, 3.7353871303350267`*^9, 3.7353881043777385`*^9, 
  3.7354615593161516`*^9, 3.7354616782315187`*^9, 3.735461884405198*^9, 
  3.7355394356300488`*^9, 3.7355395536000433`*^9, 3.7355413445898457`*^9, 
  3.735541658392582*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[$CellContext`clicked2B === 1, 
    Hyperlink[
     StatusArea[
      Button["Vai alla prossima sezione"], "RS_G2"], {
      EvaluationNotebook[], "RS_G2"}], 
    "Verifica la risposta prima di passare alla prossima sezione"], 
   StandardForm],
  ImageSizeCache->{413., {3., 9.}}]], "Output",
 CellChangeTimes->{3.7353288285640135`*^9, 3.735386517194957*^9, 
  3.7353866023208256`*^9, 3.7353871303350267`*^9, 3.7353881043777385`*^9, 
  3.7354615593161516`*^9, 3.7354616782315187`*^9, 3.735461884405198*^9, 
  3.7355394356300488`*^9, 3.7355395536000433`*^9, 3.7355413445898457`*^9, 
  3.735541658392582*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Risultati", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}, {3.7346172310281005`*^9, 3.734617241201078*^9}, {
   3.735296789220481*^9, 3.73529679043255*^9}},
 CellTags->"RS_G2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"correctAnswerG2", "=", "  ", 
    RowBox[{"correctCounter", " ", "-", " ", "correctAnswerG1"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "In", " ", "questo", " ", "caso", " ", "sara", " ", "uguale", " ", 
     "correctAnswer"}], " ", "-", " ", 
    RowBox[{
    "correctAnswerG1", " ", "per", " ", "contare", " ", "tutte", " ", "le", 
     " ", "risposte", " ", "esatte", " ", "per", " ", "la", " ", "sezione", 
     " ", "di", " ", "grado", " ", "2"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.735328924408496*^9, 3.7353289630477057`*^9}, {
  3.7353290970253687`*^9, 3.735329098935478*^9}, {3.735462069420929*^9, 
  3.735462084726966*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"correctAnswerG2", "  ", "<", " ", "4"}], ",", " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<Su 6 domande hai risposto correttamente a ``.\>\"", ",", 
      "correctAnswerG2"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{
    "Text", "[", 
     "\"\<volendo puoi proseguire ma sarebbe meglio ripassare un po di teoria \
e poi riprovare gli esercizi\>\"", "]"}]}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<Su 6 domande hai risposto correttamente a ``.\>\"", ",", 
      "correctAnswerG2"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{
    "Text", "[", 
     "\"\<hai compreso bene l\[CloseCurlyQuote]argomento ora puoi proseguire, \
ma se hai ancora qualche dubbio puoi comunque tornare indietro e riguardare \
le equazioni di primo grado\>\"", "]"}]}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Text", "[", "\"\<Qualcosa \[EGrave] andato storto!!\>\"", "]"}]}],
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Row", "[", 
   RowBox[{"{", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Torna alla teoria\>\"", "]"}], ",", " ", 
        "\"\<E_2G\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<E_2G\>\""}], 
       "}"}]}], "]"}], "}"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Row", "[", 
   RowBox[{"{", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Torna all' indice\>\"", "]"}], ",", " ", 
        "\"\<Index\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<Index\>\""}],
        "}"}]}], "]"}], "}"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "in", " ", "questi", " ", "due", " ", "casi", " ", "caso", " ", "si", " ", 
    "chiama", " ", "lu", " ", "funzione", " ", "che", " ", "resetta", " ", 
    "i", " ", "vettori", " ", "nel", " ", "package"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Ricarica Esercizi\>\"", ",", " ", 
    RowBox[{
     RowBox[{"resetGrade", "[", 
      RowBox[{"2", ",", " ", "correctAnswerG2"}], "]"}], ";", " ", 
     RowBox[{"NotebookLocate", "[", "\"\<ES_G2\>\"", "]"}]}]}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "in", " ", "questi", " ", "due", " ", "casi", " ", "caso", " ", "si", " ", 
    "chiama", " ", "lu", " ", "funzione", " ", "che", " ", "resetta", " ", 
    "i", " ", "vettori", " ", "nel", " ", "package"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{
     RowBox[{"StatusArea", "[", 
      RowBox[{
       RowBox[{"Button", "[", "\"\<Sezione Successiva\>\"", "]"}], ",", " ", 
       "\"\<E_G3\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<E_G3\>\""}], 
      "}"}]}], "]"}], "}"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.735329006711203*^9, 3.735329093672177*^9}, {
  3.735490190447387*^9, 3.7354902124404645`*^9}, {3.7355419162615337`*^9, 
  3.735541920612355*^9}}],

Cell[BoxData[
 RowBox[{
  InterpretationBox["\<\"Su 6 domande hai risposto correttamente a \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\).\"\>",
   StringForm["Su 6 domande hai risposto correttamente a ``.", 0],
   Editable->False], " ", 
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"volendo puoi proseguire ma sarebbe meglio ripassare un po di \
teoria e poi riprovare gli esercizi\"\>", TextForm]], "InlineText"],
   Text["volendo puoi proseguire ma sarebbe meglio ripassare un po di teoria \
e poi riprovare gli esercizi"]]}]], "Output",
 CellChangeTimes->{3.7353291090870585`*^9, 3.7353865172439594`*^9, 
  3.735386602359828*^9, 3.7353871304650335`*^9, 3.735388104417741*^9, 
  3.7354615593649516`*^9, 3.735461678325118*^9, 3.7354618844363985`*^9, 
  3.7354621318562913`*^9, 3.73553943567925*^9, 3.735539553646844*^9, 
  3.735541344621046*^9, 3.7355416584549823`*^9, 3.7355419224501624`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Torna alla teoria\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "E_2G"]& , TagBoxNote -> "E_2G"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Torna alla teoria\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "E_2G"]& , TagBoxNote -> "E_2G"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["7nkfc_shm", 3, 1]], 33], "E_2G"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["7nkfc_shm", 3, 1]], 33], "E_2G"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7353291090870585`*^9, 3.7353865172439594`*^9, 
  3.735386602359828*^9, 3.7353871304650335`*^9, 3.735388104417741*^9, 
  3.7354615593649516`*^9, 3.735461678325118*^9, 3.7354618844363985`*^9, 
  3.7354621318562913`*^9, 3.73553943567925*^9, 3.735539553646844*^9, 
  3.735541344621046*^9, 3.7355416584549823`*^9, 3.735541922465762*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Torna all' indice\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "Index"]& , TagBoxNote -> "Index"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Torna all' indice\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "Index"]& , TagBoxNote -> "Index"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["7nkfc_shm", 3, 1]], 33], "Index"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["7nkfc_shm", 3, 1]], 33], "Index"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7353291090870585`*^9, 3.7353865172439594`*^9, 
  3.735386602359828*^9, 3.7353871304650335`*^9, 3.735388104417741*^9, 
  3.7354615593649516`*^9, 3.735461678325118*^9, 3.7354618844363985`*^9, 
  3.7354621318562913`*^9, 3.73553943567925*^9, 3.735539553646844*^9, 
  3.735541344621046*^9, 3.7355416584549823`*^9, 3.7355419224813623`*^9}],

Cell[BoxData[
 ButtonBox["\<\"Ricarica Esercizi\"\>",
  Appearance->Automatic,
  ButtonFunction:>(MClib`resetGrade[2, $CellContext`correctAnswerG2]; 
   NotebookLocate["ES_G2"]),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{3.7353291090870585`*^9, 3.7353865172439594`*^9, 
  3.735386602359828*^9, 3.7353871304650335`*^9, 3.735388104417741*^9, 
  3.7354615593649516`*^9, 3.735461678325118*^9, 3.7354618844363985`*^9, 
  3.7354621318562913`*^9, 3.73553943567925*^9, 3.735539553646844*^9, 
  3.735541344621046*^9, 3.7355416584549823`*^9, 3.7355419224969625`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Sezione Successiva\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "E_G3"]& , TagBoxNote -> "E_G3"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Sezione Successiva\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "E_G3"]& , TagBoxNote -> "E_G3"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["7nkfc_shm", 3, 1]], 33], "E_G3"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["7nkfc_shm", 3, 1]], 33], "E_G3"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7353291090870585`*^9, 3.7353865172439594`*^9, 
  3.735386602359828*^9, 3.7353871304650335`*^9, 3.735388104417741*^9, 
  3.7354615593649516`*^9, 3.735461678325118*^9, 3.7354618844363985`*^9, 
  3.7354621318562913`*^9, 3.73553943567925*^9, 3.735539553646844*^9, 
  3.735541344621046*^9, 3.7355416584549823`*^9, 3.7355419225125628`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[TextData[StyleBox["Funzioni di 3 \[Degree]Grado", "Section"]], "Text",
 CellChangeTimes->{{3.734265091372779*^9, 3.7342651012527695`*^9}, {
  3.734265294242138*^9, 3.7342652943623247`*^9}, {3.7355408150236573`*^9, 
  3.735540817701668*^9}},
 CellTags->"E_G3"],

Cell[CellGroupData[{

Cell["Introduzione ", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}}],

Cell["\<\
Le equazioni di terzo grado hanno la forma y=ax3+bx2+cx+d ovvero una cubica \
ma cosa vogliono dire i parametri a, b, c e d?
\
\>", "Text",
 CellChangeTimes->{3.735297207849425*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "*", 
       RowBox[{"x", "^", "3"}]}], "+", 
      RowBox[{"4", "*", 
       RowBox[{"x", " ", "^", "2"}]}], "+", 
      RowBox[{"5", "*", "x"}], "+", " ", "7"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], "*", 
       RowBox[{"x", "^", "3"}]}], "+", 
      RowBox[{"5", "*", 
       RowBox[{"x", "^", "2"}]}], "+", 
      RowBox[{"7", "*", "x"}], "+", " ", "8"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", " ", 
     RowBox[{"+", "3"}]}], "}"}], ",", " ", 
   RowBox[{"PlotLabels", "\[Rule]", " ", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7355409292102747`*^9, 3.735540969229311*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
3FtlBCzcv0JR/8SB//8boLgHv1xa4sB/AeDaS3w=
       "]]},
     Annotation[#, "Charting`Private`Tag$7958#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$7958#2"]& ]}, {{{}, 
     {GrayLevel[0.4], AbsoluteThickness[
      0.5], {LineBox[{
        Scaled[{0.02, 0}, {3, 111.99998983673504`}], 
         Offset[{3, 0}, Scaled[{0.02, 0}, {3, 111.99998983673504`}]], 
         Offset[{7, 0}, Scaled[{0.02, 0}, {3, 111.99998983579151`}]], 
         Offset[{12, 0}, Scaled[{0.02, 0}, {3, 111.99998983579151`}]]}], 
       LineBox[{
        Scaled[{0.02, 0}, {3, -33.99999130612292}], 
         Offset[{3, 0}, Scaled[{0.02, 0}, {3, -33.99999130612292}]], 
         Offset[{7, 0}, Scaled[{0.02, 0}, {3, -33.99942213750468}]], 
         Offset[{12, 0}, Scaled[{0.02, 0}, {3, -33.99942213750468}]]}]}, {
       InsetBox[
        TagBox[
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["x", "3"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["x", "2"]}], "+", 
          RowBox[{"5", " ", "x"}], "+", "7"}],
         HoldForm], Offset[{15, 0}, 
        Scaled[{0.02, 0}, {3, 111.99998983579151}]], ImageScaled[{0, 0.5}]], 
       InsetBox[
        TagBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["x", "3"]}], "+", 
          RowBox[{"5", " ", 
           SuperscriptBox["x", "2"]}], "+", 
          RowBox[{"7", " ", "x"}], "+", "8"}],
         HoldForm], Offset[{15, 0}, 
        Scaled[{0.02, 0}, {3, -33.99942213750468}]], 
        ImageScaled[{0, 0.5}]]}, {}, {}}}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 122}, {All, All}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-33.99999130612292, 139.9999839591843}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7355409787105455`*^9, 3.7355413448610463`*^9, 
  3.7355416586951857`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.734265614573988*^9, 3.734265654600589*^9}, {
   3.735538404139413*^9, 3.7355384117234488`*^9}, 3.7355409751329317`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione guidata del parametro d", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.7352940246883583`*^9, 3.7352940263724546`*^9}, {
   3.7352950820538363`*^9, 3.7352950826698713`*^9}, {3.7352957197473106`*^9, 
   3.735295720286341*^9}, {3.7352973000917006`*^9, 3.7352973049559793`*^9}, {
   3.7355410088870726`*^9, 3.735541010261879*^9}},
 CellTags->"E_G3_CD"],

Cell["\<\
Partiamo cercando di capire cosa rappresenta il d della formula
\
\>", "Text",
 CellChangeTimes->{3.735297328782342*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "*", 
        SuperscriptBox["x", "3"]}], " ", "+", 
       RowBox[{"3", "*", 
        SuperscriptBox["x", "2"]}], "+", " ", "x", "+", " ", "d"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "3"}], ",", " ", 
        RowBox[{"+", "3"}]}], "}"}], ",", " ", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{
        SuperscriptBox["x", "3"], " ", "+", " ", 
        SuperscriptBox["x", "2"], "+", " ", 
        RowBox[{"2", "*", "x"}], "+", " ", "d"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", " ", 
      RowBox[{"-", "10"}], ",", 
      RowBox[{"+", "10"}]}], "}"}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Plotting", " ", "an", " ", "example"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7352973757330275`*^9, 3.73529744011571*^9}, {
  3.7355410401852107`*^9, 3.7355410468190413`*^9}, {3.735541084505807*^9, 
  3.73554108513361*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{MClib`d$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[MClib`d$$], -10, 10}}, Typeset`size$$ = {360., {120., 127.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    MClib`d$8181$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {MClib`d$$ = -10}, "ControllerVariables" :> {
        Hold[MClib`d$$, MClib`d$8181$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[2 $CellContext`x^3 + 3 $CellContext`x^2 + $CellContext`x + 
        MClib`d$$, {$CellContext`x, -3, 
         Plus[3]}, 
        PlotLabel -> $CellContext`x^3 + $CellContext`x^2 + 2 $CellContext`x + 
         MClib`d$$], "Specifications" :> {{MClib`d$$, -10, 10}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {167., 174.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.73529744500799*^9, 3.735386517543977*^9, 
  3.735386602607842*^9, 3.7353871308430557`*^9, 3.7353881046417537`*^9, 
  3.7354615596989536`*^9, 3.735461678575719*^9, 3.7354618846743994`*^9, 
  3.735539436017851*^9, 3.7355395538818445`*^9, 3.735541077731783*^9, 
  3.7355413449234467`*^9, 3.735541658821986*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hyperText", "[", 
   RowBox[{
   "\"\<Hai dubbi su come cambia il grafico quando cambia d?\>\"", ",", 
    "\"\<il termine noto c indica l\[CloseCurlyQuote]ordinata del punto di \
intersezione del grafico con l\[CloseCurlyQuote]asse Y\>\"", ",", 
    "LinkHand"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.7352975258106112`*^9, 3.7352975453097267`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia d?\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "il termine noto c indica l\[CloseCurlyQuote]ordinata del punto di \
intersezione del grafico con l\[CloseCurlyQuote]asse Y"], Method -> 
    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
    True}]]], "Output",
 CellChangeTimes->{3.7352975497139783`*^9, 3.735386517655983*^9, 
  3.7353866027218485`*^9, 3.735387130957062*^9, 3.735388104785762*^9, 
  3.7354615598237534`*^9, 3.7354616786849194`*^9, 3.7354618848303995`*^9, 
  3.7355394362070513`*^9, 3.7355395540076447`*^9, 3.735541344939047*^9, 
  3.735541659122387*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Caso particolare d",
 StyleBox[" ",
  FontWeight->"Bold"],
 "= 0"
}], "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345073172201977`*^9, 3.7345073271699533`*^9}, {3.7352960962278438`*^9, 
   3.7352961040232897`*^9}, {3.735297656163067*^9, 3.735297656586091*^9}, {
   3.7355410955364575`*^9, 3.735541096674466*^9}},
 CellTags->"E3_CP_D0"],

Cell["\<\
Hai posto attenzione a cosa succede quando d=0?
\
\>", "Text",
 CellChangeTimes->{{3.7352976665066586`*^9, 3.735297685099722*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p4", "=", " ", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Row", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Hyperlink", "[", 
      RowBox[{
       RowBox[{"StatusArea", "[", 
        RowBox[{
         RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
         "\"\<E_G3_CC\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
         "\"\<E_G3_CC\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<No\>\"", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"p4", "\[Equal]", " ", "0"}], ",", 
         RowBox[{
          RowBox[{"p4", "=", "1"}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"2", "*", 
               SuperscriptBox["x", "3"]}], " ", "+", 
              RowBox[{"3", "*", 
               SuperscriptBox["x", "2"]}], "+", " ", "x"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"-", "5"}], ",", 
               RowBox[{"+", "5"}]}], "}"}], ",", " ", 
             RowBox[{
             "PlotLegends", "\[Rule]", 
              "\"\<y = 2*\!\(\*SuperscriptBox[\(x\), \(3\)]\) \
+3*\!\(\*SuperscriptBox[\(x\), \(2\)]\)+ x\>\""}]}], "]"}], "]"}], ";", " ", 
          RowBox[{
          "Print", "[", 
           "\"\<come puoi vedere il grafico passa  per \
l\[CloseCurlyQuote]origine\>\"", "]"}]}]}], "]"}]}], "]"}]}], "}"}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.7352977392638197`*^9, 3.7352977926878757`*^9}, {
  3.735297833655219*^9, 3.7352978602227383`*^9}, {3.735297985110882*^9, 
  3.7352979913522387`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7352978417416816`*^9, 3.735297863953952*^9}, 
   3.7352979953094654`*^9, 3.7353865176789846`*^9, 3.7353866027768517`*^9, 
   3.735387130977063*^9, 3.7353881048207636`*^9, 3.735461559854954*^9, 
   3.7354616787161193`*^9, 3.7354618848459997`*^9, 3.7355394362226515`*^9, 
   3.7355395540232444`*^9, 3.735541344970247*^9, 3.7355416591379867`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
          Automatic, Method -> "Preemptive"], StatusArea[#, "E_G3_CC"]& , 
         TagBoxNote -> "E_G3_CC"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
           Automatic, Method -> "Preemptive"], StatusArea[#, "E_G3_CC"]& , 
          TagBoxNote -> "E_G3_CC"], {"HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["7nkfc_shm", 3, 1]], 33], "E_G3_CC"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["7nkfc_shm", 3, 1]], 33], "E_G3_CC"}, "Hyperlink"]& ],
   "\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> 
    If[$CellContext`p4 == 0, $CellContext`p4 = 1; Print[
        Plot[
        2 $CellContext`x^3 + 
         3 $CellContext`x^2 + $CellContext`x, {$CellContext`x, -5, 
          Plus[5]}, PlotLegends -> 
         "y = 2*\!\(\*SuperscriptBox[\(x\), \(3\)]\) +3*\!\(\*SuperscriptBox[\
\(x\), \(2\)]\)+ x"]]; 
      Print["come puoi vedere il grafico passa  per \
l\[CloseCurlyQuote]origine"]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.7352978417416816`*^9, 3.735297863953952*^9}, 
   3.7352979953094654`*^9, 3.7353865176789846`*^9, 3.7353866027768517`*^9, 
   3.735387130977063*^9, 3.7353881048207636`*^9, 3.735461559854954*^9, 
   3.7354616787161193`*^9, 3.7354618848459997`*^9, 3.7355394362226515`*^9, 
   3.7355395540232444`*^9, 3.735541344970247*^9, 3.7355416591691866`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione guidata del parametro c", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.7352940246883583`*^9, 3.7352940263724546`*^9}, {
   3.7352950820538363`*^9, 3.7352950826698713`*^9}, {3.7352957197473106`*^9, 
   3.735295720286341*^9}, {3.7352973000917006`*^9, 3.7352973049559793`*^9}, {
   3.7352979210292163`*^9, 3.7352979214342394`*^9}, {3.7355411028763075`*^9, 
   3.7355411040475163`*^9}},
 CellTags->"E_G3_CC"],

Cell["\<\
Ma il parametro c come si traduce sul grafico?
\
\>", "Text",
 CellChangeTimes->{3.7352980168066945`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "*", 
       SuperscriptBox["x", "3"]}], " ", "+", 
      RowBox[{"3", "*", 
       SuperscriptBox["x", "2"]}], "+", " ", 
      RowBox[{"c", "*", "x"}], "+", " ", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", " ", 
       RowBox[{"+", "3"}]}], "}"}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
       RowBox[{"2", "*", 
        SuperscriptBox["x", "3"]}], " ", "+", 
       RowBox[{"3", "*", 
        SuperscriptBox["x", "2"]}], "+", " ", 
       RowBox[{"c", "*", "x"}], "+", " ", "1"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", " ", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.735298043428217*^9, 3.735298071636831*^9}, {
   3.735541116529767*^9, 3.735541121106989*^9}, 3.7355412610912347`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], -10, 10}}, Typeset`size$$ = {
    360., {118., 123.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`c$8249$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$8249$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[2 $CellContext`x^3 + 
        3 $CellContext`x^2 + $CellContext`c$$ $CellContext`x + 
        1, {$CellContext`x, -3, 
         Plus[3]}, PlotLabel -> 
        2 $CellContext`x^3 + 
         3 $CellContext`x^2 + $CellContext`c$$ $CellContext`x + 1], 
      "Specifications" :> {{$CellContext`c$$, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {164., 171.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.735298055994936*^9, 3.735298075518053*^9}, 
   3.735386517740988*^9, 3.7353866028408556`*^9, 3.735387131034066*^9, 
   3.7353881048847675`*^9, 3.7354615599173536`*^9, 3.7354616787649193`*^9, 
   3.7354618848927994`*^9, 3.735539436365052*^9, 3.7355395540856447`*^9, 
   3.7355411235901995`*^9, 3.7355412636752486`*^9, 3.735541345017047*^9, 
   3.735541659217987*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hyperText", "[", 
   RowBox[{
   "\"\<Hai dubbi su come cambia il grafico quando cambia c?\>\"", ",", 
    "\"\<il coefficiente del termine di primo grado della X pi\[UGrave] \
\[EGrave] grande pi\[UGrave] indica quanto il grafico assomiglia a una \
retta\>\"", ",", "LinkHand"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.735298099492424*^9, 3.735298113001197*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia c?\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "il coefficiente del termine di primo grado della X pi\[UGrave] \
\[EGrave] grande pi\[UGrave] indica quanto il grafico assomiglia a una \
retta"], Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
    True}]]], "Output",
 CellChangeTimes->{3.735298119400563*^9, 3.7353865178529944`*^9, 
  3.735386602953862*^9, 3.735387131150073*^9, 3.735388105003774*^9, 
  3.7354615601075544`*^9, 3.7354616788741198`*^9, 3.735461885002*^9, 
  3.7355394365572524`*^9, 3.7355395542456455`*^9, 3.735541345032647*^9, 
  3.7355416593593874`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["\<\
Comprensione guidata parametro b
\
\>", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345073172201977`*^9, 3.7345073271699533`*^9}, {3.7352960962278438`*^9, 
   3.7352961040232897`*^9}, {3.735297656163067*^9, 3.735297656586091*^9}, {
   3.7352981637681007`*^9, 3.735298164128121*^9}, {3.7352982309449425`*^9, 
   3.7352982401714706`*^9}, {3.735541326396946*^9, 3.7355413277625628`*^9}},
 CellTags->"E_G3_CB"],

Cell["\<\
Ma il parametro b come si traduce sul grafico?

\
\>", "Text",
 CellChangeTimes->{{3.7352982687371044`*^9, 3.735298276634556*^9}, {
  3.735541331417991*^9, 3.7355413317605968`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "*", 
       SuperscriptBox["x", "3"]}], " ", "+", 
      RowBox[{"b", "*", 
       SuperscriptBox["x", "2"]}], "+", " ", "x", "+", " ", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", " ", 
       RowBox[{"+", "3"}]}], "}"}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
       SuperscriptBox["x", "3"], " ", "+", " ", 
       RowBox[{"b", " ", "*", " ", 
        SuperscriptBox["x", "2"]}], "+", " ", "x", "+", " ", "1"}]}]}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7352983018930006`*^9, 3.7352983268544283`*^9}, {
  3.7355413160444937`*^9, 3.735541322038318*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`b$$], -10, 10}}, Typeset`size$$ = {
    360., {118., 124.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`b$8319$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`b$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`b$$, $CellContext`b$8319$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[2 $CellContext`x^3 + $CellContext`b$$ $CellContext`x^2 + \
$CellContext`x + 1, {$CellContext`x, -3, 
         Plus[3]}, 
        PlotLabel -> $CellContext`x^3 + $CellContext`b$$ $CellContext`x^2 + \
$CellContext`x + 1], "Specifications" :> {{$CellContext`b$$, -10, 10}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {164., 171.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7352983308536572`*^9, 3.735386517904997*^9, 3.7353866029998646`*^9, 
   3.735387131184075*^9, 3.735388105042776*^9, 3.735461560154354*^9, 
   3.7354616789209194`*^9, 3.7354618850332*^9, 3.735539436666453*^9, 
   3.735539554276845*^9, {3.735541335975816*^9, 3.735541345079447*^9}, 
   3.7355416594071875`*^9}]
}, Open  ]],

Cell["", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hyperText", "[", 
   RowBox[{
   "\"\<Hai dubbi su come cambia il grafico quando cambia b?\>\"", ",", 
    "\"\<il coefficiente del termine di secondo grado della X pi\[UGrave] \
\[EGrave] grande pi\[UGrave] indica quanto il grafico nei suoi rami \
assomiglia a una parabola\>\"", ",", "LinkHand"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.735297632286701*^9, 3.735297634622835*^9}, {
  3.735298351693849*^9, 3.7352983774893246`*^9}, {3.7355413651439533`*^9, 
  3.7355413670195646`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia b?\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "il coefficiente del termine di secondo grado della X pi\[UGrave] \
\[EGrave] grande pi\[UGrave] indica quanto il grafico nei suoi rami \
assomiglia a una parabola"], Method -> "Preemptive", PassEventsDown -> 
    Automatic, PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{
  3.7352983817905703`*^9, 3.7353865180160036`*^9, 3.735386603114871*^9, 
   3.7353871313030815`*^9, 3.735388105232787*^9, 3.7354615603415546`*^9, 
   3.7354616790311203`*^9, 3.7354618851424*^9, 3.7355394369094534`*^9, 
   3.7355395544810467`*^9, {3.735541345095047*^9, 3.7355413699195833`*^9}, 
   3.7355416595651875`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione guidata parametro a", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345073172201977`*^9, 3.7345073271699533`*^9}, {3.7352960962278438`*^9, 
   3.7352961040232897`*^9}, {3.735297656163067*^9, 3.735297656586091*^9}, {
   3.7352981637681007`*^9, 3.735298164128121*^9}, {3.7352982309449425`*^9, 
   3.7352982401714706`*^9}, {3.735298438414809*^9, 3.7352984399558973`*^9}, {
   3.735541413720219*^9, 3.735541414972226*^9}},
 CellTags->"E_G3_CA"],

Cell["\<\
cosa vuol dire graficamente il coefficiente a?
\
\>", "Text",
 CellChangeTimes->{3.7352984635272455`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "*", 
       SuperscriptBox["x", "3"]}], " ", "+", 
      RowBox[{"4", "*", 
       SuperscriptBox["x", "2"]}], "+", " ", "x", "+", " ", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", " ", 
       RowBox[{"+", "3"}]}], "}"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
       RowBox[{"a", "*", " ", 
        SuperscriptBox["x", "3"]}], " ", "+", " ", 
       RowBox[{"4", "*", " ", 
        SuperscriptBox["x", "2"]}], "+", " ", "x", "+", " ", "1"}]}]}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.735298482453328*^9, 3.7352984986722555`*^9}, {
  3.7355414249436693`*^9, 3.7355414301878953`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -10, 10}}, Typeset`size$$ = {
    360., {118., 123.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$8385$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$8385$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`a$$ $CellContext`x^3 + 
        4 $CellContext`x^2 + $CellContext`x + 1, {$CellContext`x, -3, 
         Plus[3]}, 
        PlotLabel -> $CellContext`a$$ $CellContext`x^3 + 
         4 $CellContext`x^2 + $CellContext`x + 1], 
      "Specifications" :> {{$CellContext`a$$, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {164., 171.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7352985024284706`*^9, 3.7353865180620065`*^9, 
  3.7353866031578736`*^9, 3.7353871313350835`*^9, 3.7353881052667894`*^9, 
  3.735461560372755*^9, 3.7354616790623198`*^9, 3.7354618851736*^9, 
  3.7355394369904537`*^9, 3.7355395545272474`*^9, 3.7355413451418467`*^9, 
  3.7355414328889074`*^9, 3.735541659611988*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hyperText", "[", 
   RowBox[{
   "\"\<Hai dubbi su come cambia il grafico quando cambia a?\>\"", ",", 
    "\"\<il coefficiente del termine di terzo grado della X indica quanto il \
grafico \[EGrave] pendente\>\"", ",", "LinkHand"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.735298526108825*^9, 3.7352985554645042`*^9}, {
  3.735541418761041*^9, 3.735541418854641*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia a?\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "il coefficiente del termine di terzo grado della X indica quanto il \
grafico \[EGrave] pendente"], Method -> "Preemptive", PassEventsDown -> 
    Automatic, PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{3.735298563153944*^9, 3.735386518216015*^9, 
  3.7353866032708797`*^9, 3.7353871314550905`*^9, 3.7353881053877964`*^9, 
  3.735461560497555*^9, 3.7354616791901207`*^9, 3.7354618852984004`*^9, 
  3.7355394372264547`*^9, 3.735539554686248*^9, 3.735541345160447*^9, 
  3.735541659817788*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Caso particolare ", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345073172201977`*^9, 3.7345073271699533`*^9}, {3.7352960962278438`*^9, 
   3.7352961040232897`*^9}, {3.735297656163067*^9, 3.735297656586091*^9}, {
   3.735298605131345*^9, 3.735298606005395*^9}},
 CellTags->"E3_CP_A"],

Cell["\<\
Hai notato cosa cambia se a<0 o a>0?

\
\>", "Text",
 CellChangeTimes->{{3.735298627672634*^9, 3.7352986288447013`*^9}, 
   3.73529886082697*^9, {3.7352991109652767`*^9, 3.7352991114993076`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p5", "=", " ", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Row", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Hyperlink", "[", 
      RowBox[{
       RowBox[{"StatusArea", "[", 
        RowBox[{
         RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
         "\"\<E3_CP_A0\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
         "\"\<E3_CP_A0\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<No\>\"", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"p5", "\[Equal]", " ", "0"}], ",", 
         RowBox[{
          RowBox[{"p5", "=", "1"}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                SuperscriptBox["x", "3"], " ", "+", " ", 
                RowBox[{"4", "*", 
                 SuperscriptBox["x", "2"]}], "+", " ", "x", " ", "+", " ", 
                "1"}], ",", " ", 
               RowBox[{
                RowBox[{"-", " ", 
                 SuperscriptBox["x", "3"]}], " ", "+", " ", 
                RowBox[{"4", "*", 
                 SuperscriptBox["x", "2"]}], "+", " ", "x", " ", "+", " ", 
                "1"}]}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"-", "5"}], ",", 
               RowBox[{"+", "5"}]}], "}"}], ",", " ", 
             RowBox[{"PlotLabels", "\[Rule]", " ", "\"\<Expressions\>\""}]}], 
            "]"}], "]"}], ";", " ", 
          RowBox[{
          "Print", "[", 
           "\"\<come puoi vedere dai grafici se a>0 allora il grafico cresce \
al crescere delle X, se a<0 il grafico decresce al decrescere delle X\>\"", 
           "]"}]}]}], "]"}]}], "]"}]}], "}"}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.7352986564962826`*^9, 3.735298663398678*^9}, {
  3.7352987643964543`*^9, 3.735298812244191*^9}, {3.7352988505363812`*^9, 
  3.7352989272387686`*^9}, {3.7352989748274903`*^9, 3.7352990467246027`*^9}, {
  3.7352991758399878`*^9, 3.735299179922221*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.7352987843635964`*^9, 3.735298815742391*^9, 3.735298930566959*^9, {
   3.735298993968585*^9, 3.7352990226242237`*^9}, 3.7352990532169743`*^9, 
   3.735300115027706*^9, 3.7353865182390165`*^9, 3.7353866032868805`*^9, 
   3.735387131477092*^9, 3.735388105412798*^9, 3.735461560513155*^9, 
   3.7354616792057204`*^9, 3.735461885314*^9, 3.7355394372420545`*^9, 
   3.7355395547058477`*^9, 3.7355413451760473`*^9, 3.7355416598333883`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
          Automatic, Method -> "Preemptive"], StatusArea[#, "E3_CP_A0"]& , 
         TagBoxNote -> "E3_CP_A0"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
           Automatic, Method -> "Preemptive"], StatusArea[#, "E3_CP_A0"]& , 
          TagBoxNote -> "E3_CP_A0"], {"HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["7nkfc_shm", 3, 1]], 33], "E3_CP_A0"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["7nkfc_shm", 3, 1]], 33], "E3_CP_A0"}, "Hyperlink"]& ],
   "\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> 
    If[$CellContext`p5 == 0, $CellContext`p5 = 1; Print[
        Plot[{$CellContext`x^3 + 4 $CellContext`x^2 + $CellContext`x + 
          1, -$CellContext`x^3 + 4 $CellContext`x^2 + $CellContext`x + 
          1}, {$CellContext`x, -5, 
          Plus[5]}, PlotLabels -> "Expressions"]]; 
      Print["come puoi vedere dai grafici se a>0 allora il grafico cresce al \
crescere delle X, se a<0 il grafico decresce al decrescere delle X"]], 
    Appearance -> Automatic, Evaluator -> Automatic, Method -> "Preemptive"]},
  
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.7352987843635964`*^9, 3.735298815742391*^9, 3.735298930566959*^9, {
   3.735298993968585*^9, 3.7352990226242237`*^9}, 3.7352990532169743`*^9, 
   3.735300115027706*^9, 3.7353865182390165`*^9, 3.7353866032868805`*^9, 
   3.735387131477092*^9, 3.735388105412798*^9, 3.735461560513155*^9, 
   3.7354616792057204`*^9, 3.735461885314*^9, 3.7355394372420545`*^9, 
   3.7355395547058477`*^9, 3.7355413451760473`*^9, 3.7355416598489885`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Caso particolare  a = 0", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345073172201977`*^9, 3.7345073271699533`*^9}, {3.7352960962278438`*^9, 
   3.7352961040232897`*^9}, {3.735297656163067*^9, 3.735297656586091*^9}, {
   3.735298605131345*^9, 3.735298606005395*^9}, {3.7352991021097703`*^9, 
   3.7352991049159307`*^9}, {3.7355414442081733`*^9, 3.735541444390576*^9}},
 CellTags->"E3_CP_A0"],

Cell["Hai posto attenzione a cosa succede quando a=0?", "Text",
 CellChangeTimes->{{3.7352991332625523`*^9, 3.735299134959649*^9}, {
  3.7352991891827507`*^9, 3.7352991986782937`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p6", "=", " ", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Row", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Hyperlink", "[", 
      RowBox[{
       RowBox[{"StatusArea", "[", 
        RowBox[{
         RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
         "\"\<E3_CP_A0\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
         "\"\<E3_CP_A0\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<No\>\"", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"p6", "\[Equal]", " ", "0"}], ",", 
         RowBox[{
          RowBox[{"p6", "=", "1"}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"0", "*", 
               SuperscriptBox["x", "3"]}], " ", "+", " ", 
              RowBox[{"4", "*", 
               SuperscriptBox["x", "2"]}], "+", " ", "x", " ", "+", " ", 
              "1"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"-", "5"}], ",", 
               RowBox[{"+", "5"}]}], "}"}], ",", " ", 
             RowBox[{
             "PlotLegends", "\[Rule]", " ", 
              "\"\< 0*\!\(\*SuperscriptBox[\(x\), \(3\)]\) + \
4*\!\(\*SuperscriptBox[\(x\), \(2\)]\)+ x + 1\>\""}]}], "]"}], "]"}], ";", 
          " ", 
          RowBox[{
          "Print", "[", 
           "\"\<come puoi vedere il grafico non e\[CloseCurlyQuote] piu\
\[CloseCurlyQuote] una cubica ma degenera in una parabola\>\"", "]"}]}]}], 
        "]"}]}], "]"}]}], "}"}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.735299209483912*^9, 3.7352993043703394`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7352992966828995`*^9, 3.7352993080765514`*^9}, 
   3.7353001217460904`*^9, 3.7353865182750187`*^9, 3.735386603342884*^9, 
   3.735387131518094*^9, 3.7353881054467993`*^9, 3.735461560559955*^9, 
   3.7354616792525206`*^9, 3.7354618853452005`*^9, 3.7355394372732544`*^9, 
   3.7355395547526484`*^9, 3.735541345222847*^9, 3.7355416598801885`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
          Automatic, Method -> "Preemptive"], StatusArea[#, "E3_CP_A0"]& , 
         TagBoxNote -> "E3_CP_A0"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
           Automatic, Method -> "Preemptive"], StatusArea[#, "E3_CP_A0"]& , 
          TagBoxNote -> "E3_CP_A0"], {"HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["7nkfc_shm", 3, 1]], 33], "E3_CP_A0"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["7nkfc_shm", 3, 1]], 33], "E3_CP_A0"}, "Hyperlink"]& ],
   "\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> 
    If[$CellContext`p6 == 0, $CellContext`p6 = 1; Print[
        Plot[
        0 $CellContext`x^3 + 4 $CellContext`x^2 + $CellContext`x + 
         1, {$CellContext`x, -5, 
          Plus[5]}, PlotLegends -> 
         " 0*\!\(\*SuperscriptBox[\(x\), \(3\)]\) + \
4*\!\(\*SuperscriptBox[\(x\), \(2\)]\)+ x + 1"]]; 
      Print["come puoi vedere il grafico non e\[CloseCurlyQuote] piu\
\[CloseCurlyQuote] una cubica ma degenera in una parabola"]], Appearance -> 
    Automatic, Evaluator -> Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.7352992966828995`*^9, 3.7352993080765514`*^9}, 
   3.7353001217460904`*^9, 3.7353865182750187`*^9, 3.735386603342884*^9, 
   3.735387131518094*^9, 3.7353881054467993`*^9, 3.735461560559955*^9, 
   3.7354616792525206`*^9, 3.7354618853452005`*^9, 3.7355394372732544`*^9, 
   3.7355395547526484`*^9, 3.735541345222847*^9, 3.735541659895788*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione degli zeri", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345073172201977`*^9, 3.7345073271699533`*^9}, {3.7352960962278438`*^9, 
   3.7352961040232897`*^9}, {3.735297656163067*^9, 3.735297656586091*^9}, {
   3.735298605131345*^9, 3.735298606005395*^9}, {3.7352991021097703`*^9, 
   3.7352991049159307`*^9}, {3.73529939373045*^9, 3.735299400526839*^9}},
 CellTags->"E3_CP_0"],

Cell["\<\
Per capire quante volte la curva interseca l\[CloseCurlyQuote]asse X e quindi \
quanti rami diversi di curva possediamo dobbiamo scoprire quanti risultati ha \
l\[CloseCurlyQuote]equazione 0=ax3+bx2+cx+d, dobbiamo considerare anche la \
molteplicit\[AGrave] con cui compaiono

\
\>", "Text",
 CellChangeTimes->{{3.735299437486953*^9, 3.7352994403661175`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"plotWithZoomButtons", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], " ", "+", 
      SuperscriptBox["x", "2"], "+", " ", "x", "+", " ", "1"}], ",", " ", 
     RowBox[{"Symbol", "[", "\"\<x\>\"", "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plotWithZoomButtons", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], " ", "+", 
      SuperscriptBox["x", "2"]}], ",", " ", 
     RowBox[{"Symbol", "[", "\"\<x\>\"", "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plotWithZoomButtons", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], " ", "+", 
      RowBox[{"3", "*", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"3", "*", "x"}], "+", " ", "1"}], ",", " ", 
     RowBox[{"Symbol", "[", "\"\<x\>\"", "]"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7352994786383066`*^9, 3.73529949320214*^9}, {
  3.735299527222086*^9, 3.7352995923838124`*^9}, {3.735538450346656*^9, 
  3.735538516467458*^9}, {3.7355390514387894`*^9, 3.735539070094082*^9}, {
  3.7355391165033712`*^9, 3.7355392465242815`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"Zoom sugli zeri:\"",TemplateBox[{
         ButtonBox["1", ButtonFunction :> (MClib`Private`l$8458 = Part[
              Solve[
               Reduce[
                And[
                1 + $CellContext`x + $CellContext`x^2 + $CellContext`x^3 == 
                 0, -11 < $CellContext`x < 
                 11], $CellContext`x], $CellContext`x], 1]; 
           MClib`Private`j$8458 = 1; 
           MClib`Private`y$8458 = ReplaceAll[$CellContext`x, 
              Part[MClib`Private`l$8458, 1]]; Print[MClib`Private`y$8458]), 
          Appearance -> Automatic, Evaluator -> Automatic, Method -> 
          "Preemptive"]}, "RowDefault"]},
      "RowDefault"]},
    {
     TemplateBox[{DynamicBox[
        ToBoxes[
         Plot[
         1 + $CellContext`x + $CellContext`x^2 + $CellContext`x^3, \
{$CellContext`x, MClib`Private`y$8458 - MClib`Private`j$8458, 
           MClib`Private`y$8458 + MClib`Private`j$8458}, ImageSize -> Medium, 
          PlotLabels -> 
          1 + $CellContext`x + $CellContext`x^2 + $CellContext`x^3], 
         StandardForm]]},
      "RowDefault"]},
    {
     ButtonBox["\<\"Reset Zoom\"\>",
      Appearance->Automatic,
      ButtonFunction:>(MClib`Private`j$8458 = 5; MClib`Private`y$8458 = 0),
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.7352995001415367`*^9, 3.7352995565257616`*^9, 3.735299595258977*^9, 
   3.7353865183220215`*^9, 3.7353866034008875`*^9, 3.7353871315670967`*^9, 
   3.735388105489802*^9, 3.7354615606223555`*^9, 3.735461679347121*^9, 
   3.735461885392*^9, 3.735538517853464*^9, 3.7355390735731125`*^9, 
   3.735539192696169*^9, {3.7355394373200545`*^9, 3.7355394388458614`*^9}, 
   3.7355394808406615`*^9, 3.7355395547838483`*^9, 3.7355413452540474`*^9, 
   3.7355416599269886`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"Zoom sugli zeri:\"",TemplateBox[{
         ButtonBox["1", ButtonFunction :> (MClib`Private`l$8462 = Part[
              Solve[
               Reduce[
                
                And[$CellContext`x^2 + $CellContext`x^3 == 
                 0, -11 < $CellContext`x < 
                 11], $CellContext`x], $CellContext`x], 1]; 
           MClib`Private`j$8462 = 1; 
           MClib`Private`y$8462 = ReplaceAll[$CellContext`x, 
              Part[MClib`Private`l$8462, 1]]; Print[MClib`Private`y$8462]), 
          Appearance -> Automatic, Evaluator -> Automatic, Method -> 
          "Preemptive"], 
         ButtonBox["2", ButtonFunction :> (MClib`Private`l$8462 = Part[
              Solve[
               Reduce[
                
                And[$CellContext`x^2 + $CellContext`x^3 == 
                 0, -11 < $CellContext`x < 
                 11], $CellContext`x], $CellContext`x], 2]; 
           MClib`Private`j$8462 = 1; 
           MClib`Private`y$8462 = ReplaceAll[$CellContext`x, 
              Part[MClib`Private`l$8462, 1]]; Print[MClib`Private`y$8462]), 
          Appearance -> Automatic, Evaluator -> Automatic, Method -> 
          "Preemptive"]}, "RowDefault"]},
      "RowDefault"]},
    {
     TemplateBox[{DynamicBox[
        ToBoxes[
         Plot[$CellContext`x^2 + $CellContext`x^3, {$CellContext`x, 
           MClib`Private`y$8462 - MClib`Private`j$8462, MClib`Private`y$8462 + 
           MClib`Private`j$8462}, ImageSize -> Medium, 
          PlotLabels -> $CellContext`x^2 + $CellContext`x^3], StandardForm]]},
      
      "RowDefault"]},
    {
     ButtonBox["\<\"Reset Zoom\"\>",
      Appearance->Automatic,
      ButtonFunction:>(MClib`Private`j$8462 = 5; MClib`Private`y$8462 = 0),
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.7352995001415367`*^9, 3.7352995565257616`*^9, 3.735299595258977*^9, 
   3.7353865183220215`*^9, 3.7353866034008875`*^9, 3.7353871315670967`*^9, 
   3.735388105489802*^9, 3.7354615606223555`*^9, 3.735461679347121*^9, 
   3.735461885392*^9, 3.735538517853464*^9, 3.7355390735731125`*^9, 
   3.735539192696169*^9, {3.7355394373200545`*^9, 3.7355394388458614`*^9}, 
   3.7355394808406615`*^9, 3.7355395547838483`*^9, 3.7355413452540474`*^9, 
   3.735541660274189*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"Zoom sugli zeri:\"",TemplateBox[{
         ButtonBox["1", ButtonFunction :> (MClib`Private`l$8466 = Part[
              Solve[
               Reduce[
                And[
                1 + 3 $CellContext`x + 3 $CellContext`x^2 + $CellContext`x^3 == 
                 0, -11 < $CellContext`x < 
                 11], $CellContext`x], $CellContext`x], 1]; 
           MClib`Private`j$8466 = 1; 
           MClib`Private`y$8466 = ReplaceAll[$CellContext`x, 
              Part[MClib`Private`l$8466, 1]]; Print[MClib`Private`y$8466]), 
          Appearance -> Automatic, Evaluator -> Automatic, Method -> 
          "Preemptive"]}, "RowDefault"]},
      "RowDefault"]},
    {
     TemplateBox[{DynamicBox[
        ToBoxes[
         Plot[
         1 + 3 $CellContext`x + 
          3 $CellContext`x^2 + $CellContext`x^3, {$CellContext`x, 
           MClib`Private`y$8466 - MClib`Private`j$8466, MClib`Private`y$8466 + 
           MClib`Private`j$8466}, ImageSize -> Medium, PlotLabels -> 
          1 + 3 $CellContext`x + 3 $CellContext`x^2 + $CellContext`x^3], 
         StandardForm]]},
      "RowDefault"]},
    {
     ButtonBox["\<\"Reset Zoom\"\>",
      Appearance->Automatic,
      ButtonFunction:>(MClib`Private`j$8466 = 5; MClib`Private`y$8466 = 0),
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.7352995001415367`*^9, 3.7352995565257616`*^9, 3.735299595258977*^9, 
   3.7353865183220215`*^9, 3.7353866034008875`*^9, 3.7353871315670967`*^9, 
   3.735388105489802*^9, 3.7354615606223555`*^9, 3.735461679347121*^9, 
   3.735461885392*^9, 3.735538517853464*^9, 3.7355390735731125`*^9, 
   3.735539192696169*^9, {3.7355394373200545`*^9, 3.7355394388458614`*^9}, 
   3.7355394808406615`*^9, 3.7355395547838483`*^9, 3.7355413452540474`*^9, 
   3.735541660627994*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Ora tocca a te!", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}},
 CellTags->"TS3"],

Cell["\<\
ora tocca a puoi sperimentare. Inserisci tu le equazioni e osserva come sono \
rappresentate graficamente. Puoi confrontarne contemporaneamente 5.
\
\>", "Text",
 CellChangeTimes->{3.7352997151638355`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"freeEq3", " ", "=", " ", 
  RowBox[{"{", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"currentEq3", "=", "\"\<\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Panel", "[", 
   RowBox[{"Column", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"InputField", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", "currentEq3", "]"}], ",", "String"}], 
          "]"}], ",", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Confronta\>\"", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "freeEq3", "]"}], "<", "5"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"freeEq2", ",", 
               RowBox[{"ToExpression", "[", "currentEq3", "]"}]}], "]"}], ",", 
             RowBox[{
             "MessageDialog", "[", 
              "\"\<Hai gi\[AGrave] inserito 5 grafici, eliminane uno prima di \
aggiungerne uno nuovo!\>\"", "]"}]}], "]"}]}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Dynamic", "[", 
       RowBox[{"Row", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", "=", "i"}], "}"}], ",", 
            RowBox[{"Column", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Plot", "[", 
                RowBox[{
                 RowBox[{"freeEq3", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{"-", "10"}], ",", 
                   RowBox[{"+", "10"}]}], "}"}], ",", 
                 RowBox[{"PlotLabel", "\[Rule]", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"freeEq3", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
                 RowBox[{"ImageSize", "->", "Small"}]}], "]"}], ",", 
               "\"\<\\t\>\"", ",", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<Elimina\>\"", ",", 
                 RowBox[{"freeEq3", "=", 
                  RowBox[{"Delete", "[", 
                   RowBox[{"freeEq3", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{"freeEq3", ",", 
                    RowBox[{"freeEq3", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
                "]"}]}], "}"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "freeEq3", "]"}]}], "}"}]}], "]"}], "]"}], 
       "]"}]}], "}"}], "]"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Drawing", " ", "the", " ", "list", " ", "of", " ", "the", " ", 
     "functions", " ", "that", " ", "the", " ", "user", " ", "want", " ", 
     "to", " ", "compare"}], ",", " ", 
    RowBox[{
     RowBox[{
     "Delete", " ", "button", " ", "allow", " ", "to", " ", "remove", " ", 
      "that", " ", "expression", " ", "from", " ", "the", " ", "list"}], ";", 
     " ", 
     RowBox[{"TODO", " ", "Insert", " ", "in", " ", "package"}]}]}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.735299743857476*^9, 3.7352997825386887`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.7352998309164557`*^9, 3.735386518637039*^9, 
  3.735386603734906*^9, 3.735387131917117*^9, 3.7353881058988256`*^9, 
  3.735461561102357*^9, 3.735461679773322*^9, 3.735461885722002*^9, 
  3.7355394374602566`*^9, 3.735539555702051*^9, 3.735541345300847*^9, 
  3.7355416610519967`*^9}],

Cell[BoxData["\<\"\"\>"], "Output",
 CellChangeTimes->{3.7352998309164557`*^9, 3.735386518637039*^9, 
  3.735386603734906*^9, 3.735387131917117*^9, 3.7353881058988256`*^9, 
  3.735461561102357*^9, 3.735461679773322*^9, 3.735461885722002*^9, 
  3.7355394374602566`*^9, 3.735539555702051*^9, 3.735541345300847*^9, 
  3.735541661067597*^9}],

Cell[BoxData[
 PanelBox[
  TagBox[GridBox[{
     {
      TemplateBox[{InputFieldBox[
         Dynamic[$CellContext`currentEq3], String],ButtonBox[
        "\"Confronta\"", ButtonFunction :> 
         If[Length[$CellContext`freeEq3] < 5, 
           AppendTo[$CellContext`freeEq2, 
            ToExpression[$CellContext`currentEq3]], 
           MessageDialog[
           "Hai gi\[AGrave] inserito 5 grafici, eliminane uno prima di \
aggiungerne uno nuovo!"]], Appearance -> Automatic, Evaluator -> Automatic, 
         Method -> "Preemptive"]},
       "RowDefault"]},
     {
      DynamicBox[ToBoxes[
        Row[
         Table[
          With[{$CellContext`i = $CellContext`i}, 
           Column[{
             Plot[
              
              Part[$CellContext`freeEq3, $CellContext`i], {$CellContext`x, \
-10, 
               Plus[10]}, PlotLabel -> ToString[
                Part[$CellContext`freeEq3, $CellContext`i]], ImageSize -> 
              Small], "\t", 
             Button[
             "Elimina", $CellContext`freeEq3 = Delete[$CellContext`freeEq3, 
                Position[$CellContext`freeEq3, 
                 
                 Part[$CellContext`freeEq3, $CellContext`i]]]]}]], \
{$CellContext`i, 
           Length[$CellContext`freeEq3]}]], StandardForm],
       ImageSizeCache->{4., {0., 0.}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"]]], "Output",
 CellChangeTimes->{3.7352998309164557`*^9, 3.735386518637039*^9, 
  3.735386603734906*^9, 3.735387131917117*^9, 3.7353881058988256`*^9, 
  3.735461561102357*^9, 3.735461679773322*^9, 3.735461885722002*^9, 
  3.7355394374602566`*^9, 3.735539555702051*^9, 3.735541345300847*^9, 
  3.735541661067597*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{
     RowBox[{"StatusArea", "[", 
      RowBox[{
       RowBox[{
       "Button", "[", "\"\<Ti senti pronto per gli esercizi\>\"", "]"}], ",", 
       " ", "\"\<ES_G3\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<ES_G3\>\""}], 
      "}"}]}], "]"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.735299837163813*^9, 3.7352998417220736`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Ti senti pronto per gli esercizi\"", ButtonFunction :> {}, 
          Evaluator -> None, Appearance -> Automatic, Method -> "Preemptive"],
          StatusArea[#, "ES_G3"]& , TagBoxNote -> "ES_G3"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Ti senti pronto per gli esercizi\"", ButtonFunction :> {}, 
           Evaluator -> None, Appearance -> Automatic, Method -> 
           "Preemptive"], StatusArea[#, "ES_G3"]& , TagBoxNote -> "ES_G3"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["7nkfc_shm", 3, 1]], 33], "ES_G3"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["7nkfc_shm", 3, 1]], 33], "ES_G3"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.735299928166018*^9, 3.735386518668041*^9, 
  3.7353866038159113`*^9, 3.7353871319511185`*^9, 3.7353881059378276`*^9, 
  3.735461561133557*^9, 3.7354616798045216`*^9, 3.7354618857552023`*^9, 
  3.735539437491457*^9, 3.735539555748852*^9, 3.7355413453320475`*^9, 
  3.735541661098797*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Esercizi Tipologia 1", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}, {3.7352999844192357`*^9, 3.735299988081445*^9}, {
   3.7353291428609905`*^9, 3.735329149030343*^9}},
 CellTags->"ES_G3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exKindAPrinter", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.735329199620237*^9, 3.735329199776246*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            StyleBox[
            "\"A quale funzione corrisponde la seguente retta?\"", FontWeight -> 
             Bold, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TemplateBox[{"\"Zoom sugli zeri:\"", 
                  TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$9778 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 5, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$9778 = 1; 
                    MClib`Private`y$9778 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9778, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                   "RowDefault"]}, "RowDefault"]}, {
                TemplateBox[{
                  DynamicBox[
                   ToBoxes[
                    Plot[
                    Part[
                    MClib`teacherEQ, 5, 1], {$CellContext`x, 
                    MClib`Private`y$9778 - MClib`Private`j$9778, 
                    MClib`Private`y$9778 + MClib`Private`j$9778}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                ButtonBox[
                "\"Reset Zoom\"", 
                 ButtonFunction :> (MClib`Private`j$9778 = 5; 
                  MClib`Private`y$9778 = 0), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]}, {
            DynamicBox[
             ToBoxes[
              RadioButtonBar[
               Dynamic[
                Part[MClib`userAnswer, 5, 1]], 
               Part[MClib`exercises, 5, 1], Enabled -> Dynamic[
                 Part[MClib`enableAnswer, 5, 1]]], StandardForm]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            StyleBox[
            "\"A quale funzione corrisponde la seguente retta?\"", FontWeight -> 
             Bold, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TemplateBox[{"\"Zoom sugli zeri:\"", 
                  TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$9779 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 5, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$9779 = 1; 
                    MClib`Private`y$9779 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9779, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$9779 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 5, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$9779 = 1; 
                    MClib`Private`y$9779 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9779, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "3", ButtonFunction :> (MClib`Private`l$9779 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 5, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 3]; 
                    MClib`Private`j$9779 = 1; 
                    MClib`Private`y$9779 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9779, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                   "RowDefault"]}, "RowDefault"]}, {
                TemplateBox[{
                  DynamicBox[
                   ToBoxes[
                    Plot[
                    Part[
                    MClib`teacherEQ, 5, 2], {$CellContext`x, 
                    MClib`Private`y$9779 - MClib`Private`j$9779, 
                    MClib`Private`y$9779 + MClib`Private`j$9779}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                ButtonBox[
                "\"Reset Zoom\"", 
                 ButtonFunction :> (MClib`Private`j$9779 = 5; 
                  MClib`Private`y$9779 = 0), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]}, {
            DynamicBox[
             ToBoxes[
              RadioButtonBar[
               Dynamic[
                Part[MClib`userAnswer, 5, 2]], 
               Part[MClib`exercises, 5, 2], Enabled -> Dynamic[
                 Part[MClib`enableAnswer, 5, 2]]], StandardForm]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            StyleBox[
            "\"A quale funzione corrisponde la seguente retta?\"", FontWeight -> 
             Bold, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TemplateBox[{"\"Zoom sugli zeri:\"", 
                  TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$9780 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 5, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$9780 = 1; 
                    MClib`Private`y$9780 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9780, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$9780 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 5, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$9780 = 1; 
                    MClib`Private`y$9780 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9780, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "3", ButtonFunction :> (MClib`Private`l$9780 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 5, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 3]; 
                    MClib`Private`j$9780 = 1; 
                    MClib`Private`y$9780 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9780, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                   "RowDefault"]}, "RowDefault"]}, {
                TemplateBox[{
                  DynamicBox[
                   ToBoxes[
                    Plot[
                    Part[
                    MClib`teacherEQ, 5, 3], {$CellContext`x, 
                    MClib`Private`y$9780 - MClib`Private`j$9780, 
                    MClib`Private`y$9780 + MClib`Private`j$9780}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                ButtonBox[
                "\"Reset Zoom\"", 
                 ButtonFunction :> (MClib`Private`j$9780 = 5; 
                  MClib`Private`y$9780 = 0), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]}, {
            DynamicBox[
             ToBoxes[
              RadioButtonBar[
               Dynamic[
                Part[MClib`userAnswer, 5, 3]], 
               Part[MClib`exercises, 5, 3], Enabled -> Dynamic[
                 Part[MClib`enableAnswer, 5, 3]]], StandardForm]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.735329202511402*^9, 3.735386518777047*^9, 
  3.735386603869914*^9, 3.7353871319941216`*^9, 3.73538810597983*^9, 
  3.735461561320757*^9, 3.735461679866922*^9, 3.7354618857864027`*^9, 
  3.7355394376100583`*^9, 3.7355395557976513`*^9, 3.735541345370248*^9, 
  3.7355416611455965`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"clicked3", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", 
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Verifica\>\"", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"userAnswer", "[", 
         RowBox[{"[", 
          RowBox[{"5", ",", "1"}], "]"}], "]"}], " ", "===", "   ", "0"}], 
       "  ", "||", " ", 
       RowBox[{
        RowBox[{"userAnswer", "[", 
         RowBox[{"[", 
          RowBox[{"5", ",", "2"}], "]"}], "]"}], " ", "===", " ", "0"}], " ", 
       "||", " ", 
       RowBox[{
        RowBox[{"userAnswer", "[", 
         RowBox[{"[", 
          RowBox[{"5", ",", "3"}], "]"}], "]"}], " ", "===", "  ", "0"}]}], 
      ",", "  ", 
      RowBox[{
      "MessageDialog", "[", 
       "\"\<Rispondi a tutte le domande prima di verificare\>\"", "]"}], " ", 
      ",", " ", 
      RowBox[{
       RowBox[{"checkAnswer", "[", "5", "]"}], ";", " ", 
       RowBox[{"clicked3", " ", "=", "1"}]}]}], "]"}]}], " ", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"clicked3", "===", " ", "1"}], ",", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Vai alla prossima sezione\>\"", "]"}], 
        ",", "\"\<ES_G3_B\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
        "\"\<ES_G3_B\>\""}], "}"}]}], "]"}], ",", " ", 
    "\"\<Verifica la risposta prima di passare alla prossima sezione\>\""}], 
   "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.735329241250618*^9, 3.7353292668330812`*^9}, {
  3.735329302842141*^9, 3.7353293072563934`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Button["Verifica", 
    If[
     Or[Part[MClib`userAnswer, 5, 1] === 0, Part[MClib`userAnswer, 5, 2] === 
      0, Part[MClib`userAnswer, 5, 3] === 0], 
     MessageDialog["Rispondi a tutte le domande prima di verificare"], 
     MClib`checkAnswer[5]; $CellContext`clicked3 = 1]], StandardForm],
  ImageSizeCache->{49., {8., 17.}}]], "Output",
 CellChangeTimes->{3.7353293151958475`*^9, 3.735386518931056*^9, 
  3.735386604030924*^9, 3.7353871321441298`*^9, 3.7353881061288385`*^9, 
  3.735461561586958*^9, 3.735461680009322*^9, 3.7354618859580026`*^9, 
  3.7355394378596587`*^9, 3.7355395559858522`*^9, 3.7355413454044485`*^9, 
  3.735541661379597*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[$CellContext`clicked3 === 1, 
    Hyperlink[
     StatusArea[
      Button["Vai alla prossima sezione"], "ES_G3_B"], {
      EvaluationNotebook[], "ES_G3_B"}], 
    "Verifica la risposta prima di passare alla prossima sezione"], 
   StandardForm],
  ImageSizeCache->{413., {3., 9.}}]], "Output",
 CellChangeTimes->{3.7353293151958475`*^9, 3.735386518931056*^9, 
  3.735386604030924*^9, 3.7353871321441298`*^9, 3.7353881061288385`*^9, 
  3.735461561586958*^9, 3.735461680009322*^9, 3.7354618859580026`*^9, 
  3.7355394378596587`*^9, 3.7355395559858522`*^9, 3.7355413454044485`*^9, 
  3.735541661379597*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Esercizi Tipologia 2", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}, {3.7352999844192357`*^9, 3.735299988081445*^9}, {
   3.7353291428609905`*^9, 3.7353291707335844`*^9}},
 CellTags->"ES_G3_B"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exKindBPrinter", "[", "6", "]"}]], "Input",
 CellChangeTimes->{{3.7353293789474936`*^9, 3.7353293790254984`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            DynamicBox[
             ToBoxes[
              Style[
               StringJoin[
                ToString[
                 Part[MClib`teacherEQ, 6, 1]], " \t Qual e' il suo grafico?"],
                FontWeight -> Bold], StandardForm]]}, {
            TemplateBox[{
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 1]], 
                   Part[MClib`exercises, 6, 1, 1], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$9910 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 1, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$9910 = 1; 
                    MClib`Private`y$9910 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9910, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 1, 1], {$CellContext`x, 
                    MClib`Private`y$9910 - MClib`Private`j$9910, 
                    MClib`Private`y$9910 + MClib`Private`j$9910}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$9910 = 5; 
                    MClib`Private`y$9910 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 1]], 
                   Part[MClib`exercises, 6, 1, 2], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$9911 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 1, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$9911 = 1; 
                    MClib`Private`y$9911 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9911, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 1, 2], {$CellContext`x, 
                    MClib`Private`y$9911 - MClib`Private`j$9911, 
                    MClib`Private`y$9911 + MClib`Private`j$9911}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$9911 = 5; 
                    MClib`Private`y$9911 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 1]], 
                   Part[MClib`exercises, 6, 1, 3], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$9912 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 1, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$9912 = 1; 
                    MClib`Private`y$9912 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9912, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 1, 3], {$CellContext`x, 
                    MClib`Private`y$9912 - MClib`Private`j$9912, 
                    MClib`Private`y$9912 + MClib`Private`j$9912}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$9912 = 5; 
                    MClib`Private`y$9912 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 1]], 
                   Part[MClib`exercises, 6, 1, 4], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$9913 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 1, 4] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$9913 = 1; 
                    MClib`Private`y$9913 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9913, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 1, 4], {$CellContext`x, 
                    MClib`Private`y$9913 - MClib`Private`j$9913, 
                    MClib`Private`y$9913 + MClib`Private`j$9913}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$9913 = 5; 
                    MClib`Private`y$9913 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            DynamicBox[
             ToBoxes[
              Style[
               StringJoin[
                ToString[
                 Part[MClib`teacherEQ, 6, 2]], " \t Qual e' il suo grafico?"],
                FontWeight -> Bold], StandardForm]]}, {
            TemplateBox[{
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 2]], 
                   Part[MClib`exercises, 6, 2, 1], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$9914 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 2, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$9914 = 1; 
                    MClib`Private`y$9914 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9914, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$9914 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 2, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$9914 = 1; 
                    MClib`Private`y$9914 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9914, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "3", ButtonFunction :> (MClib`Private`l$9914 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 2, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 3]; 
                    MClib`Private`j$9914 = 1; 
                    MClib`Private`y$9914 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9914, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 2, 1], {$CellContext`x, 
                    MClib`Private`y$9914 - MClib`Private`j$9914, 
                    MClib`Private`y$9914 + MClib`Private`j$9914}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$9914 = 5; 
                    MClib`Private`y$9914 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 2]], 
                   Part[MClib`exercises, 6, 2, 2], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$9915 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 2, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$9915 = 1; 
                    MClib`Private`y$9915 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9915, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 2, 2], {$CellContext`x, 
                    MClib`Private`y$9915 - MClib`Private`j$9915, 
                    MClib`Private`y$9915 + MClib`Private`j$9915}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$9915 = 5; 
                    MClib`Private`y$9915 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 2]], 
                   Part[MClib`exercises, 6, 2, 3], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$9916 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 2, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$9916 = 1; 
                    MClib`Private`y$9916 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9916, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[MClib`exercises, 6, 2, 3], {$CellContext`x, 
                    MClib`Private`y$9916 - MClib`Private`j$9916, 
                    MClib`Private`y$9916 + MClib`Private`j$9916}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$9916 = 5; 
                    MClib`Private`y$9916 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 2]], 
                   Part[MClib`exercises, 6, 2, 4], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$9917 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 2, 4] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$9917 = 1; 
                    MClib`Private`y$9917 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9917, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 2, 4], {$CellContext`x, 
                    MClib`Private`y$9917 - MClib`Private`j$9917, 
                    MClib`Private`y$9917 + MClib`Private`j$9917}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$9917 = 5; 
                    MClib`Private`y$9917 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            DynamicBox[
             ToBoxes[
              Style[
               StringJoin[
                ToString[
                 Part[MClib`teacherEQ, 6, 3]], " \t Qual e' il suo grafico?"],
                FontWeight -> Bold], StandardForm]]}, {
            TemplateBox[{
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 3]], 
                   Part[MClib`exercises, 6, 3, 1], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$9918 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 3, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$9918 = 1; 
                    MClib`Private`y$9918 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9918, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 3, 1], {$CellContext`x, 
                    MClib`Private`y$9918 - MClib`Private`j$9918, 
                    MClib`Private`y$9918 + MClib`Private`j$9918}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$9918 = 5; 
                    MClib`Private`y$9918 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 3]], 
                   Part[MClib`exercises, 6, 3, 2], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$9919 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 3, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$9919 = 1; 
                    MClib`Private`y$9919 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9919, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 3, 2], {$CellContext`x, 
                    MClib`Private`y$9919 - MClib`Private`j$9919, 
                    MClib`Private`y$9919 + MClib`Private`j$9919}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$9919 = 5; 
                    MClib`Private`y$9919 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 3]], 
                   Part[MClib`exercises, 6, 3, 3], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$9920 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 3, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$9920 = 1; 
                    MClib`Private`y$9920 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9920, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$9920 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 3, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$9920 = 1; 
                    MClib`Private`y$9920 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9920, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "3", ButtonFunction :> (MClib`Private`l$9920 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 3, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 3]; 
                    MClib`Private`j$9920 = 1; 
                    MClib`Private`y$9920 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9920, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 3, 3], {$CellContext`x, 
                    MClib`Private`y$9920 - MClib`Private`j$9920, 
                    MClib`Private`y$9920 + MClib`Private`j$9920}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$9920 = 5; 
                    MClib`Private`y$9920 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 3]], 
                   Part[MClib`exercises, 6, 3, 4], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$9921 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 3, 4] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$9921 = 1; 
                    MClib`Private`y$9921 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$9921, 1]]), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 3, 4], {$CellContext`x, 
                    MClib`Private`y$9921 - MClib`Private`j$9921, 
                    MClib`Private`y$9921 + MClib`Private`j$9921}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$9921 = 5; 
                    MClib`Private`y$9921 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7353293825016975`*^9, 3.7353865190250616`*^9, 
  3.735386604110928*^9, 3.7353871322101336`*^9, 3.735388106208843*^9, 
  3.735461561727358*^9, 3.7354616800717225`*^9, 3.7354618860370026`*^9, 
  3.735539437987459*^9, 3.7355395560794525`*^9, 3.7355413454668484`*^9, 
  3.735541661458597*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"clicked3B", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", 
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Verifica\>\"", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"userAnswer", "[", 
         RowBox[{"[", 
          RowBox[{"6", ",", "1"}], "]"}], "]"}], " ", "===", "   ", "0"}], 
       "  ", "||", " ", 
       RowBox[{
        RowBox[{"userAnswer", "[", 
         RowBox[{"[", 
          RowBox[{"6", ",", "2"}], "]"}], "]"}], " ", "===", " ", "0"}], " ", 
       "||", " ", 
       RowBox[{
        RowBox[{"userAnswer", "[", 
         RowBox[{"[", 
          RowBox[{"6", ",", "3"}], "]"}], "]"}], " ", "===", "  ", "0"}]}], 
      ",", "  ", 
      RowBox[{
      "MessageDialog", "[", 
       "\"\<Rispondi a tutte le domande prima di verificare\>\"", "]"}], " ", 
      ",", " ", 
      RowBox[{
       RowBox[{"checkAnswer", "[", "4", "]"}], ";", " ", 
       RowBox[{"clicked3B", " ", "=", "1"}]}]}], "]"}]}], " ", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"clicked3B", "===", " ", "1"}], ",", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Vai alla prossima sezione\>\"", "]"}], 
        ",", "\"\<RS_G3\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<RS_G3\>\""}],
        "}"}]}], "]"}], ",", " ", 
    "\"\<Verifica la risposta prima di passare alla prossima sezione\>\""}], 
   "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.73532941682066*^9, 3.7353294412680583`*^9}, {
  3.735329493700057*^9, 3.7353294938030634`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Button["Verifica", 
    If[
     Or[Part[MClib`userAnswer, 6, 1] === 0, Part[MClib`userAnswer, 6, 2] === 
      0, Part[MClib`userAnswer, 6, 3] === 0], 
     MessageDialog["Rispondi a tutte le domande prima di verificare"], 
     MClib`checkAnswer[4]; $CellContext`clicked3B = 1]], StandardForm],
  ImageSizeCache->{49., {8., 17.}}]], "Output",
 CellChangeTimes->{3.7353294454202957`*^9, 3.735329497363267*^9, 
  3.73538651952509*^9, 3.7353866046139565`*^9, 3.735387132700162*^9, 
  3.735388106698871*^9, 3.7354615622743587`*^9, 3.7354616805905237`*^9, 
  3.735461886505004*^9, 3.7355394386274614`*^9, 3.735539556629854*^9, 
  3.7355413455780487`*^9, 3.735541662206403*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[$CellContext`clicked3B === 1, 
    Hyperlink[
     StatusArea[
      Button["Vai alla prossima sezione"], "RS_G3"], {
      EvaluationNotebook[], "RS_G3"}], 
    "Verifica la risposta prima di passare alla prossima sezione"], 
   StandardForm],
  ImageSizeCache->{413., {3., 9.}}]], "Output",
 CellChangeTimes->{3.7353294454202957`*^9, 3.735329497363267*^9, 
  3.73538651952509*^9, 3.7353866046139565`*^9, 3.735387132700162*^9, 
  3.735388106698871*^9, 3.7354615622743587`*^9, 3.7354616805905237`*^9, 
  3.735461886505004*^9, 3.7355394386274614`*^9, 3.735539556629854*^9, 
  3.7355413455780487`*^9, 3.735541662206403*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Risultati", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}, {3.7353000069875264`*^9, 3.7353000084746113`*^9}},
 CellTags->"RS_G3"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7353196821399794`*^9, 3.7353196893273907`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"correctAnswerG3", " ", "=", " ", 
  RowBox[{
  "correctCounter", " ", "-", " ", "correctAnswerG1", " ", "-", " ", 
   "correctAnswerG2", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"correct", " ", "Answer", " ", "total"}], " ", "-", 
     RowBox[{"g1", " ", "g2"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.735329518308465*^9, 3.735329545576024*^9}, {
  3.735462186975956*^9, 3.7354621998079853`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7354622342438793`*^9, 3.735539438658661*^9, 
  3.7355395567078543`*^9, 3.7355413456268487`*^9, 3.7355416622552032`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"correctAnswerG3", "  ", "<", " ", "4"}], ",", " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<Su 6 domande hai risposto correttamente a ``.\>\"", ",", 
      "correctAnswerG3"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{
    "Text", "[", 
     "\"\<volendo puoi proseguire ma sarebbe meglio ripassare un po di teoria \
e poi riprovare gli esercizi\>\"", "]"}]}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<Su 6 domande hai risposto correttamente a ``.\>\"", ",", 
      "correctAnswerG3"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{
    "Text", "[", 
     "\"\<hai compreso bene l\[CloseCurlyQuote]argomento ora puoi proseguire, \
ma se hai ancora qualche dubbio puoi comunque tornare indietro e riguardare \
le equazioni di primo grado\>\"", "]"}]}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Text", "[", "\"\<Qualcosa \[EGrave] andato storto!!\>\"", "]"}]}],
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Row", "[", 
   RowBox[{"{", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Torna alla teoria\>\"", "]"}], ",", " ", 
        "\"\<E_G3\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<E_G3\>\""}], 
       "}"}]}], "]"}], "}"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"chiama", " ", "funzione", " ", "reset"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Row", "[", 
   RowBox[{"{", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Torna all' indice\>\"", "]"}], ",", " ", 
        "\"\<Index\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<Index\>\""}],
        "}"}]}], "]"}], "}"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Ricarica Esercizi\>\"", ",", " ", 
   RowBox[{
    RowBox[{"resetGrade", "[", 
     RowBox[{"3", ",", " ", "correctAnswerG1"}], "]"}], ";", " ", 
    RowBox[{"NotebookLocate", "[", "\"\<ES_G3\>\"", "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"StringForm", "[", 
  RowBox[{
  "\"\<Su 18 domande hai risposto correttamente a ``.\>\"", ",", 
   "correctCounter"}], "]"}]}], "Input",
 CellChangeTimes->{{3.735319554744693*^9, 3.735319619769412*^9}, {
  3.735319657953596*^9, 3.735319675360592*^9}, {3.735329571303496*^9, 
  3.7353296088706446`*^9}, {3.7354622232002544`*^9, 3.735462225387659*^9}, {
  3.735490238530573*^9, 3.73549026903448*^9}, {3.7355418413993635`*^9, 
  3.735541871122727*^9}}],

Cell[BoxData[
 RowBox[{
  InterpretationBox["\<\"Su 6 domande hai risposto correttamente a \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\).\"\>",
   StringForm["Su 6 domande hai risposto correttamente a ``.", 0],
   Editable->False], " ", 
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"volendo puoi proseguire ma sarebbe meglio ripassare un po di \
teoria e poi riprovare gli esercizi\"\>", TextForm]], "InlineText"],
   Text["volendo puoi proseguire ma sarebbe meglio ripassare un po di teoria \
e poi riprovare gli esercizi"]]}]], "Output",
 CellChangeTimes->{
  3.735319716256931*^9, 3.7353296167700963`*^9, 3.735386519603094*^9, 
   3.73538660466696*^9, 3.7353871327701654`*^9, 3.7353881067738757`*^9, 
   3.735461562367959*^9, 3.7354616806841235`*^9, 3.7354618865830035`*^9, {
   3.7354622295892696`*^9, 3.735462237507087*^9}, 3.7355394386898613`*^9, 
   3.7355395567390547`*^9, 3.735541345642449*^9, 3.7355416622708035`*^9, {
   3.735541863000281*^9, 3.7355418738331356`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Torna alla teoria\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "E_G3"]& , TagBoxNote -> "E_G3"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Torna alla teoria\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "E_G3"]& , TagBoxNote -> "E_G3"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["7nkfc_shm", 3, 1]], 33], "E_G3"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["7nkfc_shm", 3, 1]], 33], "E_G3"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.735319716256931*^9, 3.7353296167700963`*^9, 3.735386519603094*^9, 
   3.73538660466696*^9, 3.7353871327701654`*^9, 3.7353881067738757`*^9, 
   3.735461562367959*^9, 3.7354616806841235`*^9, 3.7354618865830035`*^9, {
   3.7354622295892696`*^9, 3.735462237507087*^9}, 3.7355394386898613`*^9, 
   3.7355395567390547`*^9, 3.735541345642449*^9, 3.7355416622708035`*^9, {
   3.735541863000281*^9, 3.735541873848736*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Torna all' indice\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "Index"]& , TagBoxNote -> "Index"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Torna all' indice\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "Index"]& , TagBoxNote -> "Index"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["7nkfc_shm", 3, 1]], 33], "Index"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["7nkfc_shm", 3, 1]], 33], "Index"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.735319716256931*^9, 3.7353296167700963`*^9, 3.735386519603094*^9, 
   3.73538660466696*^9, 3.7353871327701654`*^9, 3.7353881067738757`*^9, 
   3.735461562367959*^9, 3.7354616806841235`*^9, 3.7354618865830035`*^9, {
   3.7354622295892696`*^9, 3.735462237507087*^9}, 3.7355394386898613`*^9, 
   3.7355395567390547`*^9, 3.735541345642449*^9, 3.7355416622708035`*^9, {
   3.735541863000281*^9, 3.7355418738799353`*^9}}],

Cell[BoxData[
 ButtonBox["\<\"Ricarica Esercizi\"\>",
  Appearance->Automatic,
  ButtonFunction:>(MClib`resetGrade[3, $CellContext`correctAnswerG1]; 
   NotebookLocate["ES_G3"]),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.735319716256931*^9, 3.7353296167700963`*^9, 3.735386519603094*^9, 
   3.73538660466696*^9, 3.7353871327701654`*^9, 3.7353881067738757`*^9, 
   3.735461562367959*^9, 3.7354616806841235`*^9, 3.7354618865830035`*^9, {
   3.7354622295892696`*^9, 3.735462237507087*^9}, 3.7355394386898613`*^9, 
   3.7355395567390547`*^9, 3.735541345642449*^9, 3.7355416622708035`*^9, {
   3.735541863000281*^9, 3.7355418738799353`*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"Su 18 domande hai risposto correttamente a \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\).\"\>",
  StringForm["Su 18 domande hai risposto correttamente a ``.", 0],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.735319716256931*^9, 3.7353296167700963`*^9, 3.735386519603094*^9, 
   3.73538660466696*^9, 3.7353871327701654`*^9, 3.7353881067738757`*^9, 
   3.735461562367959*^9, 3.7354616806841235`*^9, 3.7354618865830035`*^9, {
   3.7354622295892696`*^9, 3.735462237507087*^9}, 3.7355394386898613`*^9, 
   3.7355395567390547`*^9, 3.735541345642449*^9, 3.7355416622708035`*^9, {
   3.735541863000281*^9, 3.7355418738799353`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1350, 686},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
TaggingRules->{"SlideShow" -> True},
ShowCellTags->True,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 4407, 98, 91, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[155421, 2644, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[168631, 2915, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[181610, 3172, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[184057, 3241, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[193600, 3456, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[200086, 3613, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[205271, 3729, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[210437, 3862, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[213765, 3952, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[216640, 4026, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[221165, 4145, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[232810, 4433, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[250961, 4849, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[283674, 5569, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[295205, 5844, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[310167, 6141, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[315019, 6268, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[319955, 6394, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[324844, 6519, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[329441, 6639, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[334636, 6771, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[339490, 6900, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[348485, 7129, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[359813, 7407, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[395107, 8166, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[405819, 8421, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[423226, 8765, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[428384, 8897, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[433485, 9028, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[438788, 9164, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[444310, 9307, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[449609, 9441, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[455376, 9579, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[460631, 9704, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[469666, 9923, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[478339, 10147, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[492620, 10481, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[526723, 11219, 64, 1, 90, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]},
 "Home"->{
  Cell[5586, 139, 136747, 2250, 205, "Title",
   CellTags->"Home"]},
 "Introduction"->{
  Cell[155510, 2649, 128, 2, 77, "Section",
   CellTags->"Introduction"]},
 "Setup"->{
  Cell[168720, 2920, 169, 3, 77, "Section",
   CellTags->"Setup"]},
 "Index"->{
  Cell[181677, 3175, 248, 4, 57, "Subsection",
   CellTags->"Index"]},
 "E_G1"->{
  Cell[184124, 3244, 213, 3, 60, "Text",
   CellTags->"E_G1"]},
 "AG_C1_G1"->{
  Cell[205360, 3734, 431, 6, 57, "Subsection",
   CellTags->"AG_C1_G1"]},
 "TS1"->{
  Cell[221254, 4150, 522, 8, 57, "Subsection",
   CellTags->"TS1"]},
 "ES_G1"->{
  Cell[232899, 4438, 629, 9, 57, "Subsection",
   CellTags->"ES_G1"]},
 "ES_G1_B"->{
  Cell[251050, 4854, 683, 10, 57, "Subsection",
   CellTags->"ES_G1_B"]},
 "RS1"->{
  Cell[283763, 5574, 116, 2, 77, "Section",
   CellTags->"RS1"]},
 "E_2G"->{
  Cell[295272, 5847, 212, 3, 60, "Text",
   CellTags->"E_2G"]},
 "CG_G2_PC"->{
  Cell[310256, 6146, 427, 6, 57, "Subsection",
   CellTags->"CG_G2_PC"]},
 "E2_CP_C0"->{
  Cell[315108, 6273, 495, 7, 57, "Subsection",
   CellTags->"E2_CP_C0"]},
 "CG_G2_PB"->{
  Cell[320044, 6399, 481, 7, 57, "Subsection",
   CellTags->"CG_G2_PB"]},
 "E2_CP_B0"->{
  Cell[324933, 6524, 478, 7, 57, "Subsection",
   CellTags->"E2_CP_B0"]},
 "E_G2_CA"->{
  Cell[329530, 6644, 528, 7, 57, "Subsection",
   CellTags->"E_G2_CA"]},
 "E2_CP_A0"->{
  Cell[334725, 6776, 645, 13, 82, "Subsection",
   CellTags->"E2_CP_A0"]},
 "TS2"->{
  Cell[339579, 6905, 522, 8, 57, "Subsection",
   CellTags->"TS2"]},
 "ES_G2"->{
  Cell[348574, 7134, 628, 9, 57, "Subsection",
   CellTags->"ES_G2"]},
 "ES_G2_B"->{
  Cell[359902, 7412, 684, 10, 57, "Subsection",
   CellTags->"ES_G2_B"]},
 "RS_G2"->{
  Cell[395196, 8171, 615, 9, 57, "Subsection",
   CellTags->"RS_G2"]},
 "E_G3"->{
  Cell[405886, 8424, 264, 4, 60, "Text",
   CellTags->"E_G3"]},
 "E_G3_CD"->{
  Cell[423315, 8770, 580, 8, 57, "Subsection",
   CellTags->"E_G3_CD"]},
 "E3_CP_D0"->{
  Cell[428473, 8902, 693, 14, 58, "Subsection",
   CellTags->"E3_CP_D0"]},
 "E_G3_CC"->{
  Cell[433574, 9033, 636, 9, 57, "Subsection",
   CellTags->"E_G3_CC"]},
 "E_G3_CB"->{
  Cell[438877, 9169, 756, 13, 81, "Subsection",
   CellTags->"E_G3_CB"]},
 "E_G3_CA"->{
  Cell[444399, 9312, 797, 11, 57, "Subsection",
   CellTags->"E_G3_CA"]},
 "E3_CP_A"->{
  Cell[449698, 9446, 628, 9, 57, "Subsection",
   CellTags->"E3_CP_A"]},
 "E3_CP_A0"->{
  Cell[455465, 9584, 737, 10, 57, "Subsection",
   CellTags->"E3_CP_A0"]},
 "E3_CP_0"->{
  Cell[460720, 9709, 733, 10, 57, "Subsection",
   CellTags->"E3_CP_0"]},
 "TS3"->{
  Cell[469755, 9928, 522, 8, 57, "Subsection",
   CellTags->"TS3"]},
 "ES_G3"->{
  Cell[478428, 10152, 629, 9, 57, "Subsection",
   CellTags->"ES_G3"]},
 "ES_G3_B"->{
  Cell[492709, 10486, 633, 9, 57, "Subsection",
   CellTags->"ES_G3_B"]},
 "RS_G3"->{
  Cell[526812, 11224, 568, 8, 57, "Subsection",
   CellTags->"RS_G3"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 536732, 11460},
 {"Home", 540294, 11539},
 {"Introduction", 540382, 11542},
 {"Setup", 540469, 11545},
 {"Index", 540549, 11548},
 {"E_G1", 540631, 11551},
 {"AG_C1_G1", 540710, 11554},
 {"TS1", 540794, 11557},
 {"ES_G1", 540875, 11560},
 {"ES_G1_B", 540960, 11563},
 {"RS1", 541044, 11566},
 {"E_2G", 541121, 11569},
 {"CG_G2_PC", 541200, 11572},
 {"E2_CP_C0", 541289, 11575},
 {"CG_G2_PB", 541378, 11578},
 {"E2_CP_B0", 541467, 11581},
 {"E_G2_CA", 541555, 11584},
 {"E2_CP_A0", 541643, 11587},
 {"TS2", 541728, 11590},
 {"ES_G2", 541809, 11593},
 {"ES_G2_B", 541894, 11596},
 {"RS_G2", 541980, 11599},
 {"E_G3", 542062, 11602},
 {"E_G3_CD", 542140, 11605},
 {"E3_CP_D0", 542228, 11608},
 {"E_G3_CC", 542317, 11611},
 {"E_G3_CB", 542404, 11614},
 {"E_G3_CA", 542492, 11617},
 {"E3_CP_A", 542580, 11620},
 {"E3_CP_A0", 542668, 11623},
 {"E3_CP_0", 542757, 11626},
 {"TS3", 542841, 11629},
 {"ES_G3", 542922, 11632},
 {"ES_G3_B", 543008, 11635},
 {"RS_G3", 543094, 11638}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4407, 98, 91, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[4990, 122, 571, 13, 69, "Input"],
Cell[CellGroupData[{
Cell[5586, 139, 136747, 2250, 205, "Title",
 CellTags->"Home"],
Cell[142336, 2391, 212, 4, 50, "Subtitle"],
Cell[142551, 2397, 211, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[142787, 2404, 577, 14, 50, "Input"],
Cell[143367, 2420, 11993, 217, 195, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155421, 2644, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[155510, 2649, 128, 2, 77, "Section",
 CellTags->"Introduction"],
Cell[155641, 2653, 113, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[155779, 2658, 110, 1, 29, "Item"],
Cell[155892, 2661, 95, 1, 29, "Item"],
Cell[155990, 2664, 100, 1, 29, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156127, 2670, 347, 10, 30, "Input"],
Cell[156477, 2682, 11919, 216, 195, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[168445, 2904, 19, 0, 64, "Chapter"],
Cell[168467, 2906, 96, 1, 30, "Input"],
Cell[168566, 2909, 16, 0, 30, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[168631, 2915, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[168720, 2920, 169, 3, 77, "Section",
 CellTags->"Setup"],
Cell[168892, 2925, 269, 6, 68, "Text"],
Cell[CellGroupData[{
Cell[169186, 2935, 413, 11, 30, "Input"],
Cell[169602, 2948, 11947, 217, 195, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[181610, 3172, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[181677, 3175, 248, 4, 57, "Subsection",
 CellTags->"Index"],
Cell[CellGroupData[{
Cell[181950, 3183, 219, 4, 28, "Subsubtitle"],
Cell[182172, 3189, 222, 4, 28, "Subsubtitle"],
Cell[182397, 3195, 277, 3, 43, "Subsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182711, 3203, 217, 4, 28, "Subsubtitle"],
Cell[182931, 3209, 271, 5, 28, "Subsubtitle"],
Cell[183205, 3216, 273, 3, 43, "Subsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183515, 3224, 217, 4, 28, "Subsubtitle"],
Cell[183735, 3230, 273, 5, 28, "Subsubtitle"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[184057, 3241, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[184124, 3244, 213, 3, 60, "Text",
 CellTags->"E_G1"],
Cell[CellGroupData[{
Cell[184362, 3251, 175, 2, 43, "Subsection"],
Cell[184540, 3255, 307, 8, 87, "Text"],
Cell[CellGroupData[{
Cell[184872, 3267, 785, 23, 30, "Input"],
Cell[185660, 3292, 7759, 153, 198, "Output"]
}, Open  ]],
Cell[193434, 3448, 117, 2, 30, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193600, 3456, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[193667, 3459, 92, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[193784, 3464, 346, 4, 43, "Subsection"],
Cell[194133, 3470, 243, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[194401, 3481, 1237, 31, 30, "Input"],
Cell[195641, 3514, 2144, 41, 354, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197822, 3560, 1054, 20, 50, "Input"],
Cell[198879, 3582, 1146, 24, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[200086, 3613, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[200175, 3618, 345, 4, 43, "Subsection"],
Cell[200523, 3624, 239, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[200787, 3631, 2767, 56, 69, "Input"],
Cell[203557, 3689, 1653, 33, 42, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[205271, 3729, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[205360, 3734, 431, 6, 57, "Subsection",
 CellTags->"AG_C1_G1"],
Cell[205794, 3742, 220, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[206039, 3750, 707, 20, 30, "Input"],
Cell[206749, 3772, 2014, 39, 350, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208800, 3816, 739, 19, 50, "Input"],
Cell[209542, 3837, 834, 18, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[210437, 3862, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[210526, 3867, 472, 6, 43, "Subsection"],
Cell[211001, 3875, 267, 11, 30, "Text"],
Cell[CellGroupData[{
Cell[211293, 3890, 1311, 33, 69, "Input"],
Cell[212607, 3925, 1000, 17, 42, "Output"]
}, Open  ]],
Cell[213622, 3945, 94, 1, 30, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[213765, 3952, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[213854, 3957, 472, 6, 43, "Subsection"],
Cell[214329, 3965, 117, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[214471, 3970, 1223, 31, 50, "Input"],
Cell[215697, 4003, 882, 16, 42, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[216640, 4026, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[216729, 4031, 554, 13, 44, "Subsection"],
Cell[217286, 4046, 406, 10, 106, "Text"],
Cell[CellGroupData[{
Cell[217717, 4060, 1208, 33, 30, "Input"],
Cell[218928, 4095, 2176, 43, 356, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[221165, 4145, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[221254, 4150, 522, 8, 57, "Subsection",
 CellTags->"TS1"],
Cell[221779, 4160, 208, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[222012, 4168, 601, 12, 30, "Input"],
Cell[222616, 4182, 474, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223127, 4194, 581, 13, 30, "Input"],
Cell[223711, 4209, 460, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224208, 4220, 248, 5, 30, "Input"],
Cell[224459, 4227, 447, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224943, 4239, 3959, 90, 202, "Input"],
Cell[228905, 4331, 1799, 42, 83, "Output"]
}, Open  ]],
Cell[230719, 4376, 91, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[230835, 4381, 508, 14, 30, "Input"],
Cell[231346, 4397, 1403, 29, 42, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[232810, 4433, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[232899, 4438, 629, 9, 57, "Subsection",
 CellTags->"ES_G1"],
Cell[CellGroupData[{
Cell[233553, 4451, 246, 5, 30, "Input"],
Cell[233802, 4458, 421, 7, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234260, 4470, 267, 5, 30, "Input"],
Cell[234530, 4477, 965, 15, 161, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235532, 4497, 437, 6, 30, "Input"],
Cell[235972, 4505, 8554, 186, 1065, "Output"]
}, Open  ]],
Cell[244541, 4694, 546, 7, 30, "Input"],
Cell[CellGroupData[{
Cell[245112, 4705, 133, 2, 30, "Input"],
Cell[245248, 4709, 377, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245662, 4719, 1329, 34, 88, "Input"],
Cell[246994, 4755, 815, 14, 42, "Output"],
Cell[247812, 4771, 197, 4, 22, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248046, 4780, 1373, 27, 50, "Input"],
Cell[249422, 4809, 946, 18, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250405, 4832, 139, 2, 30, "Input"],
Cell[250547, 4836, 353, 6, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[250961, 4849, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[251050, 4854, 683, 10, 57, "Subsection",
 CellTags->"ES_G1_B"],
Cell[CellGroupData[{
Cell[251758, 4868, 173, 3, 50, "Input"],
Cell[251934, 4873, 27875, 585, 1945, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279846, 5463, 135, 2, 30, "Input"],
Cell[279984, 5467, 338, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280359, 5477, 1147, 32, 50, "Input"],
Cell[281509, 5511, 741, 13, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282287, 5529, 708, 18, 50, "Input"],
Cell[282998, 5549, 615, 13, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[283674, 5569, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[283763, 5574, 116, 2, 77, "Section",
 CellTags->"RS1"],
Cell[CellGroupData[{
Cell[283904, 5580, 520, 9, 30, "Input"],
Cell[284427, 5591, 429, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284893, 5602, 139, 2, 30, "Input"],
Cell[285035, 5606, 277, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285349, 5616, 3554, 88, 297, "Input"],
Cell[288906, 5706, 987, 17, 32, "Output"],
Cell[289896, 5725, 1513, 31, 42, "Output"],
Cell[291412, 5758, 1519, 31, 42, "Output"],
Cell[292934, 5791, 694, 13, 42, "Output"],
Cell[293631, 5806, 1513, 31, 75, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[295205, 5844, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[295272, 5847, 212, 3, 60, "Text",
 CellTags->"E_2G"],
Cell[CellGroupData[{
Cell[295509, 5854, 101, 1, 43, "Subsection"],
Cell[295613, 5857, 190, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[295828, 5866, 874, 23, 30, "Input"],
Cell[296705, 5891, 13401, 243, 186, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[310167, 6141, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[310256, 6146, 427, 6, 57, "Subsection",
 CellTags->"CG_G2_PC"],
Cell[310686, 6154, 133, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[310844, 6162, 866, 24, 33, "Input"],
Cell[311713, 6188, 2010, 40, 352, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313760, 6233, 391, 8, 50, "Input"],
Cell[314154, 6243, 804, 18, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[315019, 6268, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[315108, 6273, 495, 7, 57, "Subsection",
 CellTags->"E2_CP_C0"],
Cell[315606, 6282, 114, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[315745, 6290, 125, 2, 30, "Input"],
Cell[315873, 6294, 392, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316302, 6304, 1751, 45, 55, "Input"],
Cell[318056, 6351, 1838, 36, 42, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[319955, 6394, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[320044, 6399, 481, 7, 57, "Subsection",
 CellTags->"CG_G2_PB"],
Cell[320528, 6408, 115, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[320668, 6416, 753, 21, 33, "Input"],
Cell[321424, 6439, 2054, 40, 354, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323515, 6484, 425, 8, 50, "Input"],
Cell[323943, 6494, 840, 18, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[324844, 6519, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[324933, 6524, 478, 7, 57, "Subsection",
 CellTags->"E2_CP_B0"],
Cell[325414, 6533, 154, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[325593, 6539, 126, 2, 30, "Input"],
Cell[325722, 6543, 330, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326089, 6553, 1504, 41, 55, "Input"],
Cell[327596, 6596, 1784, 36, 42, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[329441, 6639, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[329530, 6644, 528, 7, 57, "Subsection",
 CellTags->"E_G2_CA"],
Cell[330061, 6653, 115, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[330201, 6661, 824, 23, 33, "Input"],
Cell[331028, 6686, 2028, 40, 358, "Output"]
}, Open  ]],
Cell[333071, 6729, 96, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[333192, 6734, 483, 9, 69, "Input"],
Cell[333678, 6745, 897, 19, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[334636, 6771, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[334725, 6776, 645, 13, 82, "Subsection",
 CellTags->"E2_CP_A0"],
Cell[335373, 6791, 245, 7, 68, "Text"],
Cell[CellGroupData[{
Cell[335643, 6802, 130, 2, 30, "Input"],
Cell[335776, 6806, 336, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336149, 6816, 1515, 40, 50, "Input"],
Cell[337667, 6858, 1762, 35, 42, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[339490, 6900, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[339579, 6905, 522, 8, 57, "Subsection",
 CellTags->"TS2"],
Cell[340104, 6915, 242, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[340371, 6924, 3406, 83, 240, "Input"],
Cell[343780, 7009, 377, 6, 30, "Output"],
Cell[344160, 7017, 367, 5, 30, "Output"],
Cell[344530, 7024, 1841, 45, 83, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346408, 7074, 508, 14, 30, "Input"],
Cell[346919, 7090, 1406, 29, 42, "Output"]
}, Open  ]],
Cell[348340, 7122, 96, 1, 30, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[348485, 7129, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[348574, 7134, 628, 9, 57, "Subsection",
 CellTags->"ES_G2"],
Cell[CellGroupData[{
Cell[349227, 7147, 133, 2, 30, "Input"],
Cell[349363, 7151, 7184, 163, 1043, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356584, 7319, 1831, 50, 107, "Input"],
Cell[358418, 7371, 688, 13, 42, "Output"],
Cell[359109, 7386, 643, 14, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[359813, 7407, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[359902, 7412, 684, 10, 57, "Subsection",
 CellTags->"ES_G2_B"],
Cell[CellGroupData[{
Cell[360611, 7426, 182, 3, 30, "Input"],
Cell[360796, 7431, 31134, 644, 2019, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391967, 8080, 1730, 48, 107, "Input"],
Cell[393700, 8130, 696, 13, 42, "Output"],
Cell[394399, 8145, 647, 14, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[395107, 8166, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[395196, 8171, 615, 9, 57, "Subsection",
 CellTags->"RS_G2"],
Cell[395814, 8182, 705, 16, 50, "Input"],
Cell[CellGroupData[{
Cell[396544, 8202, 3476, 89, 335, "Input"],
Cell[400023, 8293, 888, 15, 32, "Output"],
Cell[400914, 8310, 1410, 29, 42, "Output"],
Cell[402327, 8341, 1418, 29, 42, "Output"],
Cell[403748, 8372, 593, 11, 42, "Output"],
Cell[404344, 8385, 1414, 29, 75, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[405819, 8421, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[405886, 8424, 264, 4, 60, "Text",
 CellTags->"E_G3"],
Cell[CellGroupData[{
Cell[406175, 8432, 101, 1, 43, "Subsection"],
Cell[406279, 8435, 191, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[406495, 8444, 787, 24, 30, "Input"],
Cell[407285, 8470, 15709, 284, 170, "Output"]
}, Open  ]],
Cell[423009, 8757, 168, 2, 30, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[423226, 8765, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[423315, 8770, 580, 8, 57, "Subsection",
 CellTags->"E_G3_CD"],
Cell[423898, 8780, 130, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[424053, 8788, 1036, 28, 33, "Input"],
Cell[425092, 8818, 1990, 39, 358, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427119, 8862, 393, 8, 50, "Input"],
Cell[427515, 8872, 808, 18, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[428384, 8897, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[428473, 8902, 693, 14, 58, "Subsection",
 CellTags->"E3_CP_D0"],
Cell[429169, 8918, 140, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[429334, 8926, 1761, 46, 74, "Input"],
Cell[431098, 8974, 394, 5, 30, "Output"],
Cell[431495, 8981, 1929, 40, 42, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[433485, 9028, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[433574, 9033, 636, 9, 57, "Subsection",
 CellTags->"E_G3_CC"],
Cell[434213, 9044, 115, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[434353, 9052, 966, 27, 33, "Input"],
Cell[435322, 9081, 2141, 43, 352, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437500, 9129, 405, 8, 50, "Input"],
Cell[437908, 9139, 819, 18, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[438788, 9164, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[438877, 9169, 756, 13, 81, "Subsection",
 CellTags->"E_G3_CB"],
Cell[439636, 9184, 191, 6, 68, "Text"],
Cell[CellGroupData[{
Cell[439852, 9194, 882, 25, 33, "Input"],
Cell[440737, 9221, 2049, 41, 352, "Output"]
}, Open  ]],
Cell[442801, 9265, 16, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[442842, 9269, 528, 10, 50, "Input"],
Cell[443373, 9281, 876, 19, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[444310, 9307, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[444399, 9312, 797, 11, 57, "Subsection",
 CellTags->"E_G3_CA"],
Cell[445199, 9325, 115, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[445339, 9333, 906, 26, 33, "Input"],
Cell[446248, 9361, 2076, 41, 352, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[448361, 9407, 409, 8, 50, "Input"],
Cell[448773, 9417, 775, 17, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[449609, 9441, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[449698, 9446, 628, 9, 57, "Subsection",
 CellTags->"E3_CP_A"],
Cell[450329, 9457, 205, 6, 68, "Text"],
Cell[CellGroupData[{
Cell[450559, 9467, 2188, 53, 96, "Input"],
Cell[452750, 9522, 486, 7, 30, "Output"],
Cell[453239, 9531, 2076, 41, 42, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[455376, 9579, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[455465, 9584, 737, 10, 57, "Subsection",
 CellTags->"E3_CP_A0"],
Cell[456205, 9596, 184, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[456414, 9602, 1770, 46, 96, "Input"],
Cell[458187, 9650, 394, 5, 30, "Output"],
Cell[458584, 9657, 1986, 40, 42, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[460631, 9704, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[460720, 9709, 733, 10, 57, "Subsection",
 CellTags->"E3_CP_0"],
Cell[461456, 9721, 369, 8, 87, "Text"],
Cell[CellGroupData[{
Cell[461850, 9733, 1168, 29, 115, "Input"],
Cell[463021, 9764, 2022, 46, 245, "Output"],
Cell[465046, 9812, 2514, 56, 263, "Output"],
Cell[467563, 9870, 2042, 46, 235, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[469666, 9923, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[469755, 9928, 522, 8, 57, "Subsection",
 CellTags->"TS3"],
Cell[470280, 9938, 215, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[470520, 9947, 3302, 81, 240, "Input"],
Cell[473825, 10030, 349, 6, 30, "Output"],
Cell[474177, 10038, 337, 5, 30, "Output"],
Cell[474517, 10045, 1811, 45, 83, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476365, 10095, 508, 14, 30, "Input"],
Cell[476876, 10111, 1402, 29, 42, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[478339, 10147, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[478428, 10152, 629, 9, 57, "Subsection",
 CellTags->"ES_G3"],
Cell[CellGroupData[{
Cell[479082, 10165, 133, 2, 30, "Input"],
Cell[479218, 10169, 10180, 220, 1065, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[489435, 10394, 1781, 49, 107, "Input"],
Cell[491219, 10445, 691, 13, 42, "Output"],
Cell[491913, 10460, 646, 14, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[492620, 10481, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[492709, 10486, 633, 9, 57, "Subsection",
 CellTags->"ES_G3_B"],
Cell[CellGroupData[{
Cell[493367, 10499, 137, 2, 30, "Input"],
Cell[493507, 10503, 29961, 624, 2025, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[523505, 11132, 1778, 49, 107, "Input"],
Cell[525286, 11183, 711, 13, 42, "Output"],
Cell[526000, 11198, 662, 14, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[526723, 11219, 64, 1, 90, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[526812, 11224, 568, 8, 57, "Subsection",
 CellTags->"RS_G3"],
Cell[527383, 11234, 96, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[527504, 11239, 436, 10, 30, "Input"],
Cell[527943, 11251, 169, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528149, 11258, 2859, 72, 259, "Input"],
Cell[531011, 11332, 973, 17, 32, "Output"],
Cell[531987, 11351, 1495, 31, 42, "Output"],
Cell[533485, 11384, 1503, 31, 42, "Output"],
Cell[534991, 11417, 678, 13, 42, "Output"],
Cell[535672, 11432, 659, 11, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

