(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    598166,      13164]
NotebookOptionsPosition[    570057,      12267]
NotebookOutlinePosition[    578311,      12513]
CellTagsIndexPosition[    577217,      12472]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[1, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAKiEGSLED8//9/gvjRo0fsN27cELp69arY+fPnpZExPn137tzhBqrRBGJ/
ID4CxMfRMTZ9L168YL5w4YIaUD4AiC8C8Qcg/gvE/9AxFreC7PQD4gtA/BGq
7j8ujKz3+fPnLFC9b6H24dSHTf/FixfVofYSpRdZPzSsAqBuJkovsn5oOF8k
5F9s+h88eMBBjt0w/devXxcGso+S4m9k/ZcuXRKHpgeS3A7TD0wrkpToPw9J
ywOmn1L3Uxp+lMYfpemH0vRLjfwDjQey8y9a+fGOWDPwlF+gsPhEKDywlZ8g
d0D9EniexPITGd++fZv3PBnlN6764zxa3QHCAIDESDs=
         "], {{0, 26}, {16, 
         0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2V1vVFUUBuBGTfTSSygthYYKNHyVinrrpbcYfwBEJN5gUkyMfw9KKaVw
KCkQKCW1RNIQKg1gEE3QtdN10pMRZCaBzNQ+kzxt5nzstfeZfbPOu/vkD8e/
e6+vr+/sR/Hn+ImfvpyYOPHz1x/Hl2/OnP3+9JlT33515sdTp09NfHHy/TjY
H6592Nf3QfyvqmpHBwbCYNr5GoMNAw2d1AEAADa3/obtLba1aJ7rb4xR9x1D
YVfYHYbDnjASPgn7wv4wGg6Eg+FQOByOhLEwnj4Nx8Jn6fM21dcfyzHq8cay
xuGseTDnMJpz2pdzHMk5D+caduWa6v6p+czafU71s6p1+/cGAADYqt52/9va
++6tXt331j3v0TTeoj5e966v6lv3Vv/uWfWr9LJm9tzMpN+UW3eaVV9s00yY
CzfC7bAQFhvuhjt57maYD9er9c+VcDlcCtMd1AQAADafqXQhTabz6VyL+vhk
Xl/uLX1D6UFmw9VwrVrvL0o/cqta7ztKD3Iv/BLuh1/DSngYHoXfwlp4Ep6F
38Pz8Ed4Ef5Mf71Gff5F3vM8x3iWY65ljUdZcyXncD/ndC/neDvnfCPXcC3X
NJtrnG48r3afU/2s6uc11QO/OwAAwFbzLvrfksWVjK30kSV3KxncUlgOD6qN
vnc1PK42+t7iaaq/r+U1q9VG3/ogx1rKse9krfmsrV+l15R9WDLmkjWXzLl8
yvuVsmdLJl3eu5R9XN7BNLPrhTxX3seUvT3TQc2Xbfr7LWq3JgAAwH95m33K
u9Dt5wMAAMDmp2dlK+vGnu/2+yQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPN42aZu
1AQAAAAAAICtrNsZIXRTN/b8xTbNhLlwI9wOC2Gx4W64k+duhvlwvVr/XAmX
w6Uw3UFNAAAAAAAA6EVT6UKaTOfTuRb18cm8vtxbcrOSwc2Gq9V6FlcytlvV
eu5WMrilsBwehJXwMKyGx2EtPElPU/19La9ZzXtWcozlHHMxa9zKmnM5h9mc
03Rjfe2uq15bvb6pHvid2NzKPiwZc8maS+ZcPiWDLnu2ZNIlmy77uGTVzex6
Ic+VbLvs7ZkOau7owEAYTDtfY7BhoKGTOgAAAAAAANDr+hu2t9jWonmuvzFG
nbsNhd1hOOwJI2Fv2B9Gw4FwMBwKR8JYOJrGW9THx/LaQ3nvgRxrf449krWG
s/ZQtZH3NdfY7rrqtdW6/fvw/9LMnpuZ9Jty646y6n8AhCP7tg==
         "], {{0, 26}, {
         2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lktLQkEUxyVdCBIELaxctYq+QduWbcKMPoCSRRsDC6JPp+Lj4vuq+EBc
iBtFfIYrpU7nPzQiN++9vmrgp/dx5j8z55w5c099z56HPYvF8mLnH4/37TIY
9L7fHvDNXeDl6THgv78KvPof/cELn5UfnjBHjI3J5/OudVBV9bhUKjmbzaad
iCxmcB9lAxKMmzmv1+v7JvpfG/DJjJkic8NrOut0OlYdfdoCjPXBqMx1q9Vy
7FhfgvX0MUa73bYZ6edyuTnrvPsZQ4Wv9PTRL5vNroTOGIiJu9FoOLT6UjuT
yVAqlaJkMin+0+m0YPEZbHTGQDwKyKtl+ugHjdFoRIVCgeLxOCUSCQGua7Ua
9Xo9YQNbozXI/aHVZ//RcDik2WxG5XKZwuGwANdo0JfrNIhDvFqtHi7zD+YW
i8VoMBgIvWKxKEDrdrtiHbAxiAF8pHAf5zJ9+Bca0WiUxuMxydbv98U64CvY
wNZgTyioI9r8QR/EEvrQUhRlrh8Kheb6sDHTZ1xG84ePMP/pdPpr/tvoL/of
Mcb9Jv7X+mcxP2X+QCMSiYh5VyoVMQbXMbP81I2vzM/JZCLyX+a+BPmPvbFN
fmr36pr713B/rVp7THy/tD6Y1cjF5zrahvVtB5jW5y21B/kVzpc1kecjfK53
Pu7kfNfO+x+/T/70++ob7NUEtQ==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 CellChangeTimes->{{3.733999395636707*^9, 3.733999398982295*^9}},
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[TextData[{
 "Rappresentazione Grafica delle Funzioni polinomiali ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
TGxap5/pzTmDfi6EG4pHAzoJQBvwDJccR8cHt451GMHwXCK6jTFtWRwyL46a
icOGuQ49pl012irraZC8fs4tL2bcPEq98iO18Efq1cOMm2dY969wHpdwnt4A
ALJcXbpcUyqourdcdU/w8i78orqU//wOt/wm+8mNpdIi5i24oQPlyj6wBXrJ
YfajS6L6MllXg3rotX6qDc6MxvWbiUNW0qCNPunkkbwyXtiiScAldpOI9zyo
XzEtjNnomDgcOf/TKjtz60jKe+tGv/wYs/XPZtIUFA1na2ym02tuIjCyBXQr
C8d3Tm5ZJ2l5YaZgEuEgcrqQQCwEhO0snGa0wS2iSztqAPEWNz518XHqoVoH
jwS7qNKp3MJvDeO/5keUt7z9ag1lLFkV5pGyVIMvHVyCYqB1ZucX4qZnLj5e
O9FkW8JmCiTmRGWOxWSvU5jgoZ9Ca+AR4ahRr1tY93Dok3fwx3f7VEL00swt
iOZu55R7RkqvemKcJo+U7WDjrdQJa6ZLNRDR2tEmWfcrYV0Z68FF2pX91KL9
zLtnAdaJGsplXa/Uo626yVYA7FbyiJM97xYQXQKCS7DgFiw4OVjwcHGwDta8
i4sHf3KDP/HwTh4BfG6ljABVrp14rR5pkffUgSMgeHl/6f4FWvEhGviKO2f4
L0ulrS/Uw/VAsIOR2KjjNsqojTHrEtLDZjWEpuEkIwHEv5Nahbtc4BL8Scik
wB/bPfjxOyutlXGfCz1ib+eGw7PBdvbj4tENH8h7G5KREKDPKbSgx1vnMZ2G
z91AtUtI0Yx1zu39mv/iDtgv9WiDjTkP1zhCPUprTnwayh3kPFjmLW8/ZbkE
N4BxXhlbNVQLLrGV9pfTO75Q9DXb2fPasQaneAnKthVIoQUKUyhVREt+5eqV
5dTf6qUHZ9v5VOLFs3sGP36XU3YtGfTkQBTZEhrinIUFZDzxkN+n4Frp0xbS
sJUMszITvk/R/ZL/4h7z9gVK4T76tcO8ihvSjlr1SIdhrseE77HTJ+1Ls1ba
lIU8bpzr1ozUK3qeyzrKVlofg4e8s1zWXiZpLl1pewyzYkK/qr9K1v5E1v54
BTy/eQoW1ow3mBf6AD90sOftrDnwpTAg47qNcz3aiU55b+NyzQPGzROUS3sZ
Jad5z27L2ioM0+1WGsYGvpQ4bCFPuoS0uNeG1nJcdeis3j5gR0/KMNc7vnEd
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
i5gJg0Zcv5U+D7S2uLncswIn40fdhnzt8bz9K9hfMZxVRufgEACX84goc/u3
8sqvu0VUZX8VkH5re5uik2xQDg9y8JVe8wmcAxKLSpoejW34xCthZFRhrilV
GhHrABNMxGHwjXYWXlD9YH7/FmHNAweLYMQNGOd7AlppriVWFh7jUSePzLx9
WlBVYib0eUQkK3lEPVzPe1a00v4SzhnJhULmGs2senUzCJ2IA94YD7gVA83E
Mz+I6u5LX5epR1qgWMivEUkaS1UDjeqhZkHlVVnHU8KJHYyb5/iV1wAAxrz2
3D6Cp6BRLnpVunTnFL3kKK+i2CPlJgJuKBrM6d41M4Spt24KEGRj4Jg3Twgq
iy2kEaTsj6j2FrXooJk0BfB/7ZIho8pEHNJPdTiYGGVPHe7YFvr1U5bFEfPC
gH6mM2RSIU528EWJgMtCnjLMD9Cvnxn+/L2xDX+Sd9ZGbHo00SY7GGj14EBh
s6L3D78hnNiKlD6D1tDsmM+unWi2Lc2pRzqmtq4zYAdsS/Pg1om41FEJgJyZ
fD3JvP3a7K86fmZhJGxcUQ3WBA1yAAsLJ7Z5ZRxlX5VHupQt2Z3I+migXDBJ
GnVBp9DWLxCEuiEymXHJpF+zMrHpY3rJcaCXg4aVTB8EKEsenUbdVIcJ12uh
TTJunsUd3Mh5cgUQG2VvtZ2OibgsKN7mKmonvUoJ+/ElPpwJ+NKI67ZSRoz4
biDDpa2PWffOaMY70yk0RhyFgty9AIqGYl5bUC+zM2fs4NofbWLeOSl4eUs9
1Kgaaoz77BG7XtlbtfziurihVIvp1k51Yw9sWrp/WTVUJ667Y2cvprITf5ld
i8eCJu3Km2ra1YOSplIb2CZrLmiUJXyOZMiXymUkoZE9aXRuIqCVsB/CoZjy
zqdOFgYAkZNLUPZV854VgqPkEtCzk72oATD3SJjaiSbD3BsLZRZ/9HvCyT2G
WbhmiGq4wa/gZqYIwHgi+pmOuf3fDXzwu4mvP1CPtcd9rlwmNXovy51yeI2Q
caXvj7+Z2vop0OzoCYVyfw5ZNIreF14RlVtWNLdvq0/K0E61OPiL0NoNoqvk
ETJvvyqDsiVV0aks+DkZCwMy5lXyV9pfTG1b51xmaqY7bOTRTKALvGxQsyys
uWOhTCQytWhQeobM3ueurASKgAhdgeKhAP36YcBqxPW34x5LMjuFmQibVKrB
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
2m8iAq4rgHfW1bPUsixizmHC2UMzGXsxR3+dTts1dWTH2K4to79uHtnxfe83
//XxH/+778fP8dkHtJPvk23doP8iPoNieeCZXcKaPrFzebDFxp6087F/kFO/
IRvylxKE/8HqUEQ93urRSJlXcthXsoE+qJl4G3I7kkV0/09ux1QONXjzm5ZG
tn+jGnqB1I0AAw2MFEVn3apmlnu3YOrIzxG/W/7+ng+u6wJ2HFpdgRlHNBrw
OaR0elnm4E/fzL+8C0fiwVsNh5IR4wIyUHVhLTuBHFUsEoqFglCP2lAw4nOb
qaPcW+eXup6wr53TYTqEtUXkC4cmD2xi38hVdDWyr+WSCzJUAy/YVWfopelz
LbftXIxDTAy7LAAt9IBD3gJadh/gkIB8AqUVn7WLWZ4lbijTTXUoB95wb+Wp
h9/69ApAwzTjrfTyrLE9302nbQWwI3pUDnCeX3OBc+Mso+w483Im4HW0i8cY
lyDWJ31+m19XqpnsRhBSS5pCNdaEbqabkLOPX1uyIhfw66sGN38xvncTUKUJ
Z/dYBYxYKARpwYm4S84T1pXOpG8Dr4W3NdisvTMnd0zs2zT0yxcA/7m3oBDH
iQOAKhcF7QYo2geOGLeLiMLaEmZFBj5z1+SBn0Z2fje8/Zver/8ufnwl4vfE
4QTqaDggb6sN2Q2c67ngXPxOw2zL9fCKOXlf49G5l7e6P/9b1+f/0ffNP3q+
+/vw1q+Gt30NXmDvk4c3TxzaPJ22DX/qV/yZPeBEwPQhargUcpoR7w+YW820
IQOhS/HhITbr0KpSohpuCTuQtgsbILkhf3lBWR9C1azcGTN9SDX8CnN8u11A
Vw2/WFXPxZAsmHjiU1otsqHkkI9B9bQBHHV99h8zab+Evd4kBgPlV8GWvasJ
WNQj27+ff30bqOFL3Y+iEM+B0DlgVjln2fz60qEtX04c3LE8+DJFM+DIwJBT
RKKVnHQgHFJChjrehAIrC7z5V7dEjWXSp1fEjWWyd/fkH+rYV08Dtjm89UuA
h/qpdknTVdHDS+zrZ8WPKjWjb/j3i6YO/8S/XwK+YlRmUy4c4dcUzr+5D9RD
NNqnT/ahcTrtZ8Lp3bPPbrkXGEB35lQXAiDCZu4a+/UHWumJuWc3VP0twgeX
WFehDjjUi8cAcQX8jQzI6tMq5WAL+3qeoOairLWGmHtofP9mbvUFRmWmZrzT
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
gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
gICAgICAgICAgICAgICA+F9DLpd77Zafb3/Lz99x5zcd8V+I9+vMP2QIv7aR
t+z/2n+94/7veAXf7+jv0fhrf/L2r29p891P8q89h7+2qb+n8Z+fn3dv5H//
2Xz3Hv6vUUEORSKReMf9syjyRT0EK69seaX94q+ZTCaZTL7H6DLZLPgh+DnW
4Xfsajqdxvr29wMcOpFMZnMvtfbKo/SmjoHTW9yNd+l/KpX6ec+Lfwg6E4/H
X9nn54928XommwEnhPyazeWwU/qmQ2CnGgz558N87XFfi3dhmzd1GKyD7kVm
Zjxer9vjDoZCiWTilabAiOKJOPh8FyrAVrAbI0eAHGBhdG/oLrY/6FLx8MF6
8T1JPiBv6swv4rWCx8/bfMejgN3AfRIIBl1ul8vtDgQCsXj8lYv+pm5gQytu
/x1v+De1UPz11+5fvFL8QP0qFk2lwYOVekufX9tIMBTs7u0NhcO/uHM6k7E7
HFMSyQSXw+VxwcLhckWTkwaDIZ549db9eQ/BjWUwGhlMRjQa/VWdBDBbLOOc
Cbvd/u4/cTgcY+PjZrP51x7rtdAbDDQG3R/wY1/f/WUHBtvX3+/z+3+VZEKj
08VT4jc99eABZ7HZz6uqevp6R0ZGRmm0EWQBf2kMBoPJYjGYzNHR0RFs++go
aA38b2BwgD0+Rj4d4UhEKBKxWCywP4vNYjKZNLSR4VHQ4ijSFp1OZyDdKL6p
wKHdbrdUJgNXf4IzweXxxsfH6QwGtoBeiSZFJrM5Fo+9y3P0Fm4ErwCtVjsw
OPissrLk9u2r16/fvnunprZ2ZHTE4XSSL+Vp9XRza0trW+sQlYJ1GwwBfNKR
E8EEQwOjQLYgZwMf1BBlCDSLXJF8PhQKTWvUPB6Pg9zSPPTG5qm1muTPniOs
e6FwSKFS8vh8sD/4BGdAJpcDDid3cHu9UrmMAwCeD2Q3Lo3oDLjzQQfAMj4x
wRcIVNMqMJBfFE5As+BKyWQy0BT2xE1wOJNiMXgS334vgRtPqVQOj442Njc/
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
agSdgy3DaDGyt+LvoCUwmP8HVGeFDA==
     "], {{0, 318}, {438, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{149., Automatic},
   ImageSizeRaw->{438, 318},
   PlotRange->{{0, 438}, {0, 318}}]]],
 "\n",
 StyleBox[">< Versione Studente ><", "Chapter",
  FontColor->RGBColor[0.9490196078431372, 0.4, 0.4117647058823529]]
}], "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.733997097004491*^9, 3.733997106359313*^9}, {
   3.7339972171329017`*^9, 3.73399722857377*^9}, {3.73399762815193*^9, 
   3.733997675658998*^9}, {3.7339977519055576`*^9, 3.7339977785914526`*^9}, {
   3.733997880525403*^9, 3.733997890833058*^9}, {3.733998261137269*^9, 
   3.7339982661024284`*^9}, {3.7339983036115665`*^9, 
   3.7339983168307953`*^9}, {3.7340021238503313`*^9, 3.734002128241235*^9}, {
   3.7340022350245*^9, 3.7340022615129633`*^9}, {3.7356174404194193`*^9, 
   3.735617444216782*^9}},
 TextAlignment->Center,
 CellTags->"Home"],

Cell[TextData[StyleBox["a cura di",
 FontSlant->"Italic"]], "Subtitle",
 CellChangeTimes->{{3.733997679911029*^9, 3.7339976893847747`*^9}, {
  3.733998308332799*^9, 3.733998311301587*^9}},
 TextAlignment->Center],

Cell["Simone Bertolini, Alessio Francesconi, Matteo Grillini", "Text",
 CellChangeTimes->{{3.7339992978858657`*^9, 3.733999352144992*^9}, {
  3.734002085322394*^9, 3.734002111162717*^9}},
 TextAlignment->Center],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Iniziamo\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SetDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Get", "[", "\"\<Package.m\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"loadFiles", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"FrontEndExecute", "[", 
       RowBox[{"FrontEndToken", "[", "\"\<EvaluateNotebook\>\"", "]"}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"AutoCollapse", "[", "]"}]}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Palette\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "140"}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7353868350071344`*^9, 3.735386839859412*^9}, {
  3.7353868704481616`*^9, 3.735386932359703*^9}, {3.735387013658353*^9, 
  3.7353870631511836`*^9}, {3.7361735545184484`*^9, 3.7361735605935526`*^9}, {
  3.7361766898908496`*^9, 3.7361767108309994`*^9}, {3.7366716282725873`*^9, 
  3.736671636131441*^9}}],

Cell[BoxData[
 ButtonBox["\<\"Iniziamo\"\>",
  Appearance->"Palette",
  ButtonFunction:>(SetDirectory[
     NotebookDirectory[]]; Get["Package.m"]; MClib`loadFiles[]; 
   FrontEndExecute[
     FrontEndToken["EvaluateNotebook"]]; MClib`AutoCollapse[]),
  Evaluator->Automatic,
  ImageSize->140,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{3.736672026417373*^9, 3.736672077264657*^9, 
  3.7366756279258223`*^9}]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["1.1 Introduzione", "Section",
 CellChangeTimes->{{3.734002437896296*^9, 3.734002450726939*^9}},
 CellTags->"Introduction"],

Cell["\<\
la geometri e l\[CloseCurlyQuote]algebra sono due branche di quella \
meravigliosa materia chiamata matematica, ma come sono legate?

Le funzioni polinomiali ci permettono di notare il collegamento fra figure ed \
espressioni analitiche... Vediamo come.Clicca sul link per aprire la linea in \
Guida\
\>", "Text",
 CellChangeTimes->{{3.7353878710203915`*^9, 3.7353878755526505`*^9}, {
  3.73561361371113*^9, 3.7356137093577223`*^9}, {3.735613741861148*^9, 
  3.7356137650896215`*^9}, {3.7356174521237936`*^9, 3.735617521280258*^9}, {
  3.736328340400757*^9, 3.736328354370979*^9}, {3.7366745357429843`*^9, 
  3.736674545070051*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Guida in Linea PDF\>\"", ",", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<file:///\>\"", ",", 
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<LineaGuida_Student.pdf\>\""}], "}"}], "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{
     RowBox[{"StatusArea", "[", 
      RowBox[{
       RowBox[{"Import", "[", "\"\<img/right_arrow.png\>\"", "]"}], ",", " ", 
       "\"\<Setup\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<Setup\>\""}], 
      "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7361735668466854`*^9, 3.736173573897812*^9}, {
  3.7361767164320364`*^9, 3.736176735622178*^9}, {3.7366745309579444`*^9, 
  3.7366745323261557`*^9}}],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{False->"\<\"Guida in Linea PDF\"\>", True->
    StyleBox["\<\"Guida in Linea PDF\"\>", "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaseStyle->{"Hyperlink"},
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["file:///C:\\Users\\Alessio\\Documents\\GitHub\\MathematicaPrjMAS\\\
LineaGuida_Student.pdf"], None},
   ButtonNote->
    "file:///C:\\Users\\Alessio\\Documents\\GitHub\\MathematicaPrjMAS\\\
LineaGuida_Student.pdf"],
  Annotation[#, 
   "file:///C:\\Users\\Alessio\\Documents\\GitHub\\MathematicaPrjMAS\\\
LineaGuida_Student.pdf", "Hyperlink"]& ]], "Output",
 CellChangeTimes->{3.7361892496067424`*^9, 3.7363282498551383`*^9, 
  3.736328511308214*^9, 3.7366233353475337`*^9, 3.736623471385021*^9, 
  3.7366715235624647`*^9, 3.7366717030042906`*^9, 3.7366720266197767`*^9, 
  3.7366720774996576`*^9, 3.7366745547443185`*^9}],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{False->
    TagBox[
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAABgPf8HFuQ/5A==
        "], {{0, 512}, {512, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{512, 512},
      PlotRange->{{0, 512}, {0, 512}}],
     StatusArea[#, "Setup"]& ,
     TagBoxNote->"Setup"], True->
    StyleBox[
     TagBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAABgPf8HFuQ/5A==
         "], {{0, 512}, {512, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{512, 512},
       PlotRange->{{0, 512}, {0, 512}}],
      StatusArea[#, "Setup"]& ,
      TagBoxNote->"Setup"], "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaseStyle->{"Hyperlink"},
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData:>{
     NotebookObject[
      FrontEndObject[
       LinkObject["5gwj4_shm", 3, 1]], 19], "Setup"},
   ButtonNote->ButtonData],
  Annotation[#, {
    NotebookObject[
     FrontEndObject[
      LinkObject["5gwj4_shm", 3, 1]], 19], "Setup"}, 
   "Hyperlink"]& ]], "Output",
 CellChangeTimes->{3.7361892496067424`*^9, 3.7363282498551383`*^9, 
  3.736328511308214*^9, 3.7366233353475337`*^9, 3.736623471385021*^9, 
  3.7366715235624647`*^9, 3.7366717030042906`*^9, 3.7366720266197767`*^9, 
  3.7366720774996576`*^9, 3.7366745548691187`*^9}]
}, {2, 3}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Chapter"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7353878573356085`*^9, 3.7353879209282455`*^9}}],

Cell["", "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Setup Project", "Section",
 CellChangeTimes->{{3.734002437896296*^9, 3.734002450726939*^9}, {
  3.735387250122878*^9, 3.7353872808866377`*^9}},
 CellTags->"Setup"],

Cell["\<\
Per iniziare il tutorial ricorda di fare la seguente operazione

Clicca Evalutation Nella Barra, clicca Evalutation Notebook\
\>", "Text",
 CellChangeTimes->{{3.735387289598136*^9, 3.7353873172877197`*^9}, {
  3.7353873628323245`*^9, 3.7353873811343713`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Hyperlink", "[", 
  RowBox[{
   RowBox[{"StatusArea", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<img/right_arrow.png\>\"", "]"}], ",", " ", 
     "\"\<Index\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<Index\>\""}], 
    "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.735387561415683*^9, 3.735387567924055*^9}, {
  3.736173579689932*^9, 3.7361735859200478`*^9}, {3.7361767798534503`*^9, 
  3.7361767869154925`*^9}}],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{False->
    TagBox[
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAABgPf8HFuQ/5A==
        "], {{0, 512}, {512, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{512, 512},
      PlotRange->{{0, 512}, {0, 512}}],
     StatusArea[#, "Index"]& ,
     TagBoxNote->"Index"], True->
    StyleBox[
     TagBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAABgPf8HFuQ/5A==
         "], {{0, 512}, {512, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{512, 512},
       PlotRange->{{0, 512}, {0, 512}}],
      StatusArea[#, "Index"]& ,
      TagBoxNote->"Index"], "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaseStyle->{"Hyperlink"},
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData:>{
     NotebookObject[
      FrontEndObject[
       LinkObject["5gwj4_shm", 3, 1]], 19], "Index"},
   ButtonNote->ButtonData],
  Annotation[#, {
    NotebookObject[
     FrontEndObject[
      LinkObject["5gwj4_shm", 3, 1]], 19], "Index"}, 
   "Hyperlink"]& ]], "Output",
 CellChangeTimes->{3.7361892497939425`*^9, 3.7363282500270324`*^9, 
  3.736328511433261*^9, 3.736623335517357*^9, 3.736623471534865*^9, 
  3.736671523781865*^9, 3.7366717032070913`*^9, 3.736672026808378*^9, 
  3.7366720777018585`*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Funzioni polinomiali di 1\[Degree] Grado (Rette)", "Subsection",
 CellChangeTimes->{{3.734264156011918*^9, 3.734264174551561*^9}, {
  3.7342647671947713`*^9, 3.7342647691117325`*^9}, {3.7355397046289797`*^9, 
  3.735539707531193*^9}, {3.7356175346890287`*^9, 3.7356175386890078`*^9}},
 CellTags->"Index"],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["Teoria",
 BaseStyle->"Hyperlink",
 ButtonData->"E_G1"]], "Subsubtitle",
 CellChangeTimes->{{3.7342647720608826`*^9, 3.7342647844254065`*^9}, {
  3.7353875996248684`*^9, 3.7353875996268682`*^9}}],

Cell[TextData[ButtonBox["Esercizi",
 BaseStyle->"Hyperlink",
 ButtonData->"ES_G1"]], "Subsubtitle",
 CellChangeTimes->{{3.7342647720608826`*^9, 3.7342648062551336`*^9}, {
  3.7353876476756163`*^9, 3.7353876476776166`*^9}}],

Cell["Funzioni polinomiali di 2\[Degree] Grado (Parabole)", "Subsection",
 CellChangeTimes->{{3.734264156011918*^9, 3.734264174551561*^9}, {
  3.7342642766773386`*^9, 3.7342643066454735`*^9}, {3.734328641837165*^9, 
  3.7343286437612753`*^9}, {3.735539710041607*^9, 3.735539712835228*^9}, {
  3.735617549136994*^9, 3.7356175545594435`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["Teoria",
 BaseStyle->"Hyperlink",
 ButtonData->"E_2G"]], "Subsubtitle",
 CellChangeTimes->{{3.7342647720608826`*^9, 3.7342647844254065`*^9}, {
  3.7353876789794073`*^9, 3.735387678981407*^9}}],

Cell[TextData[ButtonBox["Esercizi",
 BaseStyle->"Hyperlink",
 ButtonData->"ES_G2"]], "Subsubtitle",
 CellChangeTimes->{{3.7342647720608826`*^9, 3.7342647844254065`*^9}, {
  3.7342648210253296`*^9, 3.7342648237490826`*^9}, {3.735387755745798*^9, 
  3.735387755748798*^9}}],

Cell["Funzioni polinomiali di 3\[Degree] Grado (Cubiche)", "Subsection",
 CellChangeTimes->{{3.734264156011918*^9, 3.734264174551561*^9}, {
   3.734264280070696*^9, 3.7342642801609745`*^9}, {3.734264316170017*^9, 
   3.7342643174315257`*^9}, {3.735539715768649*^9, 3.735539722617691*^9}, {
   3.735617559356798*^9, 3.735617560028783*^9}, 3.7363282959542427`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["Teoria",
 BaseStyle->"Hyperlink",
 ButtonData->"E_G3"]], "Subsubtitle",
 CellChangeTimes->{{3.7342647720608826`*^9, 3.7342647844254065`*^9}, {
  3.735387777156022*^9, 3.7353877771580224`*^9}}],

Cell[TextData[ButtonBox["Esercizi",
 BaseStyle->"Hyperlink",
 ButtonData->"ES_G3"]], "Subsubtitle",
 CellChangeTimes->{{3.7342647720608826`*^9, 3.7342647844254065`*^9}, {
  3.7342648313996153`*^9, 3.734264833278369*^9}, {3.7353878028584924`*^9, 
  3.7353878028604927`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[TextData[StyleBox["Funzioni polinomiali di 1 \[Degree]Grado", \
"Section"]], "Text",
 CellChangeTimes->{{3.734265091372779*^9, 3.7342651012527695`*^9}, {
  3.7355397368829784`*^9, 3.735539739804395*^9}, {3.7356175660918903`*^9, 
  3.735617567138909*^9}},
 CellTags->"E_G1"],

Cell[CellGroupData[{

Cell["Introduzione ", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}}],

Cell["\<\
Conosciamo la forma delle funzioni polinomiali di primo grado : f (x) = m x + \
q ma cosa vogliono dire i parametri m e q?

Ma soprattutto non ti ricorda la forma della retta?
\
\>", "Text",
 CellChangeTimes->{{3.7345006715616665`*^9, 3.734500680325534*^9}, {
  3.7345007282947474`*^9, 3.734500731374178*^9}, {3.7356175771086884`*^9, 
  3.7356175790468426`*^9}, {3.736328378400017*^9, 3.7363283788996134`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "x"}], "+", "1"}], ",", 
     RowBox[{
      RowBox[{"4", "x"}], "-", "2"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], "x"}], "+", "3"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AutoCollapse", "[", "]"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Plotting", " ", "some", " ", "functions", " ", "as", " ", "example"}], 
   " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7345007524053965`*^9, 3.7345007883036575`*^9}, {
  3.7345008229814744`*^9, 3.7345008826352205`*^9}, {3.734716349827651*^9, 
  3.73471637954216*^9}, {3.7361735981032906`*^9, 3.736173630378106*^9}, {
  3.7361767953925543`*^9, 3.7361768021035995`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1GtMk2cYxvFS7SzCREorFis9PIhaLdSXRxnI0htZU5yCrAhzGpVVMIQx
YUIcBnESOSgzgpxUsB9EhhDiWLYM1Li8jwNFRTvmAszhaXaCtcuGnGTEjrH0
/nDl9/X/6VJbssxpQoFAEDe7/y0YjhudmSHMLceG8hdNDL4hKMfiFz553fEP
QTmmish2ZY0RlGM/llWKnw4RlGPikIFAdo+gHKvOTdl0pJ6gHGv1yGkUhBOU
Y6I0EyffqUHXML9fb2Q2nFKjemburNuz8o6KNZas7TZXh7L8v9/NrLArUR27
/HldRtuWQHQ1i69MUv17VoFqmcn6Q3zsnwHoCtbUfbA/Z4ccXc52FVXLfmr2
R5exwylzvvbyW4QGMYFOyccUS1EN++3Ls6WtfRJUxRTz01vGN/iyd6S9Zkdx
IPtkrVY0qPBBl7A94Y+bOzu9UH+mzYuc2dcoRqXs/KPEroPRItSXDRfKokyL
hcw2Z1XeSb03u1qzwvgi2cW7FTG948F4qHWST7n/nWN3pIt/7+qgpyt5hD+W
2+E3fWmEz25pm/L1s/NHNhXcKD9zi0/eS87fP3Sb79u8r6022m7ovvugLCzx
loHLaX92VzppiNRd/zbhtN1grU35qLnHA4QHZA9T5SMGt2KY551QaPlr0uB2
ARx92h+z/4LLsCHbqb7yswS+qS9JODzqgcogqyF14R/JIlQOuzLqlpYWilEF
HP/gQETYOS9UCXOlNUNfTC8AYdn7Y4YCNQz0FI8U+fiiBJLyLevqOiVoEGR6
OTW27VI0GJStN2vfeilDl0P+5ZhEn3p/dCVkN2W2rwuVo6vAWxhuCXkegK4G
46dba7RVCjQEFl9ZmmUMCoQTD092aCR6qNx/7JR+QAkbI7pizzj1YC7ZorO2
q9A1oN1RlNQ42+2Wg/4hz4aqJA0aBjbL82iJkqAUfp97capGQ1AK403pbfJg
glKQO50KtY6gFFJzRl+HricohemjM5fiPiQoheCv5AHHywlKIcI02OtdRVAK
mx3nSitqCUrhM51q4rSVoBSufR/c29RKUArmm2ElXd0EpZCWPhEV20NQCnnz
O8Z6bASlYI2P/PiXPoJSeNEPUc/sBJ3tzROOpQ0TlMLbS7paHC8JSoHbbfJ/
9YqgFIwenrbcCYJS2HbhTtHUFEEpZBhPrD/0hqAU8L9QCv8BzO82pg==
       "]]},
     Annotation[#, "Charting`Private`Tag$65142#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1H9QE3QYx/GxwJgDkR8ThnNj+3qYuwbIlMmY7eHLduMqkCCw00tpgkcE
QcIZHmqR/BDrSoHBCewKJILjkq47kbhqT4GiUsSVjggsDQURr/gp5EFkx/PH
517/fv56K605ielCgUAQ92T/e3w8bmZlheGqJhwr3DA/vMRIE8av/2Ph0j+M
NGFQZO5yziwjTfj96Qr322OMNKF7yKAcf2SkCavyU194t46RJmxzyWsS6Bhp
Qrd0S7j0VRUZg76/Xs5qPKskOSZ21x7cej2IjMbCv3dlnRlV4LcL8oir04Cd
b9dmtu+W40hU3MXBLYDxFclB/56Tkc+hxf5NfOzDQNKAzb1HnXn7pGQU7i+u
kvzU4k9G4onUpy6IfTeQO1GgUThiSvzICPzt/XNlbTd9yO0oW5vROse9SS2+
sUPtNizzwo5A23vZH27Dg7rfW7q7xWQoqgv0K282uZPPYsOtpJ6j0W7kVhwv
khgsAUIyGLtsz5jvpyw7bj1fpcpvU2HYxNBcqP2RY1U5mrqGRcspU45VAzC3
tX3R23fU0Xljz9Kpcm9MOcQafj52zVE9FNuy/cAa7P1h6LQ26aqxXlqpP+Sc
deg1332ZUDNqHHhdVF3SNWIUHpGMpEmnjK4P1Z3XwgXwtEdCkfWvR8Z1AZ8I
L494wsnbzpjD55eNq0rgi7rShBMzLpCq82xYursRchrT1t9NcSOVsD+zdlNZ
kTu5GcpfOhKprReTW8DVzzb2zuN1pBoG+0qmir284UKN+I5IEQLJhdaI2m4f
MgyyxJOq/r1+ZDgo2q5Ur3kgIbVQ2BmT5FXnT+6A3OasjohQKakDD6HOGnIv
kNwJ5uyXbepKGamHgK825Zg3y0kDVBw+dTZsUEHugsTS3Rp7RxA0eXy8V59t
BPW+4uSm40oSwDkmaqxMVpHR0G+9F+2jYCSHO66fLdpUjOQw15zRLg1mJAfp
5KRMqWEkh7S8mYXQKEZyeHxy5fO4PYzkEPypNLD8I0ZyiLQMD3hUMpLDixP1
ZWeqGcnhLU3QfI2dkRy+vhg80NzGSA6JV7SlPb2M5JCeMW+I7WMkh4K1l2b7
+hnJwR6vf+2Xm4zkcN8Jhj9HGfnkb4FwNn2ckRw8N/a0TjxgJIfwAxb/6WlG
cjC7iPrz5xnJ4ZXz14sXFxnJIdP8QdSxJUZyoH6RHP4DHQA44w==
       "]]},
     Annotation[#, "Charting`Private`Tag$65142#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1H1QE3Qcx3GYUCAoz+DmZGM/YjAc/AIc8ZD7KuzgSpB4qpMiQzCOhhBy
hIdiKEJaKvIgMdiVsEhcSucdaB61r7F4kCTOEDTERBIETHkGCVrUrz8+9/r3
/dfHJSkjOoVjZGQUsbp/PTQaMW0wEGTKYCTPcW5gmSBTBpHWvy9ceU6QKQNh
QOZKxgxBpgx+PFFq9mCEIFMGZl79zniTIFMG5dm7X/+4miBTBlrj/Rojf4JM
GZimhPlw3xEhcwvY3flJWXvGBZl+EN2q2uNxQ4hMX8h79qqyZFiAPyw4yzqm
fODqR6q0xp3OeC8ooqlf7AORpXHCv6v4KO6UWBt2vAxh6u8jw5/wUNOdKHbN
oVDffqBvfwIXmd6QWFju8Mt5J2RKIX/3mksWdo7I3AxGUoEu5Jg9MiXw26dV
xdrbtsh0B/7a1IbZ7TbIFMMHWySmA3wrbOZVHEk/9RLs8b9/vrXVAi9vzOgd
GiIgyQ007NOYoUOw+rB/tAjODcboD2wzxZ6nHg9bvhTCaIFDcNgGDjKd4VqF
u+Jx/Ipu8LVyUbaWB3Ts7qy3el73+axyqTLSCUKvDZivxE/qRIN/FuZ72kNm
Q+Oijd2w7u1xz3y93hri95Jztw526rqUrrEqbwto//nuCd+YDvn7bZpTVXMm
ECi9fjmqcljedmtrRGPqspyT43AvmTspXxRfOK1UPZO/aBlVkPR0Xl4iN4z3
c6/Ljz7oC8mqW5FbHkmw6jw5ovu2uigqf9oYcB9v+/POBV1GbbL1H/GmcD+0
U9hxkYOJaapNxQVm0NLrF7R+jTkefyMnwLfGAmzrnmTtfcUKTewrRg4vrQem
LfZ3HZsstLKBS5UWQ+YCR4zLS5KpWm3hwrxe6VfMRaXFhKh7lz3ccexT1DTx
UaBtO/vCuANsjT8pXdcrwLyrITFW1U7AdMHMemWzzJsLTIKWHP8kr0c8YLqi
Ij22QlLGB6YbbvhuU4bC1RmY7lia9ckZ2i8ApgdGF+2UqpuFoLH8YldguidK
EgrjNIdcILbZTBv+12bsGzGvLYsTwTc37ULFWi/sTnq0zVZAgElxyOTrxQoR
ASbF2frURq4bASZF7sQE30VKgEkxef/0gncQASbFpaOGixFvEmBSdPuKyzt+
mgCTYkDYQI9lGQEmxR1jNcUlZwkwKX4oFc5VqgkwKbY0ufXUawkwKUa3+Rbp
2wkwKaakzgWHdxFgUsxde2Wmq5sAk6I6MvC9X28TYFJ83AfBD4cJMFd7czkz
KaOrvf9Jcd1GfcPYOAEmRZ93w5ympggwKSqMzbuz5wgwKb5Vd6NwcZEAk2Ka
4rOgg8sEmPT/3yLApPgPJDA9Fg==
       "]]},
     Annotation[#, "Charting`Private`Tag$65142#3"]& ]}, {{{}, 
     {GrayLevel[0.4], AbsoluteThickness[0.5], 
      StyleBox[{{
         LineBox[{
          Scaled[{0.02, 0}, {10, 20.99999918367347}], 
           Offset[{3, 0}, Scaled[{0.02, 0}, {10, 20.99999918367347}]], 
           Offset[{7, 0}, Scaled[{0.02, 0}, {10, 20.999999178533404`}]], 
           Offset[{12, 0}, Scaled[{0.02, 0}, {10, 20.999999178533404`}]]}], 
         LineBox[{
          Scaled[{0.02, 0}, {10, 37.99999836734694}], 
           Offset[{3, 0}, Scaled[{0.02, 0}, {10, 37.99999836734694}]], 
           Offset[{7, 0}, Scaled[{0.02, 0}, {10, 37.99960468650754}]], 
           Offset[{12, 0}, Scaled[{0.02, 0}, {10, 37.99960468650754}]]}], 
         LineBox[{
          Scaled[{0.02, 0}, {10, -16.99999918367347}], 
           Offset[{3, 0}, Scaled[{0.02, 0}, {10, -16.99999918367347}]], 
           Offset[{7, 0}, Scaled[{0.02, 0}, {10, -16.99999918457844}]], 
           Offset[{12, 0}, Scaled[{0.02, 0}, {10, -16.99999918457844}]]}]}, {
         InsetBox[
          TagBox[
           RowBox[{
            RowBox[{"2", " ", "x"}], "+", "1"}],
           HoldForm], Offset[{15, 0}, 
          Scaled[{0.02, 0}, {10, 20.999999178533404}]], 
          ImageScaled[{0, 0.5}]], InsetBox[
          TagBox[
           RowBox[{
            RowBox[{"4", " ", "x"}], "-", "2"}],
           HoldForm], Offset[{15, 0}, 
          Scaled[{0.02, 0}, {10, 37.99960468650754}]], ImageScaled[{0, 0.5}]],
          InsetBox[
          TagBox[
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "x"}], "+", "3"}],
           HoldForm], Offset[{15, 0}, 
          Scaled[{0.02, 0}, {10, -16.99999918457844}]], 
          ImageScaled[{0, 0.5}]]}, {}, {}},
       FontColor->GrayLevel[0.4]]}}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 65}, {All, All}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-41.99999836734694, 37.99999836734694}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.736189249981143*^9, 3.7363282528242064`*^9, 
  3.7363285115894933`*^9, 3.736623335972883*^9, 3.7366234717006917`*^9, 
  3.736671526666482*^9, 3.736671703405693*^9, 3.7366720270117817`*^9, 
  3.7366720779046593`*^9}]
}, {2}]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.734265411729381*^9, 3.734426123691478*^9, 
  3.7344299354126263`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.734500951732555*^9, 3.734500960028581*^9}}],

Cell[CellGroupData[{

Cell["Comprensione guidata del parametro q", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.735539749901639*^9, 3.735539750917443*^9}}],

Cell[TextData[{
 "Partiamo cercando di capire cosa rappresenta il ",
 StyleBox["q",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " della formula nei grafici :"
}], "Text",
 CellChangeTimes->{{3.7345010630125484`*^9, 3.7345010883905134`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "*", "x"}], "+", " ", "q"}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", " ", 
       RowBox[{"+", "3"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"10", ",", " ", 
        RowBox[{"-", "10"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"2", "x"}], "+", "q"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", " ", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AutoCollapse", "[", "]"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Plotting", " ", "an", " ", "example"}], ",", " ", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{
     "Check", " ", "if", " ", "zoom", " ", "function", " ", "is", " ", 
      "correct"}]}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.734501161680472*^9, 3.7345011739527473`*^9}, {
  3.734501210780246*^9, 3.734501235434394*^9}, {3.7345012937893457`*^9, 
  3.7345013971899204`*^9}, {3.7347166436273437`*^9, 3.7347166538967533`*^9}, {
  3.7347167313457804`*^9, 3.734716748116282*^9}, {3.7347169086691036`*^9, 
  3.734716924127616*^9}, {3.7347472384551992`*^9, 3.7347472415020914`*^9}, {
  3.7355381238135242`*^9, 3.735538131256776*^9}, {3.7356389976146016`*^9, 
  3.73563900124321*^9}, {3.7361736467614403`*^9, 3.736173653990569*^9}, {
  3.736176808273641*^9, 3.7361768230047407`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`q$$], -10, 10}}, Typeset`size$$ = {
    432., {146., 152.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`q$65387$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`q$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`q$$, $CellContext`q$65387$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[2 $CellContext`x + $CellContext`q$$, {$CellContext`x, -3, 
         Plus[3]}, PlotRange -> {10, -10}, PlotLabel -> 
        2 $CellContext`x + $CellContext`q$$], 
      "Specifications" :> {{$CellContext`q$$, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{489., {198., 205.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7361892501059437`*^9, 3.736328253636791*^9, 
  3.7363285116676283`*^9, 3.7366233373624372`*^9, 3.7366234717876015`*^9, 
  3.7366715270350847`*^9, 3.736671703515893*^9, 3.736672027124383*^9, 
  3.73667207802186*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"hyperText", "[", 
  RowBox[{"\"\<Hai dubbi su come cambia il grafico quando cambia \!\(\*
StyleBox[\"q\",
FontWeight->\"Bold\",
FontSlant->\"Italic\"]\)?\>\"", ",", 
   "\"\<Il termine noto q indica l\[CloseCurlyQuote]ordinata del punto di \
intersezione del grafico con l\[CloseCurlyQuote]asse Y\>\"", ",", 
   "LinkHand"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AutoCollapse", "[", "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Creating", " ", "a", " ", "cliccable", " ", "text"}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7345016626353645`*^9, 3.734501673818714*^9}, {
  3.734501998886305*^9, 3.734502208119441*^9}, {3.7345022506776333`*^9, 
  3.7345023266454487`*^9}, {3.734502390696959*^9, 3.734502418916597*^9}, {
  3.734502636711109*^9, 3.734502693697912*^9}, {3.734502733556945*^9, 
  3.734502750359337*^9}, {3.7345028078580184`*^9, 3.7345028416735263`*^9}, {
  3.73471675661714*^9, 3.734716768739394*^9}, {3.7347169593824797`*^9, 
  3.7347169664928503`*^9}, {3.7347499679497395`*^9, 3.734749989212011*^9}, {
  3.73475013793229*^9, 3.734750156121544*^9}, {3.736173659518659*^9, 
  3.736173665999772*^9}, {3.736176813463678*^9, 3.7361768278447747`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia \
\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontWeight->\\\"Bold\\\",\\nFontSlant->\\\"\
Italic\\\"]\\)?\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "Il termine noto q indica l\[CloseCurlyQuote]ordinata del punto di \
intersezione del grafico con l\[CloseCurlyQuote]asse Y"], Method -> 
    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
    True}]]], "Output",
 CellChangeTimes->{3.736189250495944*^9, 3.7363282540743375`*^9, 
  3.7363285119332805`*^9, 3.7366233377480373`*^9, 3.736623472047331*^9, 
  3.736671527486688*^9, 3.7366717038296957`*^9, 3.7366720275519896`*^9, 
  3.7366720783440638`*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione del caso particolare", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}}],

Cell["Hai posto attenzione a cosa succede quando q = 0?", "Text",
 CellChangeTimes->{{3.7345029675117826`*^9, 3.7345029797414255`*^9}, {
  3.7346883278264246`*^9, 3.7346883360782404`*^9}, {3.7347167994697275`*^9, 
  3.734716801668829*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"var", " ", "=", "\"\<\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{
        RowBox[{"StatusArea", "[", 
         RowBox[{
          RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
          "\"\<AG_C1_G1\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
          "\"\<AG_C1_G1\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<No\>\"", ",", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"p1", "\[Equal]", " ", "0"}], ",", 
          RowBox[{
           RowBox[{"var", " ", "=", " ", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"2", "x"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{"-", "5"}], ",", 
                RowBox[{"+", "5"}]}], "}"}], ",", " ", 
              RowBox[{"PlotLegends", "\[Rule]", "\"\<y = 2 x + 0\>\""}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"p1", " ", "=", " ", "1"}], ";"}]}], "\[IndentingNewLine]",
          "]"}]}], "]"}]}], "}"}], "]"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"p1", " ", "===", " ", "1"}], ",", "  ", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"2", "x"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"+", "5"}]}], "}"}], ",", " ", 
         RowBox[{"PlotLegends", "\[Rule]", "\"\<y = 2 x + 0\>\""}], ",", " ", 
         
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], " ", 
       RowBox[{
       "Text", "[", "\"\<come puoi vedere la retta passa per l' origine\>\"", 
        "]"}]}], ",", " ", 
      RowBox[{"Text", "[", "\"\<\>\"", "]"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7345029885305758`*^9, 3.734503011150111*^9}, {
   3.7345030422233295`*^9, 3.7345031442374134`*^9}, {3.734503177721815*^9, 
   3.734503300349271*^9}, {3.7345033508342648`*^9, 3.734503388044582*^9}, {
   3.734504129326068*^9, 3.7345041970183425`*^9}, {3.7345042340631676`*^9, 
   3.7345042509149756`*^9}, {3.7345043086039963`*^9, 3.734504309072737*^9}, 
   3.7345043490496173`*^9, {3.734504383098099*^9, 3.7345044178440657`*^9}, {
   3.7345047324904203`*^9, 3.734504751402792*^9}, {3.734504812045418*^9, 
   3.7345048518122034`*^9}, {3.7345049018776445`*^9, 
   3.7345049206760445`*^9}, {3.7345049562809944`*^9, 
   3.7345049575466523`*^9}, {3.734505069910708*^9, 3.734505100876888*^9}, {
   3.734505135340006*^9, 3.7345051983900146`*^9}, {3.734505263803197*^9, 
   3.7345053055259595`*^9}, {3.7345057308107967`*^9, 3.7345057721089706`*^9}, 
   3.734506266121472*^9, {3.7345068755043697`*^9, 3.7345068855200253`*^9}, {
   3.7346869754592657`*^9, 3.734686976099867*^9}, {3.734687289634714*^9, 
   3.7346872958179283`*^9}, {3.7346873669956985`*^9, 3.734687373466313*^9}, {
   3.734688356002079*^9, 3.734688491861334*^9}, {3.7346886723811016`*^9, 
   3.734688673582304*^9}, {3.734717039438263*^9, 3.7347170512478933`*^9}, {
   3.734717807209796*^9, 3.7347178565912914`*^9}, {3.7347948341871877`*^9, 
   3.7347948739258547`*^9}, 3.7347949065839777`*^9, 3.7347998378218403`*^9, {
   3.735639736799564*^9, 3.735639738446658*^9}, {3.7356397777169046`*^9, 
   3.7356397984020877`*^9}, {3.736173676491128*^9, 3.7361736832034245`*^9}, {
   3.7361768344148273`*^9, 3.736176845377098*^9}, {3.7361869545171223`*^9, 
   3.7361870629571304`*^9}, {3.7361870991400337`*^9, 
   3.7361871150910645`*^9}, {3.736187150147153*^9, 3.7361872183188868`*^9}, {
   3.7361872559300528`*^9, 3.736187562720892*^9}, {3.736187600433693*^9, 
   3.7361876045117006`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
          Automatic, Method -> "Preemptive"], StatusArea[#, "AG_C1_G1"]& , 
         TagBoxNote -> "AG_C1_G1"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
           Automatic, Method -> "Preemptive"], StatusArea[#, "AG_C1_G1"]& , 
          TagBoxNote -> "AG_C1_G1"], {"HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "AG_C1_G1"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "AG_C1_G1"}, "Hyperlink"]& ],
   "\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> 
    If[MClib`p1 == 
      0, $CellContext`var = Plot[2 $CellContext`x, {$CellContext`x, -5, 
          Plus[5]}, PlotLegends -> "y = 2 x + 0"]; MClib`p1 = 1; Null], 
    Appearance -> Automatic, Evaluator -> Automatic, Method -> "Preemptive"]},
  
  "RowDefault"]], "Output",
 CellChangeTimes->{3.736189250573944*^9, 3.7363282541993523`*^9, 
  3.7363285119801607`*^9, 3.736623337843937*^9, 3.7366234721282473`*^9, 
  3.7366715275646887`*^9, 3.736671703938896*^9, 3.7366720276163898`*^9, 
  3.7366720784466643`*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[MClib`p1 === 1, Plot[2 $CellContext`x, {$CellContext`x, -5, 
       Plus[5]}, PlotLegends -> "y = 2 x + 0", ImageSize -> Medium] 
    Text["come puoi vedere la retta passa per l' origine"], 
    Text[""]], StandardForm],
  ImageSizeCache->{0., {3., 15.}}]], "Output",
 CellChangeTimes->{3.736189250573944*^9, 3.7363282541993523`*^9, 
  3.7363285119801607`*^9, 3.736623337843937*^9, 3.7366234721282473`*^9, 
  3.7366715275646887`*^9, 3.736671703938896*^9, 3.7366720276163898`*^9, 
  3.736672078462264*^9}]
}, {2, 3}]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.736187271494296*^9, 3.7361872727052984`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Analisi guidata del coefficiente di primo grado", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}},
 CellTags->"AG_C1_G1"],

Cell["\<\
Ora abbiamo capito cosa vuol dire il termine noto sul grafico, ma il \
coefficiente di primo grado m come si traduce sul grafico?\
\>", "Text",
 CellChangeTimes->{{3.734504552225568*^9, 3.7345045605891476`*^9}, 
   3.7363284323738613`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"m", "*", "x"}], "-", "2"}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", " ", 
       RowBox[{"+", "3"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"10", ",", " ", 
        RowBox[{"-", "10"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"m", " ", "*", "x"}], "-", "2"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", " ", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7345045914906626`*^9, 3.7345046146448374`*^9}, {
   3.73510672993303*^9, 3.735106736951003*^9}, {3.735538197118265*^9, 
   3.7355382234498577`*^9}, {3.735638973958352*^9, 3.735638984351574*^9}, 
   3.735639015029039*^9, {3.7361736960772824`*^9, 3.7361737037804036`*^9}, {
   3.736176854591934*^9, 3.7361768652255974`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`m$$], -10, 10}}, Typeset`size$$ = {
    432., {146., 152.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`m$65466$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`m$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`m$$, $CellContext`m$65466$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`m$$ $CellContext`x - 2, {$CellContext`x, -3, 
         Plus[3]}, PlotRange -> {10, -10}, 
        PlotLabel -> $CellContext`m$$ $CellContext`x - 2], 
      "Specifications" :> {{$CellContext`m$$, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{489., {198., 205.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.736189250932745*^9, 3.7363282542618914`*^9, 
  3.7363285121051736`*^9, 3.736623337919858*^9, 3.7366234722770925`*^9, 
  3.73667152765209*^9, 3.7366717040624976`*^9, 3.7366720277737913`*^9, 
  3.736672078578866*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EventHandler", "[", 
   RowBox[{
    RowBox[{"MouseAppearance", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Hai dubbi su come cambia il grafico quando cambia m?\
\[CloseCurlyDoubleQuote] \>\"", ",", 
        RowBox[{"FontColor", "\[Rule]", "Blue"}]}], "]"}], ",", "LinkHand"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<MouseClicked\>\"", "\[RuleDelayed]", "  ", 
      RowBox[{
      "MessageDialog", "[", 
       "\"\<Il coefficiente di primo grado indica \
l\[CloseCurlyQuote]inclinazione del grafico rispetto \
all\[CloseCurlyQuote]asse X\>\"", "]"}]}], "}"}]}], "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.734506466452481*^9, 3.7345064958257895`*^9}, {
  3.7361737099675193`*^9, 3.736173715801598*^9}, {3.7361768588575587`*^9, 
  3.7361768687656217`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia m?\
\[CloseCurlyDoubleQuote] \"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "Il coefficiente di primo grado indica l\[CloseCurlyQuote]inclinazione \
del grafico rispetto all\[CloseCurlyQuote]asse X"], Method -> "Preemptive", 
    PassEventsDown -> Automatic, PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{3.736189250982545*^9, 3.7363282545900183`*^9, 
  3.736328512402116*^9, 3.7366233381775913`*^9, 3.736623472561797*^9, 
  3.7366715280862956`*^9, 3.7366717044412994`*^9, 3.736672028123992*^9, 
  3.736672078923467*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione del caso particolare", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}}],

Cell[TextData[{
 "Hai notato cosa cambia se ",
 StyleBox["m",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " < 0 o ",
 StyleBox["m",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " > 0?"
}], "Text",
 CellChangeTimes->{{3.734506649536941*^9, 3.734506671161417*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{
        RowBox[{"StatusArea", "[", 
         RowBox[{
          RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
          "\"\<CP_1_A\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
          "\"\<CP_1_A\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<No\>\"", ",", " ", 
        RowBox[{"p2", " ", "=", " ", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"p2", " ", "===", " ", "1"}], ",", "  ", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "x"}], "+", "2"}], ",", 
           RowBox[{"x", "+", "2"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"+", "5"}]}], "}"}], ",", " ", 
         RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
         
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], 
       RowBox[{
       "Text", "[", 
        "\"\<Come puoi vedere i grafici formano con l\[CloseCurlyQuote]asse X \
angoli acuti se m>0 e ottusi se m<0\>\"", "]"}]}], ",", " ", 
      RowBox[{"Text", "[", "\"\<\>\"", "]"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7345068076352158`*^9, 3.734506848009202*^9}, {
  3.734506903390159*^9, 3.734506908798191*^9}, {3.7345069573351603`*^9, 
  3.734506988873291*^9}, {3.7361737435490975`*^9, 3.7361737719769535`*^9}, {
  3.7361768759566717`*^9, 3.7361768810257034`*^9}, {3.736181184679615*^9, 
  3.736181186286641*^9}, {3.736187648058798*^9, 3.7361878248691483`*^9}, {
  3.736187878846061*^9, 3.7361879525090733`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
          Automatic, Method -> "Preemptive"], StatusArea[#, "CP_1_A"]& , 
         TagBoxNote -> "CP_1_A"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
           Automatic, Method -> "Preemptive"], StatusArea[#, "CP_1_A"]& , 
          TagBoxNote -> "CP_1_A"], {"HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "CP_1_A"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "CP_1_A"}, "Hyperlink"]& ],
   "\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> (MClib`p2 = 1), Appearance -> Automatic, 
    Evaluator -> Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.736189251076145*^9, 3.736328254668151*^9, 
  3.736328512448964*^9, 3.736623338245519*^9, 3.7366234726596947`*^9, 
  3.736671528148696*^9, 3.7366717045192995`*^9, 3.7366720282029924`*^9, 
  3.73667207899967*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[MClib`p2 === 1, 
    Plot[{-$CellContext`x + 2, $CellContext`x + 2}, {$CellContext`x, -5, 
       Plus[5]}, PlotLegends -> "Expressions", ImageSize -> Medium] 
    Text["Come puoi vedere i grafici formano con l\[CloseCurlyQuote]asse X \
angoli acuti se m>0 e ottusi se m<0"], 
    Text[""]], StandardForm],
  ImageSizeCache->{0., {3., 15.}}]], "Output",
 CellChangeTimes->{3.736189251076145*^9, 3.736328254668151*^9, 
  3.736328512448964*^9, 3.736623338245519*^9, 3.7366234726596947`*^9, 
  3.736671528148696*^9, 3.7366717045192995`*^9, 3.7366720282029924`*^9, 
  3.73667207901527*^9}]
}, {2, 3}]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.734506614627508*^9, 3.7345066303487577`*^9}, 
   3.73618797256011*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione del caso particolare", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}},
 CellTags->"CP_1_A"],

Cell["Hai notato cosa succede se m = 0?", "Text",
 CellChangeTimes->{{3.7345070642719755`*^9, 3.734507089364261*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{
        RowBox[{"StatusArea", "[", 
         RowBox[{
          RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
          "\"\<CP_1_K\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
          "\"\<CP_1_K\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<No\>\"", ",", " ", 
        RowBox[{"p3", " ", "=", " ", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"p3", " ", "===", " ", "1"}], ",", "  ", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"0", "x"}], "+", "1"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"+", "5"}]}], "}"}], ",", " ", 
         RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
         
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], 
       RowBox[{
       "Text", "[", 
        "\"\<Come puoi vedere il grafico \[EGrave] parallelo all'asse X\>\"", 
        "]"}]}], ",", " ", 
      RowBox[{"Text", "[", "\"\<\>\"", "]"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.734507111197999*^9, 3.734507112701412*^9}, {
   3.7345071435683517`*^9, 3.734507165341338*^9}, {3.7345071962081976`*^9, 
   3.7345072007563524`*^9}, {3.7346882819498606`*^9, 3.734688302109898*^9}, {
   3.7361737822351484`*^9, 3.736173790224309*^9}, {3.736176886765742*^9, 
   3.7361768926267776`*^9}, {3.736181121546026*^9, 3.736181164010709*^9}, {
   3.736188011113003*^9, 3.7361880814503365`*^9}, 3.7363285024170933`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
          Automatic, Method -> "Preemptive"], StatusArea[#, "CP_1_K"]& , 
         TagBoxNote -> "CP_1_K"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
           Automatic, Method -> "Preemptive"], StatusArea[#, "CP_1_K"]& , 
          TagBoxNote -> "CP_1_K"], {"HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "CP_1_K"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "CP_1_K"}, "Hyperlink"]& ],
   "\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> (MClib`p3 = 1), Appearance -> Automatic, 
    Evaluator -> Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7361892511385455`*^9, 3.7363282548087926`*^9, 
  3.736328512495841*^9, 3.7366233384133444`*^9, 3.7366234727585945`*^9, 
  3.7366715283056965`*^9, 3.736671704600701*^9, 3.7366720282965927`*^9, 
  3.7366720791002703`*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[MClib`p3 === 1, Plot[0 $CellContext`x + 1, {$CellContext`x, -5, 
       Plus[5]}, PlotLegends -> "Expressions", ImageSize -> Medium] 
    Text["Come puoi vedere il grafico \[EGrave] parallelo all'asse X"], 
    Text[""]], StandardForm],
  ImageSizeCache->{0., {3., 15.}}]], "Output",
 CellChangeTimes->{3.7361892511385455`*^9, 3.7363282548087926`*^9, 
  3.736328512495841*^9, 3.7366233384133444`*^9, 3.7366234727585945`*^9, 
  3.7366715283056965`*^9, 3.736671704600701*^9, 3.7366720282965927`*^9, 
  3.7366720791022706`*^9}]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Caso particolare ",
 StyleBox["x",
  FontWeight->"Bold"],
 "=",
 StyleBox["k",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345073172201977`*^9, 3.7345073271699533`*^9}, {3.7356150225635386`*^9, 
   3.7356150230635576`*^9}},
 CellTags->"CP_1_K"],

Cell["\<\
Prima di farti sperimentare liberamente bisogna riflettere su un caso.

Il caso delle rette verticali che sono della forma x=k con k che \[EGrave] un \
qualunque numero.\
\>", "Text",
 CellChangeTimes->{{3.7345074035608597`*^9, 3.734507428474025*^9}, {
  3.7345074742876225`*^9, 3.734507485146605*^9}, {3.735615025595121*^9, 
  3.735615026785215*^9}, {3.736328600561387*^9, 3.736328642481745*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.736328644981886*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"-", "10"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", 
          RowBox[{"+", "4"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", 
          RowBox[{"+", "4"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<x = \>\"", ",", 
        RowBox[{"ToString", "[", "k", "]"}]}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"-", "3.5"}], ",", "3.5"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}], "\[IndentingNewLine]"}], "Input",\

 CellChangeTimes->{{3.734507514570382*^9, 3.7345075961520786`*^9}, {
   3.734582346171256*^9, 3.734582377141985*^9}, {3.734582416390339*^9, 
   3.734582416671611*^9}, {3.7345825612635975`*^9, 3.7345825642996535`*^9}, {
   3.734582704667713*^9, 3.73458270951155*^9}, 3.7345842987816615`*^9, {
   3.7361737980464263`*^9, 3.7361738047625475`*^9}, {3.7361768986558204`*^9, 
   3.7361769044568577`*^9}, {3.736188173891816*^9, 3.736188229537935*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = -3.5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`k$$], -3.5, 3.5}}, Typeset`size$$ = {
    432., {143., 149.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`k$65548$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`k$$ = -3.5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$65548$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ListLinePlot[{{$CellContext`k$$, 10}, {$CellContext`k$$, -10}}, 
        PlotRange -> {{-4, 
           Plus[4]}, {-4, 
           Plus[4]}}, PlotLabel -> StringJoin["x = ", 
          ToString[$CellContext`k$$]]], 
      "Specifications" :> {{$CellContext`k$$, -3.5, 3.5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{489., {195., 202.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7361892512165456`*^9, 3.7363282548556724`*^9, 
  3.736328512573974*^9, 3.7366233384812737`*^9, 3.7366234728614845`*^9, 
  3.736671528403499*^9, 3.736671704725501*^9, 3.7366720283745923`*^9, 
  3.736672079195871*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Ora tocca a te!", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}},
 CellTags->"TS1"],

Cell["\<\
Inserisci tu le rette e osserva come sono rappresentate graficamente. Puoi \
confrontare contemporaneamente 5 funzioni polinomiali.

Per farlo inserisci una equazione nella forma \[OpenCurlyDoubleQuote]m x + q\
\[CloseCurlyDoubleQuote], poi premi su confronta per generare il grafico.\
\>", "Text",
 CellChangeTimes->{{3.734584475422347*^9, 3.734584492542039*^9}, {
  3.735617767314522*^9, 3.7356177777218285`*^9}, {3.736328705721281*^9, 
  3.7363287849490795`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.734584857448537*^9, 3.7345849042009277`*^9}, 
   3.7345850186656656`*^9, {3.734585118813517*^9, 3.7345851198601613`*^9}, {
   3.73471729962276*^9, 3.7347173329840403`*^9}, {3.7347182374531965`*^9, 
   3.734718289241253*^9}, 3.7361738297470036`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Panel", "[", 
    RowBox[{"Column", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"InputField", "[", 
           RowBox[{
            RowBox[{"Dynamic", "[", "currentEq", "]"}], ",", "String"}], 
           "]"}], ",", 
          RowBox[{"Button", "[", 
           RowBox[{"\"\<Confronta\>\"", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "freeEq", "]"}], "<", "5"}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"freeEq", ",", 
                RowBox[{"ToExpression", "[", "currentEq", "]"}]}], "]"}], ",", 
              RowBox[{
              "MessageDialog", "[", 
               "\"\<Hai gi\[AGrave] inserito 5 grafici, eliminane uno prima \
di aggiungerne uno nuovo!\>\"", "]"}]}], "]"}]}], "]"}]}], "}"}], "]"}], ",", 
       
       RowBox[{"Dynamic", "[", 
        RowBox[{"Row", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", "=", "i"}], "}"}], ",", 
             RowBox[{"Column", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"freeEq", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"x", ",", 
                    RowBox[{"-", "10"}], ",", 
                    RowBox[{"+", "10"}]}], "}"}], ",", 
                  RowBox[{"PlotLabel", "\[Rule]", 
                   RowBox[{"ToString", "[", 
                    RowBox[{"freeEq", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
                  RowBox[{"ImageSize", "->", "Small"}]}], "]"}], ",", 
                "\"\<\\t\>\"", ",", 
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<Elimina\>\"", ",", 
                  RowBox[{"freeEq", "=", 
                   RowBox[{"Delete", "[", 
                    RowBox[{"freeEq", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{"freeEq", ",", 
                    RowBox[{"freeEq", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
                 "]"}]}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "freeEq", "]"}]}], "}"}]}], "]"}], "]"}], 
        "]"}]}], "}"}], "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Drawing", " ", "the", " ", "list", " ", "of", " ", "the", " ", 
      "functions", " ", "that", " ", "the", " ", "user", " ", "want", " ", 
      "to", " ", "compare"}], ",", " ", 
     RowBox[{
      RowBox[{
      "Delete", " ", "button", " ", "allow", " ", "to", " ", "remove", " ", 
       "that", " ", "expression", " ", "from", " ", "the", " ", "list"}], ";",
       " ", 
      RowBox[{"TODO", " ", "Insert", " ", "in", " ", "package"}]}]}], " ", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.734584951884784*^9, 3.7345850128410425`*^9}, {
   3.7345851132292385`*^9, 3.7345851636351585`*^9}, {3.734585199782674*^9, 
   3.7345853225816307`*^9}, {3.7345854156036406`*^9, 
   3.7345854156973734`*^9}, {3.7345855715627775`*^9, 3.734585626903761*^9}, {
   3.734585774165642*^9, 3.734585813173481*^9}, {3.7345858895678377`*^9, 
   3.734585898401967*^9}, {3.7345859757360353`*^9, 3.734586001901822*^9}, {
   3.7345860476343837`*^9, 3.734586080791399*^9}, {3.734586306933238*^9, 
   3.734586340685607*^9}, {3.734586437509316*^9, 3.7345864543649907`*^9}, {
   3.7345885853640985`*^9, 3.734588620322151*^9}, {3.7345887586137147`*^9, 
   3.7345888022991247`*^9}, {3.7345888414401913`*^9, 
   3.7345888436347003`*^9}, {3.7345891346816206`*^9, 
   3.7345892176112394`*^9}, {3.734717406554085*^9, 3.7347174167461433`*^9}, {
   3.7347184408642807`*^9, 3.734718500298196*^9}, {3.7361738231498876`*^9, 
   3.7361738571574883`*^9}, {3.736176911823906*^9, 3.7361769231239843`*^9}, 
   3.7361783744756193`*^9}],

Cell[BoxData[
 PanelBox[
  TagBox[GridBox[{
     {
      TemplateBox[{InputFieldBox[
         Dynamic[MClib`currentEq], String],ButtonBox[
        "\"Confronta\"", ButtonFunction :> If[Length[MClib`freeEq] < 5, 
           AppendTo[MClib`freeEq, 
            ToExpression[MClib`currentEq]], 
           MessageDialog[
           "Hai gi\[AGrave] inserito 5 grafici, eliminane uno prima di \
aggiungerne uno nuovo!"]], Appearance -> Automatic, Evaluator -> Automatic, 
         Method -> "Preemptive"]},
       "RowDefault"]},
     {
      DynamicBox[ToBoxes[
        Row[
         Table[
          With[{$CellContext`i = $CellContext`i}, 
           Column[{
             Plot[
              Part[MClib`freeEq, $CellContext`i], {$CellContext`x, -10, 
               Plus[10]}, PlotLabel -> ToString[
                Part[MClib`freeEq, $CellContext`i]], ImageSize -> Small], 
             "\t", 
             Button["Elimina", MClib`freeEq = Delete[MClib`freeEq, 
                Position[MClib`freeEq, 
                 Part[MClib`freeEq, $CellContext`i]]]]}]], {$CellContext`i, 
           Length[MClib`freeEq]}]], StandardForm],
       ImageSizeCache->{4., {0., 0.}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"]]], "Output",
 CellChangeTimes->{3.7361892516789465`*^9, 3.736328255402604*^9, 
  3.7363285130271473`*^9, 3.736623339039693*^9, 3.736623473335991*^9, 
  3.7366715291233034`*^9, 3.736671705230504*^9, 3.736672028853999*^9, 
  3.7366720797250733`*^9}]
}, {2}]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.73471742952279*^9, 3.7352930309730864`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Print", "[", "\"\<Ti senti pronto per gli esercizi?\>\"", "]"}],
      ";", 
     RowBox[{"Hyperlink", "[", 
      RowBox[{
       RowBox[{"StatusArea", "[", 
        RowBox[{
         RowBox[{"Button", "[", "\"\<Vai Esercizi\>\"", "]"}], ",", " ", 
         "\"\<ES_G1\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
         "\"\<ES_G1\>\""}], "}"}]}], "]"}]}], ",", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Torna alla teoria\>\"", "]"}], ",", " ", 
        "\"\<E_G1\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<E_G1\>\""}], 
       "}"}]}], "]"}]}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7352970565647717`*^9, 3.735297060318987*^9}, {
  3.735644349261085*^9, 3.735644417952014*^9}, {3.7356444615645084`*^9, 
  3.73564447138807*^9}, {3.736173860727552*^9, 3.7361738673546762`*^9}, {
  3.7361739149534874`*^9, 3.736173969078026*^9}, {3.7361769273624105`*^9, 
  3.736176928140813*^9}}],

Cell[BoxData["\<\"Ti senti pronto per gli esercizi?\"\>"], "Print",
 CellChangeTimes->{3.736189251788147*^9, 3.736328255637003*^9, 
  3.7363285131834497`*^9, 3.7366233392254996`*^9, 3.7366234734448776`*^9, 
  3.736671529478108*^9, 3.7366717053397045`*^9, 3.7366720289671993`*^9, 
  3.7366720798186736`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Vai Esercizi\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "ES_G1"]& , TagBoxNote -> "ES_G1"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Vai Esercizi\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "ES_G1"]& , TagBoxNote -> "ES_G1"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "ES_G1"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "ES_G1"}, "Hyperlink"]& ],TagBox[
   
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Torna alla teoria\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "E_G1"]& , TagBoxNote -> "E_G1"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Torna alla teoria\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "E_G1"]& , TagBoxNote -> "E_G1"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "E_G1"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "E_G1"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.736189251803747*^9, 3.736328255637003*^9, 
  3.7363285131990414`*^9, 3.7366233392384863`*^9, 3.736623473502818*^9, 
  3.7366715294937077`*^9, 3.7366717053553042`*^9, 3.7366720289782004`*^9, 
  3.7366720798342733`*^9}]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Esercizi Tipologia 1", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}, {3.7346172310281005`*^9, 3.734617241201078*^9}, {
   3.735325637656559*^9, 3.7353256409337463`*^9}},
 CellTags->"ES_G1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"exKindAPrinter", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7353168024791183`*^9, 3.7353168092373366`*^9}, {
  3.7353202561333475`*^9, 3.735320256261397*^9}, {3.7353203640198593`*^9, 
  3.7353204352493*^9}, {3.7353205145786686`*^9, 3.7353205151460953`*^9}, {
  3.735320627042025*^9, 3.7353206276225863`*^9}, {3.7353220918861217`*^9, 
  3.7353220920757794`*^9}, {3.735322893961685*^9, 3.735322894172697*^9}, {
  3.7361739962524805`*^9, 3.7361740396717896`*^9}, {3.7361769342622395`*^9, 
  3.7361769391632605`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            StyleBox[
            "\"A quale funzione corrisponde la seguente retta?\"", FontWeight -> 
             Bold, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TemplateBox[{"\"Zoom sugli zeri:\"", 
                  TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$65745 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 1, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$65745 = 1; 
                    MClib`Private`y$65745 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$65745, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                   "RowDefault"]}, "RowDefault"]}, {
                TemplateBox[{
                  DynamicBox[
                   ToBoxes[
                    Plot[
                    Part[
                    MClib`teacherEQ, 1, 1], {$CellContext`x, 
                    MClib`Private`y$65745 - MClib`Private`j$65745, 
                    MClib`Private`y$65745 + MClib`Private`j$65745}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                ButtonBox[
                "\"Reset Zoom\"", 
                 ButtonFunction :> (MClib`Private`j$65745 = 5; 
                  MClib`Private`y$65745 = 0), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]}, {
            DynamicBox[
             ToBoxes[
              RadioButtonBar[
               Dynamic[
                Part[MClib`userAnswer, 1, 1]], 
               Part[MClib`exercises, 1, 1], Enabled -> Dynamic[
                 Part[MClib`enableAnswer, 1, 1]]], StandardForm]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            StyleBox[
            "\"A quale funzione corrisponde la seguente retta?\"", FontWeight -> 
             Bold, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TemplateBox[{"\"Zoom sugli zeri:\"", 
                  TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$65746 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 1, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$65746 = 1; 
                    MClib`Private`y$65746 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$65746, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                   "RowDefault"]}, "RowDefault"]}, {
                TemplateBox[{
                  DynamicBox[
                   ToBoxes[
                    Plot[
                    Part[
                    MClib`teacherEQ, 1, 2], {$CellContext`x, 
                    MClib`Private`y$65746 - MClib`Private`j$65746, 
                    MClib`Private`y$65746 + MClib`Private`j$65746}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                ButtonBox[
                "\"Reset Zoom\"", 
                 ButtonFunction :> (MClib`Private`j$65746 = 5; 
                  MClib`Private`y$65746 = 0), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]}, {
            DynamicBox[
             ToBoxes[
              RadioButtonBar[
               Dynamic[
                Part[MClib`userAnswer, 1, 2]], 
               Part[MClib`exercises, 1, 2], Enabled -> Dynamic[
                 Part[MClib`enableAnswer, 1, 2]]], StandardForm]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            StyleBox[
            "\"A quale funzione corrisponde la seguente retta?\"", FontWeight -> 
             Bold, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TemplateBox[{"\"Zoom sugli zeri:\"", 
                  TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$65747 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 1, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$65747 = 1; 
                    MClib`Private`y$65747 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$65747, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                   "RowDefault"]}, "RowDefault"]}, {
                TemplateBox[{
                  DynamicBox[
                   ToBoxes[
                    Plot[
                    Part[
                    MClib`teacherEQ, 1, 3], {$CellContext`x, 
                    MClib`Private`y$65747 - MClib`Private`j$65747, 
                    MClib`Private`y$65747 + MClib`Private`j$65747}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                ButtonBox[
                "\"Reset Zoom\"", 
                 ButtonFunction :> (MClib`Private`j$65747 = 5; 
                  MClib`Private`y$65747 = 0), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]}, {
            DynamicBox[
             ToBoxes[
              RadioButtonBar[
               Dynamic[
                Part[MClib`userAnswer, 1, 3]], 
               Part[MClib`exercises, 1, 3], Enabled -> Dynamic[
                 Part[MClib`enableAnswer, 1, 3]]], StandardForm]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7361892551149583`*^9, 3.736328255730765*^9, 
  3.7363285141523056`*^9, 3.7366233393363843`*^9, 3.7366234742330585`*^9, 
  3.73667152966711*^9, 3.736671706284711*^9, 3.736672029962205*^9, 
  3.736672080820882*^9}]
}, {2}]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.735238490927022*^9, 3.735238499487774*^9}, {
   3.7352386841935987`*^9, 3.7352387062841234`*^9}, {3.7352389664544*^9, 
   3.735238968538827*^9}, {3.735315766741535*^9, 3.735315773644414*^9}, {
   3.7353158810044765`*^9, 3.735315912948639*^9}, {3.7353162377323165`*^9, 
   3.735316237880562*^9}, {3.7353167330795016`*^9, 3.7353167367092404`*^9}, {
   3.7353206368574853`*^9, 3.7353206513672314`*^9}, {3.735322907116438*^9, 
   3.735322907225444*^9}, 3.7353256502212777`*^9, 3.7353258556770287`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{"Dynamic", "[", 
    RowBox[{"Button", "[", 
     RowBox[{"\"\<Verifica\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"userAnswer", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", "===", "   ", "0"}], 
         "  ", "||", " ", 
         RowBox[{
          RowBox[{"userAnswer", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "===", " ", "0"}], 
         " ", "||", " ", 
         RowBox[{
          RowBox[{"userAnswer", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "3"}], "]"}], "]"}], " ", "===", "  ", "0"}]}], 
        ",", "  ", 
        RowBox[{
        "MessageDialog", "[", 
         "\"\<Rispondi a tutte le domande prima di verificare\>\"", "]"}], 
        " ", ",", " ", 
        RowBox[{
         RowBox[{"checkAnswer", "[", "1", "]"}], ";", " ", 
         RowBox[{"clicked", " ", "=", "1"}]}]}], "]"}]}], " ", "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.735325793403467*^9, 3.7353258375029893`*^9}, {
   3.735326573637094*^9, 3.7353267804769244`*^9}, {3.735326834974042*^9, 
   3.735326910637369*^9}, {3.735326983225521*^9, 3.7353270246158886`*^9}, {
   3.7353270561606927`*^9, 3.735327068983426*^9}, {3.7361740579521294`*^9, 
   3.7361740836956224`*^9}, {3.736176943917291*^9, 3.7361769518673534`*^9}, 
   3.7361785044478564`*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Button["Verifica", 
    If[
     Or[Part[MClib`userAnswer, 1, 1] === 0, Part[MClib`userAnswer, 1, 2] === 
      0, Part[MClib`userAnswer, 1, 3] === 0], 
     MessageDialog["Rispondi a tutte le domande prima di verificare"], 
     MClib`checkAnswer[1]; MClib`clicked = 1]], StandardForm],
  ImageSizeCache->{54., {9., 20.}}]], "Output",
 CellChangeTimes->{3.736189255244959*^9, 3.7363282599499636`*^9, 
  3.736328518215232*^9, 3.736623342187419*^9, 3.7366234771300445`*^9, 
  3.73667153376033*^9, 3.7366717103829355`*^9, 3.7366720340330315`*^9, 
  3.736672084911908*^9}],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.735325825904326*^9, 3.7353258407921777`*^9}, {
  3.7353259549577074`*^9, 3.7353260188043594`*^9}}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dynamic", "[", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"clicked", " ", "===", " ", "1"}], ",", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Vai alla prossima sezione\>\"", "]"}], 
        ",", "\"\<ES_G1_B\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
        "\"\<ES_G1_B\>\""}], "}"}]}], "]"}], ",", " ", 
    "\"\<Verifica la risposta prima di passare alla prossima sezione\>\""}], 
   "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7346967420957303`*^9, 3.7346967588950157`*^9}, {
   3.73469767419576*^9, 3.734697737120322*^9}, {3.7346978213097963`*^9, 
   3.7346978422941136`*^9}, {3.734697921733178*^9, 3.734697927363409*^9}, 
   3.7346980307122602`*^9, {3.734698146626672*^9, 3.734698185636639*^9}, {
   3.7346983076326*^9, 3.73469831888916*^9}, {3.7347007312495213`*^9, 
   3.734700732212577*^9}, {3.7347023770532074`*^9, 3.7347023778370113`*^9}, {
   3.734702440994263*^9, 3.734702472380178*^9}, {3.7347027855756793`*^9, 
   3.73470280855837*^9}, {3.734703015503701*^9, 3.734703036002659*^9}, 
   3.7353263347674313`*^9, {3.7353263990051055`*^9, 3.7353264039403877`*^9}, {
   3.735326705374629*^9, 3.735326707204734*^9}, {3.7353268102456274`*^9, 
   3.7353268132417984`*^9}, {3.7361740911912236`*^9, 
   3.7361740977973075`*^9}, {3.736176957177389*^9, 3.7361769631584325`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[MClib`clicked === 1, 
    Hyperlink[
     StatusArea[
      Button["Vai alla prossima sezione"], "ES_G1_B"], {
      EvaluationNotebook[], "ES_G1_B"}], 
    "Verifica la risposta prima di passare alla prossima sezione"], 
   StandardForm],
  ImageSizeCache->{531., {3., 11.}}]], "Output",
 CellChangeTimes->{3.736189255304959*^9, 3.7363282604031377`*^9, 
  3.7363285182620792`*^9, 3.736623342470128*^9, 3.7366234771849875`*^9, 
  3.7366715341709356`*^9, 3.7366717104365377`*^9, 3.7366720341110315`*^9, 
  3.7366720849753084`*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Esercizi Tipologia 2", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}, {3.7346172310281005`*^9, 3.734617241201078*^9}, {
   3.735325637656559*^9, 3.7353256409337463`*^9}, {3.7353277372036457`*^9, 
   3.735327737339654*^9}},
 CellTags->"ES_G1_B"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"exKindBPrinter", "[", "2", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7353257505650167`*^9, 3.7353257785136156`*^9}, {
  3.7361741098873467`*^9, 3.7361741157574463`*^9}, {3.73617696868847*^9, 
  3.7361769737585*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            DynamicBox[
             ToBoxes[
              Style[
               StringJoin[
                ToString[
                 Part[MClib`teacherEQ, 2, 1]], " \t Qual e' il suo grafico?"],
                FontWeight -> Bold], StandardForm]]}, {
            TemplateBox[{
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 1]], 
                   Part[MClib`exercises, 2, 1, 1], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$66589 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 1, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$66589 = 1; 
                    MClib`Private`y$66589 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$66589, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 1, 1], {$CellContext`x, 
                    MClib`Private`y$66589 - MClib`Private`j$66589, 
                    MClib`Private`y$66589 + MClib`Private`j$66589}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$66589 = 5; 
                    MClib`Private`y$66589 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 1]], 
                   Part[MClib`exercises, 2, 1, 2], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$66590 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 1, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$66590 = 1; 
                    MClib`Private`y$66590 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$66590, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 1, 2], {$CellContext`x, 
                    MClib`Private`y$66590 - MClib`Private`j$66590, 
                    MClib`Private`y$66590 + MClib`Private`j$66590}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$66590 = 5; 
                    MClib`Private`y$66590 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 1]], 
                   Part[MClib`exercises, 2, 1, 3], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$66591 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 1, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$66591 = 1; 
                    MClib`Private`y$66591 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$66591, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 1, 3], {$CellContext`x, 
                    MClib`Private`y$66591 - MClib`Private`j$66591, 
                    MClib`Private`y$66591 + MClib`Private`j$66591}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$66591 = 5; 
                    MClib`Private`y$66591 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 1]], 
                   Part[MClib`exercises, 2, 1, 4], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$66592 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 1, 4] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$66592 = 1; 
                    MClib`Private`y$66592 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$66592, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 1, 4], {$CellContext`x, 
                    MClib`Private`y$66592 - MClib`Private`j$66592, 
                    MClib`Private`y$66592 + MClib`Private`j$66592}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$66592 = 5; 
                    MClib`Private`y$66592 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            DynamicBox[
             ToBoxes[
              Style[
               StringJoin[
                ToString[
                 Part[MClib`teacherEQ, 2, 2]], " \t Qual e' il suo grafico?"],
                FontWeight -> Bold], StandardForm]]}, {
            TemplateBox[{
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 2]], 
                   Part[MClib`exercises, 2, 2, 1], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$66593 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 2, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$66593 = 1; 
                    MClib`Private`y$66593 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$66593, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 2, 1], {$CellContext`x, 
                    MClib`Private`y$66593 - MClib`Private`j$66593, 
                    MClib`Private`y$66593 + MClib`Private`j$66593}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$66593 = 5; 
                    MClib`Private`y$66593 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 2]], 
                   Part[MClib`exercises, 2, 2, 2], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$66594 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 2, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$66594 = 1; 
                    MClib`Private`y$66594 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$66594, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 2, 2], {$CellContext`x, 
                    MClib`Private`y$66594 - MClib`Private`j$66594, 
                    MClib`Private`y$66594 + MClib`Private`j$66594}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$66594 = 5; 
                    MClib`Private`y$66594 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 2]], 
                   Part[MClib`exercises, 2, 2, 3], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$66595 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 2, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$66595 = 1; 
                    MClib`Private`y$66595 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$66595, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 2, 3], {$CellContext`x, 
                    MClib`Private`y$66595 - MClib`Private`j$66595, 
                    MClib`Private`y$66595 + MClib`Private`j$66595}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$66595 = 5; 
                    MClib`Private`y$66595 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 2]], 
                   Part[MClib`exercises, 2, 2, 4], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$66596 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 2, 4] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$66596 = 1; 
                    MClib`Private`y$66596 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$66596, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 2, 4], {$CellContext`x, 
                    MClib`Private`y$66596 - MClib`Private`j$66596, 
                    MClib`Private`y$66596 + MClib`Private`j$66596}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$66596 = 5; 
                    MClib`Private`y$66596 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            DynamicBox[
             ToBoxes[
              Style[
               StringJoin[
                ToString[
                 Part[MClib`teacherEQ, 2, 3]], " \t Qual e' il suo grafico?"],
                FontWeight -> Bold], StandardForm]]}, {
            TemplateBox[{
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 3]], 
                   Part[MClib`exercises, 2, 3, 1], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$66597 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 3, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$66597 = 1; 
                    MClib`Private`y$66597 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$66597, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 3, 1], {$CellContext`x, 
                    MClib`Private`y$66597 - MClib`Private`j$66597, 
                    MClib`Private`y$66597 + MClib`Private`j$66597}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$66597 = 5; 
                    MClib`Private`y$66597 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 3]], 
                   Part[MClib`exercises, 2, 3, 2], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$66598 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 3, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$66598 = 1; 
                    MClib`Private`y$66598 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$66598, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 3, 2], {$CellContext`x, 
                    MClib`Private`y$66598 - MClib`Private`j$66598, 
                    MClib`Private`y$66598 + MClib`Private`j$66598}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$66598 = 5; 
                    MClib`Private`y$66598 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 3]], 
                   Part[MClib`exercises, 2, 3, 3], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$66599 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 3, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$66599 = 1; 
                    MClib`Private`y$66599 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$66599, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 3, 3], {$CellContext`x, 
                    MClib`Private`y$66599 - MClib`Private`j$66599, 
                    MClib`Private`y$66599 + MClib`Private`j$66599}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$66599 = 5; 
                    MClib`Private`y$66599 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 2, 3]], 
                   Part[MClib`exercises, 2, 3, 4], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 2, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$66600 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 2, 3, 4] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$66600 = 1; 
                    MClib`Private`y$66600 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$66600, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 2, 3, 4], {$CellContext`x, 
                    MClib`Private`y$66600 - MClib`Private`j$66600, 
                    MClib`Private`y$66600 + MClib`Private`j$66600}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$66600 = 5; 
                    MClib`Private`y$66600 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7361892578519645`*^9, 3.736328264247303*^9, 
  3.736328522903207*^9, 3.736623345149338*^9, 3.736623480422619*^9, 
  3.7366715379191666`*^9, 3.7366717152151685`*^9, 3.7366720387462616`*^9, 
  3.736672089656347*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Dynamic", "[", 
    RowBox[{"Button", "[", 
     RowBox[{"\"\<Verifica\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"userAnswer", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", "===", "   ", "0"}], 
         "  ", "||", " ", 
         RowBox[{
          RowBox[{"userAnswer", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", "===", " ", "0"}], 
         " ", "||", " ", 
         RowBox[{
          RowBox[{"userAnswer", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "3"}], "]"}], "]"}], " ", "===", "  ", "0"}]}], 
        ",", "  ", 
        RowBox[{
        "MessageDialog", "[", 
         "\"\<Rispondi a tutte le domande prima di verificare\>\"", "]"}], 
        " ", ",", " ", 
        RowBox[{
         RowBox[{"checkAnswer", "[", "2", "]"}], ";", " ", 
         RowBox[{"clicked1b", " ", "=", "1"}]}]}], "]"}]}], " ", "]"}], "]"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.735327785856429*^9, 3.7353277860474396`*^9}, {
   3.7353278311640205`*^9, 3.7353278365683293`*^9}, {3.735327909348492*^9, 
   3.735327909427497*^9}, {3.7361741300887403`*^9, 3.7361741420649457`*^9}, {
   3.73617697608852*^9, 3.736176982649561*^9}, 3.736178578061314*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Button["Verifica", 
    If[
     Or[Part[MClib`userAnswer, 2, 1] === 0, Part[MClib`userAnswer, 2, 2] === 
      0, Part[MClib`userAnswer, 2, 3] === 0], 
     MessageDialog["Rispondi a tutte le domande prima di verificare"], 
     MClib`checkAnswer[2]; MClib`clicked1b = 1]], StandardForm],
  ImageSizeCache->{54., {9., 20.}}]], "Output",
 CellChangeTimes->{3.736189257969968*^9, 3.7363282644035625`*^9, 
  3.736328522996958*^9, 3.7366233453001833`*^9, 3.736623480606428*^9, 
  3.736671538075167*^9, 3.736671715335369*^9, 3.7366720388784633`*^9, 
  3.736672089765547*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dynamic", "[", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"clicked1b", "===", " ", "1"}], ",", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Vai alla prossima sezione\>\"", "]"}], 
        ",", "\"\<RS1\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<RS1\>\""}], 
       "}"}]}], "]"}], ",", " ", 
    "\"\<Verifica la risposta prima di passare alla prossima sezione\>\""}], 
   "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7353278151221027`*^9, 3.735327819234338*^9}, {
  3.7353280544767385`*^9, 3.73532806184616*^9}, {3.7361741451300077`*^9, 
  3.736174151496111*^9}, {3.736176985458582*^9, 3.736176990858617*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[MClib`clicked1b === 1, 
    Hyperlink[
     StatusArea[
      Button["Vai alla prossima sezione"], "RS1"], {
      EvaluationNotebook[], "RS1"}], 
    "Verifica la risposta prima di passare alla prossima sezione"], 
   StandardForm],
  ImageSizeCache->{531., {3., 11.}}]], "Output",
 CellChangeTimes->{3.736189258029968*^9, 3.7363282644504414`*^9, 
  3.7363285230438395`*^9, 3.7366233453471317`*^9, 3.736623480670361*^9, 
  3.7366715381375675`*^9, 3.73667171540477*^9, 3.736672038938264*^9, 
  3.7366720898445473`*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Risultati", "Section",
 CellChangeTimes->{{3.7355407420819025`*^9, 3.7355407434311094`*^9}},
 CellTags->"RS1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"correctAnswerG1", " ", "=", "  ", "correctCounter"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "sar\[AGrave]", " ", "uguale", " ", "alla", " ", "correctAnswer", " ", 
    "in", " ", "questo", " ", "momento", " ", "cosi", " ", "da", " ", 
    "salvare", " ", "il", " ", "numero", " ", "di", " ", "risposte", " ", 
    "esatte", " ", "al", " ", "primo", " ", "step"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"correctAnswerG1", "  ", "<", " ", "4"}], ",", " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<Su 6 domande hai risposto correttamente a ``.\>\"", ",", 
      "correctAnswerG1"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{
    "Text", "[", 
     "\"\<volendo puoi proseguire ma sarebbe meglio ripassare un po di teoria \
e poi riprovare gli esercizi\>\"", "]"}]}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<Su 6 domande hai risposto correttamente a ``.\>\"", ",", 
      "correctAnswerG1"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{
    "Text", "[", 
     "\"\<hai compreso bene l\[CloseCurlyQuote]argomento ora puoi proseguire, \
ma se hai ancora qualche dubbio puoi comunque tornare indietro e riguardare \
le equazioni di primo grado\>\"", "]"}]}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Text", "[", "\"\<Qualcosa \[EGrave] andato storto!!\>\"", "]"}]}],
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{
     RowBox[{"StatusArea", "[", 
      RowBox[{
       RowBox[{"Button", "[", "\"\<Torna alla teoria\>\"", "]"}], ",", " ", 
       "\"\<E_G1\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<E_G1\>\""}], 
      "}"}]}], "]"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Row", "[", 
   RowBox[{"{", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Torna all' indice\>\"", "]"}], ",", " ", 
        "\"\<Index\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<Index\>\""}],
        "}"}]}], "]"}], "}"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "in", " ", "questi", " ", "due", " ", "casi", " ", "caso", " ", "si", " ", 
    "chiama", " ", "lu", " ", "funzione", " ", "che", " ", "resetta", " ", 
    "i", " ", "vettori", " ", "nel", " ", "package"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Ricarica Esercizi\>\"", ",", " ", 
    RowBox[{
     RowBox[{"resetGrade", "[", 
      RowBox[{"1", ",", " ", "correctAnswerG1"}], "]"}], ";", " ", 
     RowBox[{"NotebookLocate", "[", "\"\<ES_G1\>\"", "]"}]}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "in", " ", "questi", " ", "due", " ", "casi", " ", "caso", " ", "si", " ", 
    "chiama", " ", "lu", " ", "funzione", " ", "che", " ", "resetta", " ", 
    "i", " ", "vettori", " ", "nel", " ", "package"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{
     RowBox[{"StatusArea", "[", 
      RowBox[{
       RowBox[{"Button", "[", "\"\<Sezione Successiva\>\"", "]"}], ",", " ", 
       "\"\<E_2G\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<E_2G\>\""}], 
      "}"}]}], "]"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}], "\[IndentingNewLine]"}], "Input",\

 CellChangeTimes->{{3.7353281891034384`*^9, 3.7353283107723975`*^9}, {
   3.735328344684337*^9, 3.735328352657793*^9}, {3.7354771997556424`*^9, 
   3.7354772688973784`*^9}, {3.7354900765001726`*^9, 3.735490080952388*^9}, {
   3.7354901336759815`*^9, 3.735490138306198*^9}, {3.735541936977091*^9, 
   3.7355419456693597`*^9}, {3.7361741685834303`*^9, 3.736174189212353*^9}, {
   3.736176997458658*^9, 3.736177003939707*^9}, 3.7361817552744303`*^9}],

Cell[BoxData[
 RowBox[{
  InterpretationBox["\<\"Su 6 domande hai risposto correttamente a \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\).\"\>",
   StringForm["Su 6 domande hai risposto correttamente a ``.", 0],
   Editable->False], " ", 
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"volendo puoi proseguire ma sarebbe meglio ripassare un po di \
teoria e poi riprovare gli esercizi\"\>", TextForm]], "InlineText"],
   Text["volendo puoi proseguire ma sarebbe meglio ripassare un po di teoria \
e poi riprovare gli esercizi"]]}]], "Output",
 CellChangeTimes->{3.736189258079968*^9, 3.736328264481697*^9, 
  3.7363285230907187`*^9, 3.7366233454090676`*^9, 3.736623480833193*^9, 
  3.7366715381999674`*^9, 3.7366717154569707`*^9, 3.7366720390034657`*^9, 
  3.736672089894347*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Torna alla teoria\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "E_G1"]& , TagBoxNote -> "E_G1"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Torna alla teoria\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "E_G1"]& , TagBoxNote -> "E_G1"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "E_G1"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "E_G1"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.736189258079968*^9, 3.736328264481697*^9, 
  3.7363285230907187`*^9, 3.7366233454090676`*^9, 3.736623480833193*^9, 
  3.7366715381999674`*^9, 3.7366717154569707`*^9, 3.7366720390034657`*^9, 
  3.7366720899099474`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Torna all' indice\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "Index"]& , TagBoxNote -> "Index"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Torna all' indice\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "Index"]& , TagBoxNote -> "Index"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "Index"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "Index"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.736189258079968*^9, 3.736328264481697*^9, 
  3.7363285230907187`*^9, 3.7366233454090676`*^9, 3.736623480833193*^9, 
  3.7366715381999674`*^9, 3.7366717154569707`*^9, 3.7366720390034657`*^9, 
  3.7366720899411473`*^9}],

Cell[BoxData[
 ButtonBox["\<\"Ricarica Esercizi\"\>",
  Appearance->Automatic,
  ButtonFunction:>(MClib`resetGrade[1, MClib`correctAnswerG1]; 
   NotebookLocate["ES_G1"]),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{3.736189258079968*^9, 3.736328264481697*^9, 
  3.7363285230907187`*^9, 3.7366233454090676`*^9, 3.736623480833193*^9, 
  3.7366715381999674`*^9, 3.7366717154569707`*^9, 3.7366720390034657`*^9, 
  3.7366720899411473`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Sezione Successiva\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "E_2G"]& , TagBoxNote -> "E_2G"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Sezione Successiva\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "E_2G"]& , TagBoxNote -> "E_2G"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "E_2G"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "E_2G"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.736189258079968*^9, 3.736328264481697*^9, 
  3.7363285230907187`*^9, 3.7366233454090676`*^9, 3.736623480833193*^9, 
  3.7366715381999674`*^9, 3.7366717154569707`*^9, 3.7366720390034657`*^9, 
  3.7366720899567475`*^9}]
}, {2, 3, 4, 5, 6}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[TextData[StyleBox["Funzioni polinomiali di 2 \[Degree]Grado", \
"Section"]], "Text",
 CellChangeTimes->{{3.734265091372779*^9, 3.7342651012527695`*^9}, {
  3.734265291815647*^9, 3.734265291986204*^9}, {3.7356178949013224`*^9, 
  3.7356179003127184`*^9}, {3.7356185397585545`*^9, 3.735618541946703*^9}},
 CellTags->"E_2G"],

Cell[CellGroupData[{

Cell["Introduzione ", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}}],

Cell[TextData[{
 "Le funzioni polinomiali di secondo grado hanno la forma y = a x",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["", "2"], TraditionalForm]]],
 "+ b x + c, ovvero una parabola ma cosa vogliono dire i parametri a, b e c?\n"
}], "Text",
 CellChangeTimes->{
  3.7352937658105516`*^9, {3.735617905828785*^9, 3.735617911282253*^9}, {
   3.7356181413159857`*^9, 3.735618158286865*^9}, {3.7363288130462894`*^9, 
   3.73632882331301*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "*", 
       RowBox[{"x", "^", "2"}]}], "+", 
      RowBox[{"5", "*", "x"}], " ", "+", " ", "8"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "*", 
       RowBox[{"x", "^", "2"}]}], "+", 
      RowBox[{"5", "*", "x"}], " ", "+", " ", "8"}]}], " ", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", " ", 
     RowBox[{"+", "3"}]}], "}"}], ",", " ", 
   RowBox[{"PlotLabels", "\[Rule]", " ", "\"\<Expressions\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7342654412972345`*^9, 3.7342654813045607`*^9}, {
  3.734265544459816*^9, 3.73426556636392*^9}, {3.7355382730891714`*^9, 
  3.7355382905887213`*^9}, {3.735540453320922*^9, 3.735540593768527*^9}, {
  3.7355406366835775`*^9, 3.7355406513496428`*^9}, {3.736174196367521*^9, 
  3.736174203100663*^9}, {3.736177008968747*^9, 3.736177016911784*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$67712#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
/8Og8EoOp9EI+B9w0np+
       "]]},
     Annotation[#, "Charting`Private`Tag$67712#2"]& ]}, {{{}, 
     {GrayLevel[0.4], AbsoluteThickness[0.5], 
      StyleBox[{{
         LineBox[{
          Scaled[{0.02, 0}, {3, 31.99999865306124}], 
           Offset[{3, 0}, Scaled[{0.02, 0}, {3, 31.99999865306124}]], 
           Offset[{7, 0}, Scaled[{0.02, 0}, {3, 31.999296612393888`}]], 
           Offset[{12, 0}, Scaled[{0.02, 0}, {3, 31.999296612393888`}]]}], 
         LineBox[{
          Scaled[{0.02, 0}, {3, 14.000000122448965`}], 
           Offset[{3, 0}, Scaled[{0.02, 0}, {3, 14.000000122448965`}]], 
           Offset[{7, 0}, Scaled[{0.02, 0}, {3, 14.000000117556995`}]], 
           Offset[{12, 0}, Scaled[{0.02, 0}, {3, 14.000000117556995`}]]}]}, {
         InsetBox[
          TagBox[
           RowBox[{
            RowBox[{"1", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"5", " ", "x"}], "+", "8"}],
           HoldForm], Offset[{15, 0}, 
          Scaled[{0.02, 0}, {3, 31.999296612393888}]], ImageScaled[{0, 0.5}]],
          InsetBox[
          TagBox[
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"5", " ", "x"}], "+", "8"}],
           HoldForm], Offset[{15, 0}, 
          Scaled[{0.02, 0}, {3, 14.000000117556995}]], 
          ImageScaled[{0, 0.5}]]}, {}, {}},
       FontColor->GrayLevel[0.4]]}}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 86}, {All, All}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-15.99999865306124, 31.99999865306124}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.736189258359968*^9, 3.7363282647004695`*^9, 
  3.7363285232782383`*^9, 3.7366233457636986`*^9, 3.7366234811248884`*^9, 
  3.736671538681771*^9, 3.7366717156973724`*^9, 3.7366720392540665`*^9, 
  3.736672090177148*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione guidata del parametro c", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.7352940246883583`*^9, 3.7352940263724546`*^9}, {
   3.7355406676783104`*^9, 3.7355406678457127`*^9}},
 CellTags->"CG_G2_PC"],

Cell["\<\
Partiamo cercando di capire cosa rappresenta il c della formula:
\
\>", "Text",
 CellChangeTimes->{3.7352940479846907`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"4", 
       SuperscriptBox["x", "2"]}], "+", " ", "x", "+", " ", "c"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", " ", 
       RowBox[{"+", "3"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"10", ",", " ", 
        RowBox[{"-", "10"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", " ", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", " ", 
       RowBox[{"2", "*", "x"}], "+", " ", "c"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", " ", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AutoCollapse", "[", "]"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Plotting", " ", "an", " ", "example"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7352941158435726`*^9, 3.735294151338602*^9}, {
  3.735538310781869*^9, 3.735538319621705*^9}, {3.7356390384270887`*^9, 
  3.7356390390364895`*^9}, {3.7357031456777425`*^9, 3.735703191896906*^9}, {
  3.736174208605788*^9, 3.736174215032909*^9}, {3.7361770227696095`*^9, 
  3.736177040410522*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], -10, 10}}, Typeset`size$$ = {
    432., {148., 154.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`c$67934$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$67934$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[4 $CellContext`x^2 + $CellContext`x + $CellContext`c$$, \
{$CellContext`x, -3, 
         Plus[3]}, PlotRange -> {10, -10}, 
        PlotLabel -> $CellContext`x^2 + 2 $CellContext`x + $CellContext`c$$], 
      "Specifications" :> {{$CellContext`c$$, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{489., {200., 207.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7361892584299684`*^9, 3.7363282647473493`*^9, 
  3.736328523325121*^9, 3.736623345829629*^9, 3.736623481179831*^9, 
  3.736671538760771*^9, 3.7366717157753725`*^9, 3.736672039327467*^9, 
  3.736672090270748*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"hyperText", "[", 
  RowBox[{
  "\"\<Hai dubbi su come cambia il grafico quando cambia c?\>\"", ",", 
   "\"\<il termine noto c indica l\[CloseCurlyQuote]ordinata del punto di \
intersezione del grafico con l\[CloseCurlyQuote]asse Y\>\"", ",", 
   "LinkHand"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.735294277443815*^9, 3.7352942961028824`*^9}, {
  3.7361742206850185`*^9, 3.7361742290451617`*^9}, {3.736177030379455*^9, 
  3.7361770485605764`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia c?\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "il termine noto c indica l\[CloseCurlyQuote]ordinata del punto di \
intersezione del grafico con l\[CloseCurlyQuote]asse Y"], Method -> 
    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
    True}]]], "Output",
 CellChangeTimes->{3.736189258690971*^9, 3.736328265075508*^9, 
  3.7363285236532784`*^9, 3.736623346116332*^9, 3.736623481429572*^9, 
  3.736671539168174*^9, 3.7366717161215734`*^9, 3.7366720396896687`*^9, 
  3.7366720906493516`*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione del caso particolare", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}},
 CellTags->"E2_CP_C0"],

Cell["\<\
Hai posto attenzione a cosa succede quando c=0?
\
\>", "Text",
 CellChangeTimes->{3.735294396325615*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"   ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Hyperlink", "[", 
         RowBox[{
          RowBox[{"StatusArea", "[", 
           RowBox[{
            RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
            "\"\<CG_G2_PB\>\""}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
            "\"\<CG_G2_PB\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<No\>\"", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"p4", "\[Equal]", " ", "0"}], ",", 
            RowBox[{
             RowBox[{"p4", "=", "1"}], ";", 
             RowBox[{"Print", "[", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["x", "2"], " ", "+", "  ", 
                 RowBox[{"2", "x"}]}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"x", ",", 
                  RowBox[{"-", "5"}], ",", 
                  RowBox[{"+", "5"}]}], "}"}], ",", " ", 
                RowBox[{
                "PlotLegends", "\[Rule]", 
                 "\"\<y = \!\(\*SuperscriptBox[\(x\), \(2\)]\) + 2x\>\""}]}], 
               "]"}], "]"}], ";", " ", 
             RowBox[{
             "Print", "[", 
              "\"\<Come puoi vedere il grafico passa per l' origine\>\"", 
              "]"}]}]}], "]"}]}], "]"}]}], "}"}], "]"}], " ", 
     "\[IndentingNewLine]", 
     RowBox[{"AutoCollapse", "[", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{
        RowBox[{"StatusArea", "[", 
         RowBox[{
          RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
          "\"\<CG_G2_PB\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
          "\"\<CG_G2_PB\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<No\>\"", ",", " ", 
        RowBox[{"p4", " ", "=", " ", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"p4", " ", "===", " ", "1"}], ",", "  ", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], " ", "+", "  ", 
          RowBox[{"2", "x"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"+", "5"}]}], "}"}], ",", " ", 
         RowBox[{
         "PlotLegends", "\[Rule]", 
          "\"\<y = \!\(\*SuperscriptBox[\(x\), \(2\)]\) + 2x\>\""}], ",", " ", 
         RowBox[{"ImageSize", " ", "\[Rule]", " ", "Medium"}]}], "]"}], 
       RowBox[{
       "Text", "[", 
        "\"\<Come puoi vedere il grafico passa per l' origine\>\"", "]"}]}], 
      ",", " ", 
      RowBox[{"Text", "[", "\"\<\>\"", "]"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.735294543784049*^9, {3.735294589004636*^9, 3.735294617019238*^9}, {
   3.7352947191260777`*^9, 3.7352947338249187`*^9}, {3.735294788102023*^9, 
   3.73529483630178*^9}, {3.735294950252298*^9, 3.735294951118347*^9}, {
   3.735295022521431*^9, 3.7352950389733725`*^9}, {3.7352954309297905`*^9, 
   3.735295435380046*^9}, {3.7361742363453116`*^9, 3.7361742534864817`*^9}, {
   3.7361770571806326`*^9, 3.736177063760686*^9}, {3.736178611204712*^9, 
   3.7361786168327494`*^9}, 3.736178686727789*^9, {3.7361787199250145`*^9, 
   3.736178720005015*^9}, {3.7361882423047667`*^9, 3.73618824332479*^9}, {
   3.736188279724348*^9, 3.7361884646987696`*^9}, {3.736188519443096*^9, 
   3.73618855146017*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
          Automatic, Method -> "Preemptive"], StatusArea[#, "CG_G2_PB"]& , 
         TagBoxNote -> "CG_G2_PB"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
           Automatic, Method -> "Preemptive"], StatusArea[#, "CG_G2_PB"]& , 
          TagBoxNote -> "CG_G2_PB"], {"HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "CG_G2_PB"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "CG_G2_PB"}, "Hyperlink"]& ],
   "\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> (MClib`p4 = 1), Appearance -> Automatic, 
    Evaluator -> Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7361892587709713`*^9, 3.7363282651536436`*^9, 
  3.7363285237163935`*^9, 3.7366233461982465`*^9, 3.736623481515482*^9, 
  3.736671539263774*^9, 3.7366717161995735`*^9, 3.7366720397746696`*^9, 
  3.736672090742952*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[MClib`p4 === 1, 
    Plot[$CellContext`x^2 + 2 $CellContext`x, {$CellContext`x, -5, 
       Plus[5]}, PlotLegends -> 
      "y = \!\(\*SuperscriptBox[\(x\), \(2\)]\) + 2x", ImageSize -> Medium] 
    Text["Come puoi vedere il grafico passa per l' origine"], 
    Text[""]], StandardForm],
  ImageSizeCache->{0., {3., 15.}}]], "Output",
 CellChangeTimes->{3.7361892587709713`*^9, 3.7363282651536436`*^9, 
  3.7363285237163935`*^9, 3.7366233461982465`*^9, 3.736623481515482*^9, 
  3.736671539263774*^9, 3.7366717161995735`*^9, 3.7366720397746696`*^9, 
  3.7366720907585516`*^9}]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione guidata del parametro b", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.7352940246883583`*^9, 3.7352940263724546`*^9}, {
   3.7352950820538363`*^9, 3.7352950826698713`*^9}, {3.7355406763015614`*^9, 
   3.7355406765181637`*^9}},
 CellTags->"CG_G2_PB"],

Cell["\<\
Ma il parametro b come si traduce sul grafico?
\
\>", "Text",
 CellChangeTimes->{3.7352951044361167`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], 
       SuperscriptBox["x", "2"]}], "+", " ", 
      RowBox[{"b", "*", "x"}]}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", " ", 
       RowBox[{"+", "3"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"10", ",", " ", 
        RowBox[{"-", "10"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], 
        SuperscriptBox["x", "2"]}], "+", " ", 
       RowBox[{"b", "*", "x"}]}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.735295129079526*^9, 3.7352951688908033`*^9}, {
  3.7355383355281935`*^9, 3.73553834778047*^9}, {3.7356390468371105`*^9, 
  3.7356390511259203`*^9}, {3.7357032159549623`*^9, 3.7357033070942855`*^9}, {
  3.7361742590490017`*^9, 3.7361742640860996`*^9}, {3.736177068920719*^9, 
  3.7361770750507593`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`b$$], -10, 10}}, Typeset`size$$ = {
    432., {148., 154.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`b$68013$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`b$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`b$$, $CellContext`b$68013$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[(-4) $CellContext`x^2 + $CellContext`b$$ $CellContext`x, \
{$CellContext`x, -3, 
         Plus[3]}, PlotRange -> {10, -10}, 
        PlotLabel -> (-4) $CellContext`x^2 + $CellContext`b$$ $CellContext`x],
       "Specifications" :> {{$CellContext`b$$, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{489., {200., 207.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.736189259074972*^9, 3.7363282652161493`*^9, 
  3.73632852380958*^9, 3.736623346259183*^9, 3.736623481616377*^9, 
  3.7366715393487744`*^9, 3.736671716310774*^9, 3.7366720399376698`*^9, 
  3.736672090911953*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hyperText", "[", 
   RowBox[{
   "\"\<Hai dubbi su come cambia il grafico quando cambia b?\>\"", ",", 
    "\"\<il coefficiente del termine di primo grado della X ha segno opposto \
ed e\[CloseCurlyQuote] il doppio dell\[CloseCurlyQuote]ascissa del vertice \
della parabola\>\"", ",", "LinkHand"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.735295205881919*^9, 3.7352952240749598`*^9}, {
  3.736174268721199*^9, 3.7361742743352904`*^9}, {3.736177078050778*^9, 
  3.7361770846708183`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia b?\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "il coefficiente del termine di primo grado della X ha segno opposto ed \
e\[CloseCurlyQuote] il doppio dell\[CloseCurlyQuote]ascissa del vertice della \
parabola"], Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
    True}]]], "Output",
 CellChangeTimes->{3.7361892591749725`*^9, 3.7363282656849494`*^9, 
  3.736328524262718*^9, 3.7366233466288004`*^9, 3.7366234818811016`*^9, 
  3.7366715397363787`*^9, 3.736671716690175*^9, 3.7366720403104715`*^9, 
  3.7366720912551537`*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione del caso particolare", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.7352940246883583`*^9, 3.7352940263724546`*^9}, {
   3.7352950820538363`*^9, 3.7352950826698713`*^9}, {3.7352953535623655`*^9, 
   3.7352953587526627`*^9}},
 CellTags->"E2_CP_B0"],

Cell["Hai posto attenzione a cosa succede quando b=0?", "Text",
 CellChangeTimes->{
  3.735295386225234*^9, {3.735300485285884*^9, 3.735300485504896*^9}, {
   3.7356133089906673`*^9, 3.7356133095371733`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Hyperlink", "[", 
         RowBox[{
          RowBox[{"StatusArea", "[", 
           RowBox[{
            RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
            "\"\<CG_G2_PB\>\""}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
            "\"\<CG_G2_PB\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<No\>\"", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"p5", "\[Equal]", " ", "0"}], ",", 
            RowBox[{
             RowBox[{"p5", "=", "1"}], ";", 
             RowBox[{"Print", "[", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["x", "2"], " ", "+", "  ", "1"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"x", ",", 
                  RowBox[{"-", "5"}], ",", 
                  RowBox[{"+", "5"}]}], "}"}], ",", " ", 
                RowBox[{
                "PlotLegends", "\[Rule]", 
                 "\"\<y = \!\(\*SuperscriptBox[\(x\), \(2\)]\) + 1\>\""}]}], 
               "]"}], "]"}], ";", " ", 
             RowBox[{
             "Print", "[", 
              "\"\<come puoi vedere il grafico ha vertice sull\
\[CloseCurlyQuote]asse Y\>\"", "]"}]}]}], "]"}]}], "]"}]}], "}"}], "]"}], " ",
      "\[IndentingNewLine]", 
     RowBox[{"AutoCollapse", "[", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{
        RowBox[{"StatusArea", "[", 
         RowBox[{
          RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
          "\"\<CG_G2_CA\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
          "\"\<CG_G2_CA\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<No\>\"", ",", " ", 
        RowBox[{"p5", " ", "=", " ", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"p5", " ", "===", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], " ", "+", "  ", "1"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"+", "5"}]}], "}"}], ",", " ", 
         RowBox[{
         "PlotLegends", "\[Rule]", 
          "\"\<y = \!\(\*SuperscriptBox[\(x\), \(2\)]\) + 1\>\""}], ",", " ", 
         
         RowBox[{"ImageSize", " ", "\[Rule]", " ", "Medium"}]}], "]"}], 
       RowBox[{
       "Text", "[", 
        "\"\<come puoi vedere il grafico ha vertice \
sull\[CloseCurlyQuote]asse Y\>\"", "]"}]}], ",", " ", 
      RowBox[{"Text", "[", "\"\<\>\"", "]"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7352954781824937`*^9, 3.735295504310988*^9}, {
  3.735295536147809*^9, 3.73529553983702*^9}, {3.7361742795763702`*^9, 
  3.7361742981986675`*^9}, {3.736177090447857*^9, 3.7361770960138865`*^9}, {
  3.736178705204917*^9, 3.736178713661974*^9}, {3.7361885753158092`*^9, 
  3.736188576220611*^9}, {3.7361886192017*^9, 3.736188675835018*^9}, {
  3.736188720476145*^9, 3.7361887219591513`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
          Automatic, Method -> "Preemptive"], StatusArea[#, "CG_G2_CA"]& , 
         TagBoxNote -> "CG_G2_CA"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
           Automatic, Method -> "Preemptive"], StatusArea[#, "CG_G2_CA"]& , 
          TagBoxNote -> "CG_G2_CA"], {"HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "CG_G2_CA"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "CG_G2_CA"}, "Hyperlink"]& ],
   "\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> (MClib`p5 = 1), Appearance -> Automatic, 
    Evaluator -> Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7361892592449727`*^9, 3.736328265778717*^9, 
  3.736328524325255*^9, 3.7366233466977277`*^9, 3.736623481964016*^9, 
  3.7366715397987785`*^9, 3.736671716814975*^9, 3.736672040376273*^9, 
  3.736672091348754*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[MClib`p5 === 1, Plot[$CellContext`x^2 + 1, {$CellContext`x, -5, 
       Plus[5]}, PlotLegends -> 
      "y = \!\(\*SuperscriptBox[\(x\), \(2\)]\) + 1", ImageSize -> Medium] 
    Text["come puoi vedere il grafico ha vertice sull\[CloseCurlyQuote]asse \
Y"], 
    Text[""]], StandardForm],
  ImageSizeCache->{0., {3., 15.}}]], "Output",
 CellChangeTimes->{3.7361892592449727`*^9, 3.736328265778717*^9, 
  3.736328524325255*^9, 3.7366233466977277`*^9, 3.736623481964016*^9, 
  3.7366715397987785`*^9, 3.736671716814975*^9, 3.736672040376273*^9, 
  3.7366720913643537`*^9}]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione guidata del parametro a", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.7352940246883583`*^9, 3.7352940263724546`*^9}, {
   3.7352950820538363`*^9, 3.7352950826698713`*^9}, {3.7352957197473106`*^9, 
   3.735295720286341*^9}, {3.7355407730158653`*^9, 3.7355407741418695`*^9}},
 CellTags->"E_G2_CA"],

Cell["\<\
cosa vuol dire graficamente il coefficiente a?
\
\>", "Text",
 CellChangeTimes->{3.7352957486359625`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "*", 
       SuperscriptBox["x", "2"]}], " ", "-", " ", 
      RowBox[{"2", "*", "x"}], "  ", "+", " ", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", " ", 
       RowBox[{"+", "3"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"10", ",", " ", 
        RowBox[{"-", "10"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
       RowBox[{"a", "*", " ", 
        SuperscriptBox["x", "2"]}], " ", "-", " ", 
       RowBox[{"2", "*", "x"}], " ", "+", " ", "1"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.735295806557276*^9, 3.7352958479546432`*^9}, {
  3.7355383728314376`*^9, 3.7355383779526606`*^9}, {3.735639060750141*^9, 
  3.7356390622069445`*^9}, {3.7361743065608406`*^9, 3.7361743134249535`*^9}, {
  3.7361771013757143`*^9, 3.736177106971943*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -10, 10}}, Typeset`size$$ = {
    432., {148., 154.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$68094$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$68094$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`a$$ $CellContext`x^2 - 2 $CellContext`x + 
        1, {$CellContext`x, -3, 
         Plus[3]}, PlotRange -> {10, -10}, 
        PlotLabel -> $CellContext`a$$ $CellContext`x^2 - 2 $CellContext`x + 
         1], "Specifications" :> {{$CellContext`a$$, -10, 10}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{489., {200., 207.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.736189259524973*^9, 3.7363282658412166`*^9, 
  3.7363285244658685`*^9, 3.73662334676166*^9, 3.736623482028949*^9, 
  3.73667153997178*^9, 3.7366717169271755`*^9, 3.7366720404978743`*^9, 
  3.7366720914631567`*^9}]
}, {2}]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7352952710456457`*^9, 3.7352953459239287`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hyperText", "[", 
   RowBox[{
   "\"\<Hai dubbi su come cambia il grafico quando cambia a?\>\"", ",", 
    "\"\<il coefficiente del termine di secondo grado della X se positivo mi \
indica che la parabola e\[CloseCurlyQuote] rivolta verso \
l\[CloseCurlyQuote]alto mentre se negativa e\[CloseCurlyQuote] rivolta verso \
il basso.\>\"", ",", "LinkHand"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7352958920841675`*^9, 3.7352959107552357`*^9}, {
  3.7361743163270044`*^9, 3.736174321084081*^9}, {3.736177109630961*^9, 
  3.736177115962021*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia a?\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "il coefficiente del termine di secondo grado della X se positivo mi \
indica che la parabola e\[CloseCurlyQuote] rivolta verso \
l\[CloseCurlyQuote]alto mentre se negativa e\[CloseCurlyQuote] rivolta verso \
il basso."], Method -> "Preemptive", PassEventsDown -> Automatic, 
    PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{3.736189259594973*^9, 3.736328266247508*^9, 
  3.736328524872158*^9, 3.736623347044368*^9, 3.736623482312654*^9, 
  3.7366715404975815`*^9, 3.7366717174055777`*^9, 3.7366720409774795`*^9, 
  3.736672091943361*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Caso particolare a",
 StyleBox[" ",
  FontWeight->"Bold"],
 "= 0\n"
}], "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345073172201977`*^9, 3.7345073271699533`*^9}, {3.7352960962278438`*^9, 
   3.7352961040232897`*^9}, {3.735540783213111*^9, 3.7355407833067107`*^9}},
 CellTags->"E2_CP_A0"],

Cell["\<\
Hai posto attenzione a cosa succede quando a=0?

\
\>", "Text",
 CellChangeTimes->{{3.7352961419104567`*^9, 3.7352961435955534`*^9}, {
  3.7352961888321404`*^9, 3.735296192954376*^9}, {3.7352964588785863`*^9, 
  3.735296469342185*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{
        RowBox[{"StatusArea", "[", 
         RowBox[{
          RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
          "\"\<TS2\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<TS2\>\""}],
          "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<No\>\"", ",", " ", 
        RowBox[{"p6", " ", "=", " ", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"p6", " ", "===", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", " ", "2"}], "x"}], " ", "+", " ", "1"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"+", "5"}]}], "}"}], ",", " ", 
         RowBox[{"PlotLegends", "\[Rule]", "\"\<y = -2x + 1\>\""}], ",", " ", 
         
         RowBox[{"ImageSize", " ", "\[Rule]", " ", "Medium"}]}], "]"}], 
       RowBox[{
       "Text", "[", 
        "\"\<come puoi vedere il grafico non e\[CloseCurlyQuote] piu\
\[CloseCurlyQuote] una parabola ma degenera in una retta\>\"", "]"}]}], ",", 
      " ", 
      RowBox[{"Text", "[", "\"\<\>\"", "]"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7352961975206375`*^9, 3.7352962507426815`*^9}, {
  3.7352963816241674`*^9, 3.735296389068593*^9}, {3.7361743354833364`*^9, 
  3.736174360397964*^9}, {3.7361771227020664`*^9, 3.736177130232109*^9}, {
  3.7361788141274166`*^9, 3.7361788210874634`*^9}, {3.736188695916087*^9, 
  3.7361886966760874`*^9}, {3.736188733103182*^9, 3.7361888116983633`*^9}, {
  3.736188888982131*^9, 3.7361888890521307`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
          Automatic, Method -> "Preemptive"], StatusArea[#, "TS2"]& , 
         TagBoxNote -> "TS2"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
           Automatic, Method -> "Preemptive"], StatusArea[#, "TS2"]& , 
          TagBoxNote -> "TS2"], {"HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "TS2"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "TS2"}, "Hyperlink"]& ],
   "\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> (MClib`p6 = 1), Appearance -> Automatic, 
    Evaluator -> Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7361892596449733`*^9, 3.7363282663568954`*^9, 
  3.736328524934698*^9, 3.7366233471662397`*^9, 3.736623482458501*^9, 
  3.736671540654586*^9, 3.736671717501178*^9, 3.7366720410554795`*^9, 
  3.7366720920369606`*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[MClib`p6 === 1, Plot[(-2) $CellContext`x + 1, {$CellContext`x, -5, 
       Plus[5]}, PlotLegends -> "y = -2x + 1", ImageSize -> Medium] 
    Text["come puoi vedere il grafico non e\[CloseCurlyQuote] piu\
\[CloseCurlyQuote] una parabola ma degenera in una retta"], 
    Text[""]], StandardForm],
  ImageSizeCache->{0., {3., 15.}}]], "Output",
 CellChangeTimes->{3.7361892596449733`*^9, 3.7363282663568954`*^9, 
  3.736328524934698*^9, 3.7366233471662397`*^9, 3.736623482458501*^9, 
  3.736671540654586*^9, 3.736671717501178*^9, 3.7366720410554795`*^9, 
  3.7366720920369606`*^9}]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Zeri di funzione", "Subsection",
 CellChangeTimes->{{3.7356331367803807`*^9, 3.735633157522223*^9}}],

Cell["\<\
Per cercare gli zeri di una funzione polinomiale imponiamo f(x)=0 nel caso \
del 2\[Degree] grado: ax^2+bx+c=0.

abbiamo 3 possibili risultati:\
\>", "Text",
 CellChangeTimes->{
  3.7356388628739104`*^9, {3.7357033626707*^9, 3.7357033671086717`*^9}, 
   3.735703975541727*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"   ", 
  RowBox[{
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], " ", "+", "  ", "2"}], " ", ",", 
         RowBox[{
          RowBox[{"-", " ", 
           SuperscriptBox["x", "2"]}], "  ", "-", " ", "2"}]}], " ", "}"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "5"}], ",", 
         RowBox[{"+", "5"}]}], "}"}], ",", " ", 
       RowBox[{"PlotLabels", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}], 
     "]"}], ";", " ", 
    RowBox[{
    "Print", "[", 
     "\"\<le parabole non intersecano mai l'asse x quindi entrambe non hanno \
zeri reali\>\"", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"plotWithZoomButtons", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["x", "2"], ",", "  ", 
       RowBox[{"-", 
        SuperscriptBox["x", "2"]}]}], "}"}], ",", " ", 
     RowBox[{"Symbol", "[", "\"\<x\>\"", "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
   "Print", "[", 
    "\"\<le parabole intersecano l'asse x in un punto ma avvicinandosi molto \
all'asse x con un andamento curvo. in questo caso dico che ho uno zero doppio\
\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{"plotWithZoomButtons", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], " ", "+", " ", "x", " ", "-", "3"}], ",", 
       "  ", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["x", "2"]}], " ", "-", "x", "+", "3"}]}], "}"}], ",", 
     " ", 
     RowBox[{"Symbol", "[", "\"\<x\>\"", "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
   "Print", "[", 
    "\"\<le parabole intersecano l'asse x in due punti e il grafico delle \
parabole non si avvicina all'asse. In questo caso dico che ho uno zero \
semplice\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7356388945067835`*^9, 3.735638932598261*^9}, {
  3.7357033891797657`*^9, 3.7357033978838186`*^9}, {3.735703890099918*^9, 
  3.735703969478582*^9}, {3.7357040451654367`*^9, 3.735704055135248*^9}, {
  3.735704121511352*^9, 3.735704142920292*^9}, {3.7361743691631217`*^9, 
  3.7361743783213043`*^9}, {3.736177136424159*^9, 3.7361771464322214`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
EPj/95D/Aa1V22k=
       "]]},
     Annotation[#, "Charting`Private`Tag$68339#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw12Hk4VF/cAPA7gzHGbpQtIktlLySTOoMkJYmoaB3qlygliiwtZClttqyV
JSFLkULL+WZNikIkS1P2JVtEsrz3fZ73/es+n3/Oufd+l/N9jhLHw/YolSAI
CQpB/O8zoG/HxOIiEyrKyjoWF1nQ67d0qm2OCWcDb1xRm2GBtdj36Rd/mZDG
mOFYj7FA0ej0vMdvJtyNzmlO4bKg7FokndvLhLxTUeF73rKArt2iAB+Z8HzD
XvmFKyyI9jq8/VIiE+SN3swZ8rPgMeVsOmHIBOO3/xIOMo2A76jFWpkDErBY
p3sslmkIzK+V7ql3xOH++7DXGdsMwLY8wXn1ezHYkVi4bMc9PfAb3eh+u0sU
VuEUkeSuNVB8PuFE/k4RMK3hZks56YJ1pL3iQrwQYOaNqiO3tcAi+bX11mEG
XBhV1KjKUIeMat/ms04C8MojxmlQahUcDI5eUp/JD1P66WtVAlUh8DBPniCT
BrwRK49uYCkDobUcm13lBW3pxGy8Sgm+XY8PffyFCpUlpof6NBRgGeN41qQp
BZ73iMocvi8LbgbqfG3LFjF9LFKHoigFzoadmeXl/3B6oUJPkKAkqPuwFk+l
z2DZ/+glf/3FIaXDrsLXZArTKBrvvRVEYG332tkm/Smc5yZTlicsAhWD4rq6
q6bwCZOvL8bnhKF3uj6xV2QKy2lXJ8W0CYO6hNVZu/ZJfFzohJV9vDAUbNm8
Quv8JH7aXm76bKkwVOTrX+Lm/MYLtdXXx6SFoO/yEmML6Ql8vkfsFmcDAxgB
+aNRjAnsq1w9PKDBAG0fyzTu3DheVlXAF7CMAedOBTAu/BjHm4zUXavmBYDm
1PM1J3sczzfH/+kBAVDRL/KW2DiOHcf8NPZaCgCnd3d+x5ExnJSwfZ7uTIeQ
HyMc9d1j+Lp73lt+ezpkt4ctPb9lDMukbTGRsKDDRMOrADGNMSy5ScpzmwYd
qBct40L6R/ElDaMEi0l+QGsGPu8SHsXG3Rd5vcP4oTRmlXm/wy/M+ihtklRC
A7pTnzPF+BemXokss8qlgYNixhVZpV+4X6k7kp5Cg4lsZbAaGsZCyqKKqWE0
WA0KG55eHMbP1IOH9++lQdyg5JoLmUM4aOfgjvG/fOCNKPJCswNYcTRjbYw5
H5TxwgbV7wM4il/hVj6LD8TeBzpuqhjAKoInWV90+CBn99zd0zcHcHJjZICp
LB90u05LfFkxgMdc54vSR3nBNvoX/d72fiyZYz0amsQLugOtkzrJvfhAyI+g
mgUe8BrTWi0V3ItNB8fMx6Z4oHj68oGFE734Pb/rd8VfPGBCU6/6sL4XV3hE
xd1v4wFb5Qt3XZt6sMvvT8rMEh7wPiDLShPswVtrRpIbvHmg9LPjxaUXunBW
fpFi4R8qLHzNK5w/3IXnLNrrJUepYMql9ndbdOHf8W4Ol/qoUDuSbVO4pAt/
OFEx4PWVCu2C/5Rsnv7EanBwdVMpFRbNEyvC+3/gS0brhNwuU2FzaZvAvAMX
fzx2+vDsEirkZT80qt7AxW/St5YIi1JBOtHD9Y4iF9fWF6Vp0qnQPE2L3N70
HbN+WWvdmKWAqp+DWPJsJz5u7s9s/U6BsstTQmyLDkx3K9dIyqFALCfcvUms
A5deGEw+nkEBVzP5D8e/teOw8xkp7AcUEOMzv37nZDv2Xd9xgBlNgUNh0QJd
UW34cYt5lpk/BeZu6tFCuK3Y7jpPRL01BT55VB+VzW7FVe6+UvaWFEizcarM
O9uK7TcE6/eaUWCbRFBwC60Vv7u/V1nDiALxMQ3U1Vpf8cLVuUakQoF1SWcW
a32bcV617uXoOQJOZ+XPiDMbsYzidsGhIgJ0RU4FmXIbsM0R3z61AgLGPTVF
zuY24Pmb+1rd8wjwNM5SbrJowKX5OgtLHxHgXZ9qHev/GZfT9Ky64wj4Pahh
afChHgsIxv7lBBLg9SzzYOyxevyI2aXL9iPgT4Cq1zRRj1/Sfwas9CFgRmz5
/RKDOmxRPLVX0pOAuXUSUxvvf8DDml7M/44RQAuaebDFswa7uX+MH7MhINTK
+/kjoRp82thI08OaAPrSiVr6o3d4aMahaXo7AYysoT/v26rxFsPMoystCBCt
77TaaV6FQ2tSIhY3EnA7zonz5HslZs8nfajbQIAE5+t58QuV2EN+24pMIwIk
pz6nNuZVYF3lUhFfAwKk5Spn9kiXY/bm8aEoLQLiu01ESgrKcE6bX2uhBgGy
eW+UZXeU4VuHits7VhMgb1Js3X75LS7WtFCxUSPArM7B8m0zxrHtL1/kLidg
yxEbryBBjJ+3fLFVUCBg66TlfXP2G2yFU3jilxFgJbtxqibrFW6325mRI0OA
wzHllAb/EhwWSRmzkiTg2pmzYZFFxbjitxhHkknAa/9yD9uRF7jjpdvVHnEC
VKKcNzUceo5zL/Fw00UJ2HuvUDUyrghzAthSUSIEXM/iEbb9/Az/4b5bvCZM
wAROa/tsWohL21923xUkQK32d9kdvwI86KX2I4dBwL5ms+xdz57imbPtN2sF
CIDhLp/Pqk/w0wz1BVU6Af2j/8GK13nY6VsZPsJPwE4a/Vaqdi7u8spY+4hG
gILeVs1U8Wx8u3On5k4+Aq5a9s8qBWXiZ7lLCp/yEjB8KKwmZTIDv+hSG5In
bXduVZzSsYc47lJQUxQPAaUR746ltKThvcEaHkzSSmnHDZQsU/H0iMLLJCoB
YSV03pTSB9gLDhTrkO68v+uhyd57uH6m79gHCgG5H+6YmmxIxIy411WepP3+
fv7OVojDK+51tqwgbakmEcCmxGBZwe0J7QQBUna2suzuO3i0kyrygHTtoorH
xZs3cLoMTe8k6eP7HmYF7g7Fhi93C2wmzVuo2h0gexlnlo/cViHNlrHaOAve
eGZtU40I6bG4eJfxeA5eKcD3jJxPwJ8aXbllvSXS33J5JzmugHaCc7XkOg+k
OLg1iZ90p8zTEUFRfzQ46ZQgTdpO7+urEJNgFHWs1FKP9PPWPVdC/a4hWeSS
vYe0MAwpVzjeRpcC9726ShpFPQ6pOB+FKlUSLr4mfeaY20BFdCzqX6M2uUA6
1UjDqvJpPBp8OC+zjfz+JqGhvMq6JPT+kuL4PdI0brZ41dB9FF5203eedNI+
A5ZzcApSc9taSA5aYGAW49YlkYZSL+y410K6TnMqyTklHc2NJbPsyPgQRNGi
85tHaIeEUuh/ZDzjByTXdFtlIbPXdoYEGf+1jV4cl7ZsJF3/OS6VtEuGfqXL
TC46sPKJBy+ZP/O3ov90h+SjjyfFespJ1xrPRhVce4KWyb0SvEHmm4uaY+Va
mQLkkD3lbkzmp64co9OTW4DYEUGPVpD5Oy9a+qfgUSES+LI/SkKIgNi/Mqv0
1hUhw8TxQFEy/6s/tF7TsytG1Nm0hwESZDx9vlU7aZSgoqmVs7VkPdFV2niD
eUpRTuXgc9UlBGzzaw9sKnyJjv3UdP0nRcCH1d89vSUxYoimPdEh69f9y/f8
5GGMOnLkLVrJ+g5hn/7D4QCaVGgxv6lEwMrh03rXWW/RyEWav6wquZ+ZZ27b
YBliGuypfalJwPr4idpRh3JE836XBtrk/qOegzzl5WhjuE/3J10CshLOrtRM
rEA+2jH3mGQ/Ghz3SvHfXoXk3WFKaRO5/4PzMfI5NWj1s04dji0Bxn+mC9dI
v0cH1m+MkLcnQMjKp8E8+D1quv3NpnsPWQ/TPqKn9tei228+S0QfIGDE+kL4
G6GPyFC4wNfflYDiwDdv8td9QlvOsxpPBxHwIGvhY4n7J1SCQgp/hpD11rSp
ozz1EzrTLjZ36BrZX9TxvxaRzygv8mel/x0C/n7B64m+z8hh4rwxekAAS+tt
gc3dRnQ88ERRHybzp6k59k1NI4qwTU57V07Gz2/4giZ5NGm6DV8qrCb7T42U
Gf1IE2p3/U5/VE8A8+ipRqz+BS0kSVvzccl+kSQ3qf2mGVl9a8m9R6VAn9ma
r0ljzWj5n7obCvwU+Dm45RVDuQW5O/zcnylIgdb1nsG9oS3Ip/vAu1ZJClQ1
vZO8t+srsluX2VS4kgL3hc4ZCPe0IvGn4WWbd1IgofC6jJ/UNxQpaR7tvJs8
vx1T5vstv6Gbr5bZR+yjQETmh8qKvG/oT6ti+j9nCvhsVnbw92lDYdv8z+/y
pYCt/6dzQ4IdqJh66XfrQwpQzy1pd5Hhok31peyDNCo4Hs5uKNbnovAU7pCZ
MBUKtqEaIRsuKsu0MjWQpAJnuevzZyFctGA/PcZaQYWyd69u805yUbLGXfuG
TVQIknMxT6/7gQLLCeM1F6jA+7YgryuoC7196BeQ/5cK+x9bPDS834U+LDl+
h0HlgWcx7YnXS7tQZWmCzRkGD7icoIXrjXehK2kNn47I8UAl09E56GA3UhmL
+Fq3kQdCjlGklY16EP2cBl9rMA/wC9lc5oz0ot36Yo25crywd6UjrBPoQ5s6
Bx1sVHkh29RlkaHSh9ipMzIL2rxg7esTULivD4X75B7wM+WF2N4HvryVfWjN
Qf+2OVdeUHs7fiYjsR91Cuc/kXvJC+bnojiDWwdR5sJ/b98d5YMgbrOZZ9ov
NKu6yp/bToPOku0nfV79Qn8eFzP9+2nAioLYwC+/kLyWrJfSJA3GzLMHrvGP
oEFFm1vhgvxw8HHArTS3ERRcF6pTz+IH1jmVtia9UVRgoialm8gPf/mMSuQ4
Y2ghdHnQVnKef5IYYhM4MY6sonnqGsUYUMsM6RMlJlDH68BucUUG9F6/Gpgi
PIFmhF75O+kwYJl/cE7FqglULxewVtyaAWH7r9AFD02g2X/ShbQIBhyWD4S7
tRNoR9ULuixDEMTue+s+Tf+NuFfu8P0UEQKPVBexbocp9DqxyHyaJQIHTyTI
h16eQfr/Ef4aHHEI33XOSC/pHzoytd9z6wATeCVjei/OLqC6GpfDOQtLoaX2
6liwKIVd9S0/QmCNLNj7cdYllFPZ927IIE+KArgLDq2oc+RlK8o67g2aUITl
j6tiaYN87NMGZmpfKcrgV2xmJ5rIz1ax0XH54qoKpzPcn6/TEWBPay9XE2xY
CUJUQ452D4OtaVuKmxLUwfzk7hj1KCF24pF3u3WCtUC6RN7DXEWEbaMXnbFk
rS5Eeobd0W0RZe9p8by7rWUN2Ibs1Ep+Lsa+0Xcy7qC3Hqg7BdunB4izc2wE
mloUDKC5VyA1yl6C7b3qyk97qiHUcXpMJJYz2e0zuwv5v62HH7yPZmJWMNnZ
K93GT/1cD5MZx/Nl1Jhsi79lpS2D60FmaGiZkhaT3RdsOJr7bz24nJ2Y1tnA
ZDdu1P/uLm8Es0GLuTv2MNk71vm36R8xArWHMrLht5jsCpMt5r8GjMDIou2T
UBSTbff+9tDVCSOwGkgKvR3LZD+dWiav+M8IzmgpTt1NJtfTn1XaJ8SCV0Vq
nzIeM9llu98VdGizwLZKL6Simsk2lSsc0/ViwdHjU8Zba5nsgk9S23/6s8CH
8eJ3bR2TPbbqjW7MVRYkW7OONH4h13tbn7wYy4L+Zrbxzy4me3MMbbG3hAWz
PtTfR/uYbKUjPoXpZSwQlqvIGhhksuvrNX4717Jg7SELqfFxJjsyZo9kXzsL
zCkCdV5T5P8Zrp/K7mHB3rT3wTMzTPad3nDO6REWnDCP2OA/R75f0FVHw2kW
/N99CPv/70P+B0LjZHg=
       "]]},
     Annotation[#, "Charting`Private`Tag$68339#2"]& ]}, {{{}, 
     {GrayLevel[0.4], AbsoluteThickness[0.5], 
      StyleBox[{{
         LineBox[{
          Scaled[{0.02, 0}, {5, 26.999997959183716`}], 
           Offset[{3, 0}, Scaled[{0.02, 0}, {5, 26.999997959183716`}]], 
           Offset[{7, 0}, Scaled[{0.02, 0}, {5, 26.999316824513965`}]], 
           Offset[{12, 0}, Scaled[{0.02, 0}, {5, 26.999316824513965`}]]}], 
         LineBox[{
          Scaled[{0.02, 0}, {5, -26.999997959183716`}], 
           Offset[{3, 0}, Scaled[{0.02, 0}, {5, -26.999997959183716`}]], 
           Offset[{7, 0}, Scaled[{0.02, 0}, {5, -26.999316824513965`}]], 
           Offset[{12, 0}, Scaled[{0.02, 0}, {5, -26.999316824513965`}]]}]}, {
         InsetBox[
          TagBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", "2"}],
           HoldForm], Offset[{15, 0}, 
          Scaled[{0.02, 0}, {5, 26.999316824513965}]], ImageScaled[{0, 0.5}]],
          InsetBox[
          TagBox[
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["x", "2"]}], "-", "2"}],
           HoldForm], Offset[{15, 0}, 
          Scaled[{0.02, 0}, {5, -26.999316824513965}]], 
          ImageScaled[{0, 0.5}]]}, {}, {}},
       FontColor->GrayLevel[0.4]]}}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 63}, {All, All}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-26.999997959183716`, 26.999997959183716`}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.7361892598359737`*^9, 3.736328266622549*^9, 
  3.7363285253565845`*^9, 3.736623347446947*^9, 3.7366234828890533`*^9, 
  3.7366715410245895`*^9, 3.73667171807318*^9, 3.736672041647888*^9, 
  3.7366720926083684`*^9}],

Cell[BoxData["\<\"le parabole non intersecano mai l'asse x quindi entrambe \
non hanno zeri reali\"\>"], "Print",
 CellChangeTimes->{3.7361892598359737`*^9, 3.736328266622549*^9, 
  3.7363285253565845`*^9, 3.736623347446947*^9, 3.7366234828890533`*^9, 
  3.7366715410245895`*^9, 3.73667171807318*^9, 3.736672041647888*^9, 
  3.7366720926083684`*^9}]
}, {1, 2}]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"Zoom sugli zeri:\"",TemplateBox[{
         ButtonBox["1", ButtonFunction :> (MClib`Private`l$68783 = Part[
              Solve[
               Reduce[
                
                And[{$CellContext`x^2, -$CellContext`x^2} == 
                 0, -11 < $CellContext`x < 
                 11], $CellContext`x], $CellContext`x], 1]; 
           MClib`Private`j$68783 = 1; 
           MClib`Private`y$68783 = ReplaceAll[$CellContext`x, 
              Part[MClib`Private`l$68783, 1]]; Null), Appearance -> Automatic,
           Evaluator -> Automatic, Method -> "Preemptive"]}, "RowDefault"]},
      "RowDefault"]},
    {
     TemplateBox[{DynamicBox[
        ToBoxes[
         Plot[{$CellContext`x^2, -$CellContext`x^2}, {$CellContext`x, 
           MClib`Private`y$68783 - MClib`Private`j$68783, 
           MClib`Private`y$68783 + MClib`Private`j$68783}, ImageSize -> 
          Medium, PlotLegends -> 
          Placed[{{$CellContext`x^2, -$CellContext`x^2}}, Above]], 
         StandardForm]]},
      "RowDefault"]},
    {
     ButtonBox["\<\"Reset Zoom\"\>",
      Appearance->Automatic,
      ButtonFunction:>(MClib`Private`j$68783 = 5; MClib`Private`y$68783 = 0),
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.736189260175974*^9, 3.736328266622549*^9, 
  3.7363285253722105`*^9, 3.736623347457936*^9, 3.736623482899043*^9, 
  3.7366715411971903`*^9, 3.73667171807318*^9, 3.736672041647888*^9, 
  3.7366720926239686`*^9}],

Cell[BoxData["\<\"le parabole intersecano l'asse x in un punto ma \
avvicinandosi molto all'asse x con un andamento curvo. in questo caso dico \
che ho uno zero doppio\"\>"], "Print",
 CellChangeTimes->{3.7361892598359737`*^9, 3.736328266622549*^9, 
  3.7363285253565845`*^9, 3.736623347446947*^9, 3.7366234828890533`*^9, 
  3.7366715410245895`*^9, 3.73667171807318*^9, 3.736672041647888*^9, 
  3.736672092731371*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"Zoom sugli zeri:\"",TemplateBox[{
         ButtonBox["1", ButtonFunction :> (MClib`Private`l$68787 = Part[
              Solve[
               Reduce[
                
                And[{-3 + $CellContext`x + $CellContext`x^2, 
                   3 - $CellContext`x - $CellContext`x^2} == 
                 0, -11 < $CellContext`x < 
                 11], $CellContext`x], $CellContext`x], 1]; 
           MClib`Private`j$68787 = 1; 
           MClib`Private`y$68787 = ReplaceAll[$CellContext`x, 
              Part[MClib`Private`l$68787, 1]]; Null), Appearance -> Automatic,
           Evaluator -> Automatic, Method -> "Preemptive"], 
         ButtonBox["2", ButtonFunction :> (MClib`Private`l$68787 = Part[
              Solve[
               Reduce[
                
                And[{-3 + $CellContext`x + $CellContext`x^2, 
                   3 - $CellContext`x - $CellContext`x^2} == 
                 0, -11 < $CellContext`x < 
                 11], $CellContext`x], $CellContext`x], 2]; 
           MClib`Private`j$68787 = 1; 
           MClib`Private`y$68787 = ReplaceAll[$CellContext`x, 
              Part[MClib`Private`l$68787, 1]]; Null), Appearance -> Automatic,
           Evaluator -> Automatic, Method -> "Preemptive"]}, "RowDefault"]},
      "RowDefault"]},
    {
     TemplateBox[{DynamicBox[
        ToBoxes[
         Plot[{-3 + $CellContext`x + $CellContext`x^2, 
           3 - $CellContext`x - $CellContext`x^2}, {$CellContext`x, 
           MClib`Private`y$68787 - MClib`Private`j$68787, 
           MClib`Private`y$68787 + MClib`Private`j$68787}, ImageSize -> 
          Medium, PlotLegends -> 
          Placed[{{-3 + $CellContext`x + $CellContext`x^2, 
              3 - $CellContext`x - $CellContext`x^2}}, Above]], 
         StandardForm]]},
      "RowDefault"]},
    {
     ButtonBox["\<\"Reset Zoom\"\>",
      Appearance->Automatic,
      ButtonFunction:>(MClib`Private`j$68787 = 5; MClib`Private`y$68787 = 0),
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.736189260175974*^9, 3.736328266622549*^9, 
  3.7363285253722105`*^9, 3.736623347457936*^9, 3.736623482899043*^9, 
  3.7366715411971903`*^9, 3.73667171807318*^9, 3.736672041647888*^9, 
  3.736672092731371*^9}],

Cell[BoxData["\<\"le parabole intersecano l'asse x in due punti e il grafico \
delle parabole non si avvicina all'asse. In questo caso dico che ho uno zero \
semplice\"\>"], "Print",
 CellChangeTimes->{3.7361892598359737`*^9, 3.736328266622549*^9, 
  3.7363285253565845`*^9, 3.736623347446947*^9, 3.7366234828890533`*^9, 
  3.7366715410245895`*^9, 3.73667171807318*^9, 3.736672041647888*^9, 
  3.7366720928561716`*^9}]
}, {4, 5, 6, 7}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Ora tocca a te!", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}},
 CellTags->"TS2"],

Cell["\<\
Inserisci tu le parabole e osserva come sono rappresentate graficamente.Puoi \
confrontare contemporaneamente 5 equazioni\
\>", "Text",
 CellChangeTimes->{
  3.7352965250533714`*^9, {3.7352996587526083`*^9, 3.7352996612697525`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Panel", "[", 
    RowBox[{"Column", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"InputField", "[", 
           RowBox[{
            RowBox[{"Dynamic", "[", "currentEq2", "]"}], ",", "String"}], 
           "]"}], ",", 
          RowBox[{"Button", "[", 
           RowBox[{"\"\<Confronta\>\"", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "freeEq2", "]"}], "<", "5"}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"freeEq2", ",", 
                RowBox[{"ToExpression", "[", "currentEq2", "]"}]}], "]"}], 
              ",", 
              RowBox[{
              "MessageDialog", "[", 
               "\"\<Hai gi\[AGrave] inserito 5 grafici, eliminane uno prima \
di aggiungerne uno nuovo!\>\"", "]"}]}], "]"}]}], "]"}]}], "}"}], "]"}], ",", 
       
       RowBox[{"Dynamic", "[", 
        RowBox[{"Row", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", "=", "i"}], "}"}], ",", 
             RowBox[{"Column", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"freeEq2", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"x", ",", 
                    RowBox[{"-", "10"}], ",", 
                    RowBox[{"+", "10"}]}], "}"}], ",", 
                  RowBox[{"PlotLabel", "\[Rule]", 
                   RowBox[{"ToString", "[", 
                    RowBox[{"freeEq2", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
                  RowBox[{"ImageSize", "->", "Small"}]}], "]"}], ",", 
                "\"\<\\t\>\"", ",", 
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<Elimina\>\"", ",", 
                  RowBox[{"freeEq2", "=", 
                   RowBox[{"Delete", "[", 
                    RowBox[{"freeEq2", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{"freeEq2", ",", 
                    RowBox[{"freeEq2", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
                 "]"}]}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "freeEq2", "]"}]}], "}"}]}], "]"}], "]"}],
         "]"}]}], "}"}], "]"}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Drawing", " ", "the", " ", "list", " ", "of", " ", "the", " ", 
      "functions", " ", "that", " ", "the", " ", "user", " ", "want", " ", 
      "to", " ", "compare"}], ",", " ", 
     RowBox[{
      RowBox[{
      "Delete", " ", "button", " ", "allow", " ", "to", " ", "remove", " ", 
       "that", " ", "expression", " ", "from", " ", "the", " ", "list"}], ";",
       " ", 
      RowBox[{"TODO", " ", "Insert", " ", "in", " ", "package"}]}]}], " ", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.7352966296833553`*^9, 3.7352966387698755`*^9}, {
   3.735296671751762*^9, 3.7352966971112127`*^9}, {3.7352997962404723`*^9, 
   3.735299802173812*^9}, {3.736174422073469*^9, 3.736174428327158*^9}, {
   3.7361771538132715`*^9, 3.7361771619133224`*^9}, 3.736179004213235*^9}],

Cell[BoxData[
 PanelBox[
  TagBox[GridBox[{
     {
      TemplateBox[{InputFieldBox[
         Dynamic[MClib`currentEq2], String],ButtonBox[
        "\"Confronta\"", ButtonFunction :> If[Length[MClib`freeEq2] < 5, 
           AppendTo[MClib`freeEq2, 
            ToExpression[MClib`currentEq2]], 
           MessageDialog[
           "Hai gi\[AGrave] inserito 5 grafici, eliminane uno prima di \
aggiungerne uno nuovo!"]], Appearance -> Automatic, Evaluator -> Automatic, 
         Method -> "Preemptive"]},
       "RowDefault"]},
     {
      DynamicBox[ToBoxes[
        Row[
         Table[
          With[{$CellContext`i = $CellContext`i}, 
           Column[{
             Plot[
              Part[MClib`freeEq2, $CellContext`i], {$CellContext`x, -10, 
               Plus[10]}, PlotLabel -> ToString[
                Part[MClib`freeEq2, $CellContext`i]], ImageSize -> Small], 
             "\t", 
             Button["Elimina", MClib`freeEq2 = Delete[MClib`freeEq2, 
                Position[MClib`freeEq2, 
                 Part[MClib`freeEq2, $CellContext`i]]]]}]], {$CellContext`i, 
           Length[MClib`freeEq2]}]], StandardForm],
       ImageSizeCache->{4., {0., 0.}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"]]], "Output",
 CellChangeTimes->{
  3.735296700763421*^9, 3.7352998087771893`*^9, 3.73538651585688*^9, 
   3.7353866014847775`*^9, 3.7353871294469757`*^9, 3.73538810353769*^9, 
   3.735461557994748*^9, 3.7354616773031163`*^9, 3.7354618836131964`*^9, 
   3.7355394337250395`*^9, 3.7355395526070385`*^9, 3.7355413441978445`*^9, 
   3.735541657285178*^9, 3.7356128917192736`*^9, 3.735613285518959*^9, 
   3.7356148163875065`*^9, 3.7356389474410944`*^9, 3.735639693495087*^9, 
   3.7356403735439835`*^9, 3.735641993782656*^9, 3.7356428715968647`*^9, 
   3.7356441843056498`*^9, {3.7357030887704554`*^9, 3.735703104875167*^9}, 
   3.7357035114176264`*^9, 3.735703648364767*^9, 3.7357039912685146`*^9, 
   3.736189261251979*^9, 3.736328267200738*^9, 3.7363285257316246`*^9, 
   3.7366233480073643`*^9, 3.736623483253674*^9, 3.736671541672394*^9, 
   3.7366717185587854`*^9, 3.7366720420932975`*^9, 3.7366720931347733`*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
       "Print", "[", "\"\<Ti senti pronto per gli esercizi?\>\"", "]"}], ";", 
       
       RowBox[{"Hyperlink", "[", 
        RowBox[{
         RowBox[{"StatusArea", "[", 
          RowBox[{
           RowBox[{"Button", "[", "\"\<Vai Esercizi\>\"", "]"}], ",", " ", 
           "\"\<ES_G2\>\""}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
           "\"\<ES_G2\>\""}], "}"}]}], "]"}]}], ",", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{
        RowBox[{"StatusArea", "[", 
         RowBox[{
          RowBox[{"Button", "[", "\"\<Torna alla teoria\>\"", "]"}], ",", 
          " ", "\"\<E_2G\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
          "\"\<E_2G\>\""}], "}"}]}], "]"}]}], "}"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7352969587431765`*^9, 3.735297001087599*^9}, {
  3.735615523290475*^9, 3.735615523837415*^9}, {3.735644509079226*^9, 
  3.735644529517395*^9}, {3.7361744351952863`*^9, 3.7361744405603848`*^9}, {
  3.7361771672333565`*^9, 3.7361771736933985`*^9}}],

Cell[BoxData["\<\"Ti senti pronto per gli esercizi?\"\>"], "Print",
 CellChangeTimes->{3.7361892616919794`*^9, 3.736328267435136*^9, 
  3.7363285258097577`*^9, 3.7366233482561054`*^9, 3.736623483327597*^9, 
  3.7366715420209956`*^9, 3.7366717186523857`*^9, 3.7366720421868973`*^9, 
  3.7366720932283735`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Vai Esercizi\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "ES_G2"]& , TagBoxNote -> "ES_G2"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Vai Esercizi\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "ES_G2"]& , TagBoxNote -> "ES_G2"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "ES_G2"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "ES_G2"}, "Hyperlink"]& ],TagBox[
   
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Torna alla teoria\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "E_2G"]& , TagBoxNote -> "E_2G"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Torna alla teoria\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "E_2G"]& , TagBoxNote -> "E_2G"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "E_2G"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "E_2G"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7361892618719797`*^9, 3.736328267450762*^9, 
  3.736328525825384*^9, 3.7366233482620993`*^9, 3.7366234833415823`*^9, 
  3.7366715420209956`*^9, 3.736671718672986*^9, 3.736672042206498*^9, 
  3.7366720932439737`*^9}]
}, {2, 3}]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7352963108141174`*^9, 3.7352963143283186`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Esercizi Tipologia 1", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}, {3.7346172310281005`*^9, 3.734617241201078*^9}, {
   3.7353284389597297`*^9, 3.73532844387201*^9}},
 CellTags->"ES_G2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"exKindAPrinter", "[", "3", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.735328510406816*^9, 3.735328510583826*^9}, {
  3.7361744469814873`*^9, 3.73617445179957*^9}, {3.7361771798600264`*^9, 
  3.7361771846196423`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            StyleBox[
            "\"A quale funzione corrisponde la seguente retta?\"", FontWeight -> 
             Bold, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TemplateBox[{"\"Zoom sugli zeri:\"", 
                  TemplateBox[{}, "RowDefault"]}, "RowDefault"]}, {
                TemplateBox[{
                  DynamicBox[
                   ToBoxes[
                    Plot[
                    Part[
                    MClib`teacherEQ, 3, 1], {$CellContext`x, 
                    MClib`Private`y$69068 - MClib`Private`j$69068, 
                    MClib`Private`y$69068 + MClib`Private`j$69068}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                ButtonBox[
                "\"Reset Zoom\"", 
                 ButtonFunction :> (MClib`Private`j$69068 = 5; 
                  MClib`Private`y$69068 = 0), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]}, {
            DynamicBox[
             ToBoxes[
              RadioButtonBar[
               Dynamic[
                Part[MClib`userAnswer, 3, 1]], 
               Part[MClib`exercises, 3, 1], Enabled -> Dynamic[
                 Part[MClib`enableAnswer, 3, 1]]], StandardForm]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            StyleBox[
            "\"A quale funzione corrisponde la seguente retta?\"", FontWeight -> 
             Bold, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TemplateBox[{"\"Zoom sugli zeri:\"", 
                  TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$69069 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 3, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$69069 = 1; 
                    MClib`Private`y$69069 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69069, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$69069 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 3, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$69069 = 1; 
                    MClib`Private`y$69069 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69069, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                   "RowDefault"]}, "RowDefault"]}, {
                TemplateBox[{
                  DynamicBox[
                   ToBoxes[
                    Plot[
                    Part[
                    MClib`teacherEQ, 3, 2], {$CellContext`x, 
                    MClib`Private`y$69069 - MClib`Private`j$69069, 
                    MClib`Private`y$69069 + MClib`Private`j$69069}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                ButtonBox[
                "\"Reset Zoom\"", 
                 ButtonFunction :> (MClib`Private`j$69069 = 5; 
                  MClib`Private`y$69069 = 0), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]}, {
            DynamicBox[
             ToBoxes[
              RadioButtonBar[
               Dynamic[
                Part[MClib`userAnswer, 3, 2]], 
               Part[MClib`exercises, 3, 2], Enabled -> Dynamic[
                 Part[MClib`enableAnswer, 3, 2]]], StandardForm]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            StyleBox[
            "\"A quale funzione corrisponde la seguente retta?\"", FontWeight -> 
             Bold, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TemplateBox[{"\"Zoom sugli zeri:\"", 
                  TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$69070 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 3, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$69070 = 1; 
                    MClib`Private`y$69070 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69070, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$69070 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 3, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$69070 = 1; 
                    MClib`Private`y$69070 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69070, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                   "RowDefault"]}, "RowDefault"]}, {
                TemplateBox[{
                  DynamicBox[
                   ToBoxes[
                    Plot[
                    Part[
                    MClib`teacherEQ, 3, 3], {$CellContext`x, 
                    MClib`Private`y$69070 - MClib`Private`j$69070, 
                    MClib`Private`y$69070 + MClib`Private`j$69070}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                ButtonBox[
                "\"Reset Zoom\"", 
                 ButtonFunction :> (MClib`Private`j$69070 = 5; 
                  MClib`Private`y$69070 = 0), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]}, {
            DynamicBox[
             ToBoxes[
              RadioButtonBar[
               Dynamic[
                Part[MClib`userAnswer, 3, 3]], 
               Part[MClib`exercises, 3, 3], Enabled -> Dynamic[
                 Part[MClib`enableAnswer, 3, 3]]], StandardForm]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7361892649589868`*^9, 3.7363282677164493`*^9, 
  3.736328526856779*^9, 3.736623348521829*^9, 3.736623484073821*^9, 
  3.7366715424013968`*^9, 3.736671719653792*^9, 3.736672043175105*^9, 
  3.736672094219383*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Dynamic", "[", 
    RowBox[{"Button", "[", 
     RowBox[{"\"\<Verifica\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"userAnswer", "[", 
           RowBox[{"[", 
            RowBox[{"3", ",", "1"}], "]"}], "]"}], " ", "===", "   ", "0"}], 
         "  ", "||", " ", 
         RowBox[{
          RowBox[{"userAnswer", "[", 
           RowBox[{"[", 
            RowBox[{"3", ",", "2"}], "]"}], "]"}], " ", "===", " ", "0"}], 
         " ", "||", " ", 
         RowBox[{
          RowBox[{"userAnswer", "[", 
           RowBox[{"[", 
            RowBox[{"3", ",", "3"}], "]"}], "]"}], " ", "===", "  ", "0"}]}], 
        ",", "  ", 
        RowBox[{
        "MessageDialog", "[", 
         "\"\<Rispondi a tutte le domande prima di verificare\>\"", "]"}], 
        " ", ",", " ", 
        RowBox[{
         RowBox[{"checkAnswer", "[", "3", "]"}], ";", " ", 
         RowBox[{"clicked2", " ", "=", "1"}]}]}], "]"}]}], " ", "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"clicked2", "===", " ", "1"}], ",", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{
        RowBox[{"StatusArea", "[", 
         RowBox[{
          RowBox[{"Button", "[", "\"\<Vai alla prossima sezione\>\"", "]"}], 
          ",", "\"\<ES_G2_B\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
          "\"\<ES_G2_B\>\""}], "}"}]}], "]"}], ",", " ", 
      "\"\<Verifica la risposta prima di passare alla prossima sezione\>\""}],
      "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.73532856100571*^9, 3.7353285949966545`*^9}, {
   3.735328626753471*^9, 3.7353286344839125`*^9}, {3.735328674033175*^9, 
   3.7353286795834923`*^9}, {3.736174458390709*^9, 3.736174464603812*^9}, {
   3.736177188166259*^9, 3.736177194534499*^9}, 3.736179032123581*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Button["Verifica", 
    If[
     Or[Part[MClib`userAnswer, 3, 1] === 0, Part[MClib`userAnswer, 3, 2] === 
      0, Part[MClib`userAnswer, 3, 3] === 0], 
     MessageDialog["Rispondi a tutte le domande prima di verificare"], 
     MClib`checkAnswer[3]; MClib`clicked2 = 1]], StandardForm],
  ImageSizeCache->{54., {9., 20.}}]], "Output",
 CellChangeTimes->{3.7361892650889874`*^9, 3.736328272748202*^9, 
  3.7363285309509315`*^9, 3.7366233513728633`*^9, 3.7366234869658127`*^9, 
  3.7366715464514256`*^9, 3.736671723854411*^9, 3.736672047046158*^9, 
  3.7366720983230095`*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[MClib`clicked2 === 1, 
    Hyperlink[
     StatusArea[
      Button["Vai alla prossima sezione"], "ES_G2_B"], {
      EvaluationNotebook[], "ES_G2_B"}], 
    "Verifica la risposta prima di passare alla prossima sezione"], 
   StandardForm],
  ImageSizeCache->{531., {3., 11.}}]], "Output",
 CellChangeTimes->{3.7361892650889874`*^9, 3.736328272748202*^9, 
  3.7363285309509315`*^9, 3.7366233513728633`*^9, 3.7366234869658127`*^9, 
  3.7366715464514256`*^9, 3.736671723854411*^9, 3.736672047046158*^9, 
  3.736672098338609*^9}]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Esercizi Tipologia 2", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}, {3.7346172310281005`*^9, 3.734617241201078*^9}, {
   3.7353284389597297`*^9, 3.73532844387201*^9}, {3.7353284790140204`*^9, 
   3.7353284790980253`*^9}},
 CellTags->"ES_G2_B"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"exKindBPrinter", "[", "4", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.735328743788165*^9, 3.735328743918172*^9}, {
  3.735328851156306*^9, 3.735328852660392*^9}, {3.7361744713709464`*^9, 
  3.7361744761250343`*^9}, {3.7361772003395367`*^9, 3.7361772049245677`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            DynamicBox[
             ToBoxes[
              Style[
               StringJoin[
                ToString[
                 Part[MClib`teacherEQ, 4, 1]], " \t Qual e' il suo grafico?"],
                FontWeight -> Bold], StandardForm]]}, {
            TemplateBox[{
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 1]], 
                   Part[MClib`exercises, 4, 1, 1], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$69912 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 1, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$69912 = 1; 
                    MClib`Private`y$69912 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69912, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$69912 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 1, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$69912 = 1; 
                    MClib`Private`y$69912 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69912, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 1, 1], {$CellContext`x, 
                    MClib`Private`y$69912 - MClib`Private`j$69912, 
                    MClib`Private`y$69912 + MClib`Private`j$69912}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$69912 = 5; 
                    MClib`Private`y$69912 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 1]], 
                   Part[MClib`exercises, 4, 1, 2], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$69913 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 1, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$69913 = 1; 
                    MClib`Private`y$69913 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69913, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$69913 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 1, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$69913 = 1; 
                    MClib`Private`y$69913 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69913, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 1, 2], {$CellContext`x, 
                    MClib`Private`y$69913 - MClib`Private`j$69913, 
                    MClib`Private`y$69913 + MClib`Private`j$69913}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$69913 = 5; 
                    MClib`Private`y$69913 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 1]], 
                   Part[MClib`exercises, 4, 1, 3], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$69914 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 1, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$69914 = 1; 
                    MClib`Private`y$69914 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69914, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$69914 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 1, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$69914 = 1; 
                    MClib`Private`y$69914 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69914, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 1, 3], {$CellContext`x, 
                    MClib`Private`y$69914 - MClib`Private`j$69914, 
                    MClib`Private`y$69914 + MClib`Private`j$69914}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$69914 = 5; 
                    MClib`Private`y$69914 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 1]], 
                   Part[MClib`exercises, 4, 1, 4], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{}, "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 1, 4], {$CellContext`x, 
                    MClib`Private`y$69915 - MClib`Private`j$69915, 
                    MClib`Private`y$69915 + MClib`Private`j$69915}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$69915 = 5; 
                    MClib`Private`y$69915 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            DynamicBox[
             ToBoxes[
              Style[
               StringJoin[
                ToString[
                 Part[MClib`teacherEQ, 4, 2]], " \t Qual e' il suo grafico?"],
                FontWeight -> Bold], StandardForm]]}, {
            TemplateBox[{
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 2]], 
                   Part[MClib`exercises, 4, 2, 1], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$69916 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 2, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$69916 = 1; 
                    MClib`Private`y$69916 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69916, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$69916 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 2, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$69916 = 1; 
                    MClib`Private`y$69916 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69916, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 2, 1], {$CellContext`x, 
                    MClib`Private`y$69916 - MClib`Private`j$69916, 
                    MClib`Private`y$69916 + MClib`Private`j$69916}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$69916 = 5; 
                    MClib`Private`y$69916 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 2]], 
                   Part[MClib`exercises, 4, 2, 2], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{}, "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 2, 2], {$CellContext`x, 
                    MClib`Private`y$69917 - MClib`Private`j$69917, 
                    MClib`Private`y$69917 + MClib`Private`j$69917}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$69917 = 5; 
                    MClib`Private`y$69917 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 2]], 
                   Part[MClib`exercises, 4, 2, 3], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$69918 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 2, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$69918 = 1; 
                    MClib`Private`y$69918 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69918, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$69918 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 2, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$69918 = 1; 
                    MClib`Private`y$69918 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69918, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 2, 3], {$CellContext`x, 
                    MClib`Private`y$69918 - MClib`Private`j$69918, 
                    MClib`Private`y$69918 + MClib`Private`j$69918}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$69918 = 5; 
                    MClib`Private`y$69918 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 2]], 
                   Part[MClib`exercises, 4, 2, 4], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{}, "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 2, 4], {$CellContext`x, 
                    MClib`Private`y$69919 - MClib`Private`j$69919, 
                    MClib`Private`y$69919 + MClib`Private`j$69919}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$69919 = 5; 
                    MClib`Private`y$69919 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            DynamicBox[
             ToBoxes[
              Style[
               StringJoin[
                ToString[
                 Part[MClib`teacherEQ, 4, 3]], " \t Qual e' il suo grafico?"],
                FontWeight -> Bold], StandardForm]]}, {
            TemplateBox[{
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 3]], 
                   Part[MClib`exercises, 4, 3, 1], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{}, "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 3, 1], {$CellContext`x, 
                    MClib`Private`y$69920 - MClib`Private`j$69920, 
                    MClib`Private`y$69920 + MClib`Private`j$69920}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$69920 = 5; 
                    MClib`Private`y$69920 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 3]], 
                   Part[MClib`exercises, 4, 3, 2], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$69921 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 3, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$69921 = 1; 
                    MClib`Private`y$69921 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69921, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$69921 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 3, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$69921 = 1; 
                    MClib`Private`y$69921 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69921, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 3, 2], {$CellContext`x, 
                    MClib`Private`y$69921 - MClib`Private`j$69921, 
                    MClib`Private`y$69921 + MClib`Private`j$69921}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$69921 = 5; 
                    MClib`Private`y$69921 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 3]], 
                   Part[MClib`exercises, 4, 3, 3], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$69922 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 3, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$69922 = 1; 
                    MClib`Private`y$69922 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69922, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$69922 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 3, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$69922 = 1; 
                    MClib`Private`y$69922 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69922, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 3, 3], {$CellContext`x, 
                    MClib`Private`y$69922 - MClib`Private`j$69922, 
                    MClib`Private`y$69922 + MClib`Private`j$69922}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$69922 = 5; 
                    MClib`Private`y$69922 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 4, 3]], 
                   Part[MClib`exercises, 4, 3, 4], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 4, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$69923 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 3, 4] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$69923 = 1; 
                    MClib`Private`y$69923 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69923, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$69923 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 4, 3, 4] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$69923 = 1; 
                    MClib`Private`y$69923 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$69923, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 4, 3, 4], {$CellContext`x, 
                    MClib`Private`y$69923 - MClib`Private`j$69923, 
                    MClib`Private`y$69923 + MClib`Private`j$69923}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$69923 = 5; 
                    MClib`Private`y$69923 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7361892678019924`*^9, 3.7363282730451107`*^9, 
  3.7363285320604563`*^9, 3.7366233516375885`*^9, 3.736623487770975*^9, 
  3.73667154694263*^9, 3.7366717249320197`*^9, 3.7366720482221813`*^9, 
  3.736672099416421*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Dynamic", "[", 
    RowBox[{"Button", "[", 
     RowBox[{"\"\<Verifica\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"userAnswer", "[", 
           RowBox[{"[", 
            RowBox[{"4", ",", "1"}], "]"}], "]"}], " ", "===", "   ", "0"}], 
         "  ", "||", " ", 
         RowBox[{
          RowBox[{"userAnswer", "[", 
           RowBox[{"[", 
            RowBox[{"4", ",", "2"}], "]"}], "]"}], " ", "===", " ", "0"}], 
         " ", "||", " ", 
         RowBox[{
          RowBox[{"userAnswer", "[", 
           RowBox[{"[", 
            RowBox[{"4", ",", "3"}], "]"}], "]"}], " ", "===", "  ", "0"}]}], 
        ",", "  ", 
        RowBox[{
        "MessageDialog", "[", 
         "\"\<Rispondi a tutte le domande prima di verificare\>\"", "]"}], 
        " ", ",", " ", 
        RowBox[{
         RowBox[{"checkAnswer", "[", "4", "]"}], ";", " ", 
         RowBox[{"clicked2B", " ", "=", "1"}]}]}], "]"}]}], " ", "]"}], "]"}],
    "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"clicked2B", "===", " ", "1"}], ",", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{
        RowBox[{"StatusArea", "[", 
         RowBox[{
          RowBox[{"Button", "[", "\"\<Vai alla prossima sezione\>\"", "]"}], 
          ",", "\"\<RS_G2\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
          "\"\<RS_G2\>\""}], "}"}]}], "]"}], ",", " ", 
      "\"\<Verifica la risposta prima di passare alla prossima sezione\>\""}],
      "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7353287773870864`*^9, 3.7353288247337947`*^9}, {
   3.7361744836411667`*^9, 3.7361744888922586`*^9}, {3.7361772088245945`*^9, 
   3.7361772144746294`*^9}, 3.736179098136606*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Button["Verifica", 
    If[
     Or[Part[MClib`userAnswer, 4, 1] === 0, Part[MClib`userAnswer, 4, 2] === 
      0, Part[MClib`userAnswer, 4, 3] === 0], 
     MessageDialog["Rispondi a tutte le domande prima di verificare"], 
     MClib`checkAnswer[4]; MClib`clicked2B = 1]], StandardForm],
  ImageSizeCache->{54., {9., 20.}}]], "Output",
 CellChangeTimes->{3.7361892679229937`*^9, 3.7363282767642527`*^9, 
  3.7363285356389627`*^9, 3.736623354287837*^9, 3.736623490404236*^9, 
  3.736671550677045*^9, 3.736671728617234*^9, 3.736672051759228*^9, 
  3.736672102944044*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[MClib`clicked2B === 1, 
    Hyperlink[
     StatusArea[
      Button["Vai alla prossima sezione"], "RS_G2"], {
      EvaluationNotebook[], "RS_G2"}], 
    "Verifica la risposta prima di passare alla prossima sezione"], 
   StandardForm],
  ImageSizeCache->{531., {3., 11.}}]], "Output",
 CellChangeTimes->{3.7361892679229937`*^9, 3.7363282767642527`*^9, 
  3.7363285356389627`*^9, 3.736623354287837*^9, 3.736623490404236*^9, 
  3.736671550677045*^9, 3.736671728617234*^9, 3.736672051759228*^9, 
  3.7366721029752445`*^9}]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Risultati", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}, {3.7346172310281005`*^9, 3.734617241201078*^9}, {
   3.735296789220481*^9, 3.73529679043255*^9}},
 CellTags->"RS_G2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"correctAnswerG2", "=", "  ", 
     RowBox[{"correctCounter", " ", "-", " ", "correctAnswerG1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"correctAnswerG2", "  ", "<", " ", "4"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<Su 6 domande hai risposto correttamente a ``.\>\"", ",", 
        "correctAnswerG2"}], "]"}], "\[IndentingNewLine]", 
      RowBox[{
      "Text", "[", 
       "\"\<volendo puoi proseguire ma sarebbe meglio ripassare un po di \
teoria e poi riprovare gli esercizi\>\"", "]"}]}], "\[IndentingNewLine]", ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<Su 6 domande hai risposto correttamente a ``.\>\"", ",", 
        "correctAnswerG2"}], "]"}], "\[IndentingNewLine]", 
      RowBox[{
      "Text", "[", 
       "\"\<hai compreso bene l\[CloseCurlyQuote]argomento ora puoi \
proseguire, ma se hai ancora qualche dubbio puoi comunque tornare indietro e \
riguardare le equazioni di primo grado\>\"", "]"}]}], "\[IndentingNewLine]", 
     ",", "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", "\"\<Qualcosa \[EGrave] andato storto!!\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{"Hyperlink", "[", 
      RowBox[{
       RowBox[{"StatusArea", "[", 
        RowBox[{
         RowBox[{"Button", "[", "\"\<Torna alla teoria\>\"", "]"}], ",", " ", 
         "\"\<E_2G\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<E_2G\>\""}],
         "}"}]}], "]"}], "}"}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{"Hyperlink", "[", 
      RowBox[{
       RowBox[{"StatusArea", "[", 
        RowBox[{
         RowBox[{"Button", "[", "\"\<Torna all' indice\>\"", "]"}], ",", " ", 
         "\"\<Index\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
         "\"\<Index\>\""}], "}"}]}], "]"}], "}"}], "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "in", " ", "questi", " ", "due", " ", "casi", " ", "caso", " ", "si", " ",
      "chiama", " ", "lu", " ", "funzione", " ", "che", " ", "resetta", " ", 
     "i", " ", "vettori", " ", "nel", " ", "package"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Ricarica Esercizi\>\"", ",", " ", 
     RowBox[{
      RowBox[{"resetGrade", "[", 
       RowBox[{"2", ",", " ", "correctAnswerG2"}], "]"}], ";", " ", 
      RowBox[{"NotebookLocate", "[", "\"\<ES_G2\>\"", "]"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "in", " ", "questi", " ", "due", " ", "casi", " ", "caso", " ", "si", " ",
      "chiama", " ", "lu", " ", "funzione", " ", "che", " ", "resetta", " ", 
     "i", " ", "vettori", " ", "nel", " ", "package"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{"Hyperlink", "[", 
      RowBox[{
       RowBox[{"StatusArea", "[", 
        RowBox[{
         RowBox[{"Button", "[", "\"\<Sezione Successiva\>\"", "]"}], ",", 
         " ", "\"\<E_G3\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<E_G3\>\""}],
         "}"}]}], "]"}], "}"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.735329006711203*^9, 3.735329093672177*^9}, {
   3.735490190447387*^9, 3.7354902124404645`*^9}, {3.7355419162615337`*^9, 
   3.735541920612355*^9}, {3.736174495860377*^9, 3.736174517059128*^9}, {
   3.736177218144655*^9, 3.7361772252747135`*^9}, 3.736177699096053*^9, 
   3.7361777417683697`*^9}],

Cell[BoxData[
 RowBox[{
  InterpretationBox["\<\"Su 6 domande hai risposto correttamente a \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\).\"\>",
   StringForm["Su 6 domande hai risposto correttamente a ``.", 0],
   Editable->False], " ", 
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"volendo puoi proseguire ma sarebbe meglio ripassare un po di \
teoria e poi riprovare gli esercizi\"\>", TextForm]], "InlineText"],
   Text["volendo puoi proseguire ma sarebbe meglio ripassare un po di teoria \
e poi riprovare gli esercizi"]]}]], "Output",
 CellChangeTimes->{3.7361892680029945`*^9, 3.7363282768736396`*^9, 
  3.7363285357014465`*^9, 3.7366233543657503`*^9, 3.736623490468169*^9, 
  3.7366715507862453`*^9, 3.7366717286952343`*^9, 3.736672051838228*^9, 
  3.7366721030376444`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Torna alla teoria\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "E_2G"]& , TagBoxNote -> "E_2G"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Torna alla teoria\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "E_2G"]& , TagBoxNote -> "E_2G"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "E_2G"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "E_2G"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7361892680029945`*^9, 3.7363282768736396`*^9, 
  3.7363285357014465`*^9, 3.7366233543657503`*^9, 3.736623490468169*^9, 
  3.7366715507862453`*^9, 3.7366717286952343`*^9, 3.736672051838228*^9, 
  3.7366721030532446`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Torna all' indice\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "Index"]& , TagBoxNote -> "Index"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Torna all' indice\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "Index"]& , TagBoxNote -> "Index"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "Index"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "Index"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7361892680029945`*^9, 3.7363282768736396`*^9, 
  3.7363285357014465`*^9, 3.7366233543657503`*^9, 3.736623490468169*^9, 
  3.7366715507862453`*^9, 3.7366717286952343`*^9, 3.736672051838228*^9, 
  3.7366721030698442`*^9}],

Cell[BoxData[
 ButtonBox["\<\"Ricarica Esercizi\"\>",
  Appearance->Automatic,
  ButtonFunction:>(MClib`resetGrade[2, MClib`correctAnswerG2]; 
   NotebookLocate["ES_G2"]),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{3.7361892680029945`*^9, 3.7363282768736396`*^9, 
  3.7363285357014465`*^9, 3.7366233543657503`*^9, 3.736623490468169*^9, 
  3.7366715507862453`*^9, 3.7366717286952343`*^9, 3.736672051838228*^9, 
  3.7366721030698442`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Sezione Successiva\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "E_G3"]& , TagBoxNote -> "E_G3"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Sezione Successiva\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "E_G3"]& , TagBoxNote -> "E_G3"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "E_G3"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "E_G3"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7361892680029945`*^9, 3.7363282768736396`*^9, 
  3.7363285357014465`*^9, 3.7366233543657503`*^9, 3.736623490468169*^9, 
  3.7366715507862453`*^9, 3.7366717286952343`*^9, 3.736672051838228*^9, 
  3.7366721030854445`*^9}]
}, {2, 3, 4, 5, 6}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[TextData[StyleBox["Funzioni polinomiali di 3 \[Degree]Grado", \
"Section"]], "Text",
 CellChangeTimes->{{3.734265091372779*^9, 3.7342651012527695`*^9}, {
  3.734265294242138*^9, 3.7342652943623247`*^9}, {3.7355408150236573`*^9, 
  3.735540817701668*^9}, {3.7356180091687613`*^9, 3.73561801152839*^9}},
 CellTags->"E_G3"],

Cell[CellGroupData[{

Cell["Introduzione ", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}}],

Cell[TextData[{
 "Le funzioni polinomiali di terzo grado hanno la forma y=a",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]]],
 "+b",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]]],
 "+cx+d ovvero una cubica ma cosa vogliono dire i parametri a, b, c e d?\n"
}], "Text",
 CellChangeTimes->{
  3.735297207849425*^9, {3.735618016560132*^9, 3.735618021263754*^9}, {
   3.73561818480756*^9, 3.735618224217799*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"x", "^", "3"}]}], "+", 
      RowBox[{"x", " ", "^", "2"}], "+", 
      RowBox[{"5", "*", "x"}], "+", " ", "7"}], ",", 
     RowBox[{
      RowBox[{"x", "^", "3"}], "+", 
      RowBox[{"x", "^", "2"}], "+", 
      RowBox[{"7", "*", "x"}], "+", " ", "8"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], ",", " ", 
   RowBox[{"PlotLabels", "\[Rule]", " ", "\"\<Expressions\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7355409292102747`*^9, 3.735540969229311*^9}, {
  3.735704247577092*^9, 3.735704324175317*^9}, {3.736174522372238*^9, 
  3.7361745282163334`*^9}, {3.7361772308547497`*^9, 3.736177241311822*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
GWOGUej//w9Cd51M4/bJKPQ/q8JVtA==
       "]]},
     Annotation[#, "Charting`Private`Tag$71035#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtl2c41Y3/x43jdHKO3UBkHPOIbJnfj50ZZaW7knXjFt1EdoNbKclWITRU
SEWhbrfzISMZlZTKquxR2WT++l/X/8H7el+vB69n7ydvCffA/V5sLCwsk7/z
fx09YjOzsUFHcM2o2+BJwuHIbfPdq3S8sbEte5I1CW15+xcrf9FxQYhtonf2
Moprn1gLnKXjGwPFH21dl7HuYirlyzAdv0Ds8YG8y0hR6tqJbXS0Gb78YED5
MqafdLM6k03HtbIdO9WdErGYNfg2ixYddXU2C00+uIgcXuaqQocl0ae7StXH
7jwKfGzwv5kigae0i4LP/R2H+19c95B/JY7KM/3iev1nMfKnvn/ygBguVb2K
+1Uag1Wnrvs93LcTl98x2vX8I9A21VF8/ZoInjvQdkpmbyia5/5nu3dSGOX4
qi1ri4OwsCn8Q/AhIcwfNTlucCQQj8Slb319bzvuCY3cZV7sizFu7KVUgW3Y
Xsx5u22TF7IoijGN/9mCt2tDv58ROIafL107X/yeH2cqp++utLjiuwbxErfX
/JgjH3ClvcwVWzfuvtnazI+T1u2lj6+5Yk1whdCZan7MUO6LvvenK9489K7Y
4RY/bkhVP3MmuaKfAtebtRP86JMQkFgJB3Hl1RlBOxo/Jkdk/3egwRlFOH3u
zxnxYXrbedvKVQc8UtOaKKnHh1naUqwFQw5YEKRywk6DD6EyiDOn3QFlupc1
S2T5cNXAm70x3wF3l1yu96Dx4YVB35pRUwc0si3v73jPi4nFCx/c0w6gb+r6
1sc+vOhtyjw3r7Mf/9JgcHSL8OB1geK00ZB9GMTx7G4oDw+y6Nfm3rLbhxHv
zS352XiwepNzTJTCPrwY4nXFYoQbPyZVXDz/1RaLnuYLVT3mxjd1e8xY99ni
mMZ2pQwzblz+d3AxdLcN/qlJct53ggvn6svqKGQr9NDqu/fiBRXP1Az1PCab
o/c9LSezSirGxZbkR42boZ9QCntzERU1MxMtjrSb4YkV4yPtKVR8af5TxDvT
DKOY9wU+HaXipH3uxXhZM0w3D4n5scKJW59ciWOxNcVGZ5qDkDonXjf4izOh
2BgZYTobAbcpKPdtTPh4ISD22jIGMin4Ne1Z+v3LgE7GHo7OCRT0EW/IXzsJ
eI47sZgIoOCot43GpDHgp9u9zrx7KOg/duvEiwYCL7w98+hxyya0/mj52sjS
AIcZTcfmZsiYI5ryQzhEF6OSuxN9hshot6+LBSx0kX/hZ2VPFxlfkgPTkkV1
0aBWkLuhmoxbDLkbyht1MMPZ73lGPBl1wv0YG8I6aBLHJaAlTMbJe0lnklv2
YEHvgfpwQw7sS1IIemuliaqDqsud6hzoTi38ypTVxPpxPmVlOQ4cupNJe8uu
icOLr7OHuTnQkn2H5qFqDWTwWwcf6CFhHikUaLs1sMzMRFLxFAmNLG6GtQqr
Y/1D9TNfSthRSEj/nhhVFR0rBCp089lx3b6/QGtCBYerZyYy09hxr8i6W2CL
ClJePXK2iWDHULWZN/qJKmgzuGv3c3N21OSL+HKARwU/CEr3pX1jwy1lGiS7
Hco4cnarnrkgG768ckmsIW0XckY//JnGyYbLftHmn512oVKYxa0vq6xoLfYX
v5rwLgwNiOaM+MqKmj5S+aUFCkg+NPSxpIgVe9pC2ZvKGSil/jSEX58Vp6J7
d+0dlEP3YYeHvcdYsFW0SWr4pDTGf/3hznBgQZrx06FlQhqLei5sO2X2m8em
0YoqjTMd1dG8CixoTTN8n39TCtlOW1yNH91gerLl9fJ10pFQGXtrz7XBvGmU
8+izoSQ+z5AzHXVaYyadPjZbl7QTKYdGPFj11pg3YmsFnqjvRCfxwnPCEmvM
Rw/skzi7RXGmiI7WE6tMh2PlzUNyoiiPO3Ufn15lRtXv79/bvAOvjm9Ribi3
wizze/rksIgQhhCsorTlX0zBqvvRtyhbsI6EutL9v5hyMbW97s8FkPdVjKtB
/S/mk/fJjuH+AljisJp1IukX86bMpvr7b/lx0HeR/73kL+Zom5wkLZ8P96d/
p9ywWmK6mIzSh69yo/LYp7nduQvMR43pfk61HHhySlF+e9wCkyK97EYy4sCq
xbOH1/0WmJ6b5hkqL0hoSGY0tu5ZYIpklTuQmthxPz0iy7dznplz/XJ1VCcr
hhwW1rlFnWeeGeG4IktbZT5/63p6W8QsE2ZiPeRWxpkmz7s3rzlNMZPz0hMr
L4wTpUV3tJt0f/OLb3EUmCQEswN9U8SnmIIro7v7578THxbJqVadP5k9hxp3
Z5ZOEdKRTry5yz+Ye0JyK5245oi6s/M0MP/OpDEIO6OiZWI1SY0c/2WMWZ8A
wU6V7HDi/sMlPoEBpoud4cfEeh5w8qYXdEQ1M4U0JWU1LwtDU+uni2oHXhIJ
/O09wkxJ8An73HRIoZmg5mVdCfgoCRSpblIc+ytir6+1V+e0JFhG9sR0lrcQ
XpUFbl1SdGiV7w8K2fKasNSXGMNLdPAxDnrQPd5BDFNudzgclgL//FMZoiWf
CD8f7ZQtfDKgt7BYriL4megdqLsmoigDNOuwDtO4z0RB/vl1fQsZeLAYxhPw
RzeR0jf5ou2sDPywjUioofUSSoHWybJzMlAVU1PzUPMLEb96BRd6ZUFHsbbM
LmuAKEm+T7naJA8anR8ya5oHiPHMbeGiQ/KgHDkZsWt1gJg8ddyMycYAmebt
xpRjg8TFyKflLgYMEPAKeMdkDBEx7pUrIxUMmMzZMadUM0wUhjcfLHigAHm0
UA2uoTGCJH6Y92WZIlwvvyQUuX2cAI8JEfVORch0LVgbtRgn+qgWXnXzipB4
r7WhvnScyDTY52WmrQRhJnSnqLAJwog92XS6Vgn2R70JnaB+J0bfyeetfNoN
bKFbezyFpojqoIjqrQIq4OpW1FGlPkV4b6gqV8iqQJkl0UyzmyJ2ikqrB+ip
gLuYb8WT+CkiLsfKU9pbBepeVieT5qaI6PyqovLnKhC7w9P0dvs0oenzasnX
RxVItWWlA7GzhOi+i/3cXWrwR7H5Ha28WWKT6IhZ9w81eJLRk33p+Swhx8ZY
qSOrg6cfOUFtepZov7lYO6ipDg0Crh6xR+aIbWrNXCFX1SHem1WQrj1PZOms
NX5z04BNNLuz7j8WiEZ9b476TVrgIuuKmpsXiW8mKSfLJbWgyMhzg1Nqkdi1
/UAb6muBbXhYdPnBRaI1vK5E46QWZA7nh5MaFokbNR66l75pgUzt9N+F2UtE
61lrl/X6PWAamuY+vneZyHx5NeNVgQ5kpuQW1Hj83jlrKbkUdWC05O6X1Jhl
Imw8fbysXwcSB/49ovtkmWBIb0RK7NSFTrtB10SxFWLopUtveo4ueCpoHFBa
WCHmSP+5fs/Tg9gvH4yDbq0RVfIKpgq1BtD3zOp4WPUa8Uh7nF3gmwHopGFm
zPs1orN14rswOwFTpkVjFzetE43M83mXTAk4Uhx95dZf64RraffKTAsBOqFS
3Z1qG4TS7sNdoYEAvzi0n+1wZ4EA0/r3QlcMoTBotu1GAAuoGC/fKSwwBIf+
B98kIllA/Mq2FZMnhvCoSpIml84CAuXjxyo+GYL3X7Sj6o0sYJx52OO4tBF0
vukn2TBYYUnCHjTRCB5lx9vFzLCCAs/FZ7HsJtAiED/Cw8IGzFnd88LCJjB8
6Z+YAi42sJb/M79J2QREouJK6uXYYNah4qfnERO48Mc5CvUoG6zY8OU8eG4C
bqIxmNXCBtQX8cuxp0yBNy9E+fFtdpi51mVSzGYOgTc9eQedOECQ1a5uu7sl
JIVfy0ny4AD69bCHrVGWUGrXLqd9ggMWctO0r2ZZwo91LcOkBA447mjoENxm
Cf6HqEF7qjmAO7lvSkfHCvy2lL1LlCBDT9YeVWFBa/CO38jUmCTDR24lJf8h
Gzjid130/FkKmNZl+0QN2sHKp83t05cpsNJ2GePn7OCqRXjMH9cp0Ksv4ZlL
soe3ci79KuUUmHHLvv1Tyh5MRrYW9AxSQNVh+K6ctz3Ie6ZIqe7dDLzf6fnT
4/Ywd/iCQi83J/R8vHONvL4fEuxDtdVyqGAhSqoPtXKE1FaGf8l9Kpit+q57
ujlCjnn/DelKKlCKGK4eIY7wSH8vSbCDCjP83qnJeY7wUV749eomGrSd9Wl/
MOcIcmw1no3BNPiXp/LZrwInaCzjSD5oxQUDrQ7xmze7AGlLxvDpZW6QfXPM
4DrnIehq+WcqjocP9D8fH/V64gaOke6a11/wQ921d3SrOk/wp05ItrtuAWu5
q1yi8r4gVtyYSR7fClNMXod0oQCIrDI+wJO9HTxXFMpuCgfBiUL/Cs3dQmDV
ZxdR5xACNDYtd6UhYXC8NmEtahIOpscdMhhpIvCBXUSh4Fo0CD4TDTSV2gmy
2ytmLKhnITXoQopylxgYZjIb6v+Nhf3x+xRzK8RBxT5Lxex0PDAOxTnejpaA
EcfbubEnE+DD8OabaY6S4Njh8uLOXCK0uw8Z8ovRwZ0WbLsEyfCVdHcpQ5IO
0MX9cY9FMswV+jwUkqFDtd5xIso+GYQmJkQkFOkgVx9xn+qeDJ7BM4u7delg
or/9l3VsMizHbjywcaZDdLbF0sHGZJC5IySccIUOj8RUyQW2KaBt3v2Glvab
u4NNDJxTwHos53xyJh1sspgn+o6mwN+K4vNZuXRY/hWdIft3ClQ/lXlTWEyH
xKFO0d60FNjfqBZf30SHc4L92e8/pYCXz7ze3hY6UBJaFwu+pUAYZ+VsSzsd
iotHLP6eSIFcW51j797T4dvsww7BtRQY/QB63wZ++5SmuEviqbAcxjbrNUIH
03Nu+YHyqcC1o/7+2Dgd/jyvXeGkmgqqR823T0/T4bB4eYeiSSqYsm5uPzlP
h1iGy2dRm1RwufUqbmmJDndKTPt4nVLBzzRRN2qVDiNf1/rIR1Ph//8qhHGw
9278mQr/A0S8BzA=
       "]]},
     Annotation[#, "Charting`Private`Tag$71035#2"]& ]}, {{{}, 
     {GrayLevel[0.4], AbsoluteThickness[0.5], 
      StyleBox[{{
         LineBox[{
          Scaled[{0.02, 0}, {10, -842.999887755107}], 
           Offset[{3, 0}, Scaled[{0.02, 0}, {10, -842.999887755107}]], 
           Offset[{7, 0}, Scaled[{0.02, 0}, {10, -842.9998877547732}]], 
           Offset[{12, 0}, Scaled[{0.02, 0}, {10, -842.9998877547732}]]}], 
         LineBox[{
          Scaled[{0.02, 0}, {10, 1177.9998665306175`}], 
           Offset[{3, 0}, Scaled[{0.02, 0}, {10, 1177.9998665306175`}]], 
           Offset[{7, 0}, Scaled[{0.02, 0}, {10, 1177.9994644953315`}]], 
           Offset[{12, 0}, Scaled[{0.02, 0}, {10, 1177.9994644953315`}]]}]}, {
         InsetBox[
          TagBox[
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["x", "3"]}], "+", 
            SuperscriptBox["x", "2"], "+", 
            RowBox[{"5", " ", "x"}], "+", "7"}],
           HoldForm], Offset[{15, 0}, 
          Scaled[{0.02, 0}, {10, -842.9998877547732}]], 
          ImageScaled[{0, 0.5}]], InsetBox[
          TagBox[
           RowBox[{
            SuperscriptBox["x", "3"], "+", 
            SuperscriptBox["x", "2"], "+", 
            RowBox[{"7", " ", "x"}], "+", "8"}],
           HoldForm], Offset[{15, 0}, 
          Scaled[{0.02, 0}, {10, 1177.9994644953315}]], 
          ImageScaled[{0, 0.5}]]}, {}, {}},
       FontColor->GrayLevel[0.4]]}}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 107}, {All, All}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-961.9998828571479, 1177.9998665306175`}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.736189268260995*^9, 3.736328277092413*^9, 
  3.736328535904583*^9, 3.736623354727374*^9, 3.736623490677951*^9, 
  3.736671551262247*^9, 3.7366717289546375`*^9, 3.7366720521140327`*^9, 
  3.7366721033038445`*^9}]
}, {2}]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.734265614573988*^9, 3.734265654600589*^9}, {
   3.735538404139413*^9, 3.7355384117234488`*^9}, 3.7355409751329317`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione guidata del parametro d", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.7352940246883583`*^9, 3.7352940263724546`*^9}, {
   3.7352950820538363`*^9, 3.7352950826698713`*^9}, {3.7352957197473106`*^9, 
   3.735295720286341*^9}, {3.7352973000917006`*^9, 3.7352973049559793`*^9}, {
   3.7355410088870726`*^9, 3.735541010261879*^9}},
 CellTags->"E_G3_CD"],

Cell["\<\
Partiamo cercando di capire cosa rappresenta il d della formula
\
\>", "Text",
 CellChangeTimes->{3.735297328782342*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "*", 
       SuperscriptBox["x", "3"]}], " ", "+", 
      RowBox[{"3", "*", 
       SuperscriptBox["x", "2"]}], "+", " ", "x", "+", " ", "d"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", " ", 
       RowBox[{"+", "3"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"10", ",", " ", 
        RowBox[{"-", "10"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
       SuperscriptBox["x", "3"], " ", "+", " ", 
       SuperscriptBox["x", "2"], "+", " ", 
       RowBox[{"2", "*", "x"}], "+", " ", "d"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", " ", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AutoCollapse", "[", "]"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Plotting", " ", "an", " ", "example"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7352973757330275`*^9, 3.73529744011571*^9}, {
  3.7355410401852107`*^9, 3.7355410468190413`*^9}, {3.735541084505807*^9, 
  3.73554108513361*^9}, {3.7356390871461983`*^9, 3.735639087513999*^9}, {
  3.7361745354054766`*^9, 3.736174541578598*^9}, {3.7361772460458527`*^9, 
  3.736177253105899*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{MClib`d$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[MClib`d$$], -10, 10}}, Typeset`size$$ = {432., {148., 154.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    MClib`d$71257$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {MClib`d$$ = -10}, "ControllerVariables" :> {
        Hold[MClib`d$$, MClib`d$71257$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[2 $CellContext`x^3 + 3 $CellContext`x^2 + $CellContext`x + 
        MClib`d$$, {$CellContext`x, -3, 
         Plus[3]}, PlotRange -> {10, -10}, 
        PlotLabel -> $CellContext`x^3 + $CellContext`x^2 + 2 $CellContext`x + 
         MClib`d$$], "Specifications" :> {{MClib`d$$, -10, 10}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{489., {200., 207.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7361892683609953`*^9, 3.7363282771549206`*^9, 
  3.736328535982716*^9, 3.7366233548002977`*^9, 3.7366234907408857`*^9, 
  3.736671551340247*^9, 3.736671729051841*^9, 3.736672052207633*^9, 
  3.736672103400846*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hyperText", "[", 
   RowBox[{
   "\"\<Hai dubbi su come cambia il grafico quando cambia d?\>\"", ",", 
    "\"\<il termine noto c indica l\[CloseCurlyQuote]ordinata del punto di \
intersezione del grafico con l\[CloseCurlyQuote]asse Y\>\"", ",", 
    "LinkHand"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7352975258106112`*^9, 3.7352975453097267`*^9}, {
  3.736174547342708*^9, 3.7361745530398026`*^9}, {3.73617725783593*^9, 
  3.7361772653793697`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia d?\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "il termine noto c indica l\[CloseCurlyQuote]ordinata del punto di \
intersezione del grafico con l\[CloseCurlyQuote]asse Y"], Method -> 
    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
    True}]]], "Output",
 CellChangeTimes->{3.7361892686109953`*^9, 3.736328277483081*^9, 
  3.7363285363265066`*^9, 3.7366233551159697`*^9, 3.736623490979637*^9, 
  3.7366715517934494`*^9, 3.736671729372842*^9, 3.7366720524942355`*^9, 
  3.736672103708855*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Caso particolare d",
 StyleBox[" ",
  FontWeight->"Bold"],
 "= 0"
}], "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345073172201977`*^9, 3.7345073271699533`*^9}, {3.7352960962278438`*^9, 
   3.7352961040232897`*^9}, {3.735297656163067*^9, 3.735297656586091*^9}, {
   3.7355410955364575`*^9, 3.735541096674466*^9}},
 CellTags->"E3_CP_D0"],

Cell["\<\
Hai posto attenzione a cosa succede quando d=0?
\
\>", "Text",
 CellChangeTimes->{{3.7352976665066586`*^9, 3.735297685099722*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Hyperlink", "[", 
         RowBox[{
          RowBox[{"StatusArea", "[", 
           RowBox[{
            RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
            "\"\<E_G3_CC\>\""}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
            "\"\<E_G3_CC\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<No\>\"", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"p7", "\[Equal]", " ", "0"}], ",", 
            RowBox[{
             RowBox[{"p7", "=", "1"}], ";", 
             RowBox[{"Print", "[", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", "*", 
                  SuperscriptBox["x", "3"]}], " ", "+", 
                 RowBox[{"3", "*", 
                  SuperscriptBox["x", "2"]}], "+", " ", "x"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"x", ",", 
                  RowBox[{"-", "5"}], ",", 
                  RowBox[{"+", "5"}]}], "}"}], ",", " ", 
                RowBox[{
                "PlotLegends", "\[Rule]", 
                 "\"\<y = 2*\!\(\*SuperscriptBox[\(x\), \(3\)]\) \
+3*\!\(\*SuperscriptBox[\(x\), \(2\)]\)+ x\>\""}]}], "]"}], "]"}], ";", " ", 
             RowBox[{
             "Print", "[", 
              "\"\<come puoi vedere il grafico passa  per \
l\[CloseCurlyQuote]origine\>\"", "]"}]}]}], "]"}]}], "]"}]}], "}"}], "]"}], 
     " ", "\[IndentingNewLine]", 
     RowBox[{"AutoCollapse", "[", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{
        RowBox[{"StatusArea", "[", 
         RowBox[{
          RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
          "\"\<E_G3_CC\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
          "\"\<E_G3_CC\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<No\>\"", ",", " ", 
        RowBox[{"p7", " ", "=", " ", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"p7", " ", "===", " ", "1"}], ",", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"2", "*", 
           SuperscriptBox["x", "3"]}], " ", "+", 
          RowBox[{"3", "*", 
           SuperscriptBox["x", "2"]}], "+", " ", "x"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"+", "5"}]}], "}"}], ",", " ", 
         RowBox[{
         "PlotLegends", "\[Rule]", 
          "\"\<y = 2*\!\(\*SuperscriptBox[\(x\), \(3\)]\) \
+3*\!\(\*SuperscriptBox[\(x\), \(2\)]\)+ x\>\""}], ",", " ", 
         RowBox[{"ImageSize", " ", "\[Rule]", " ", "Medium"}]}], "]"}], 
       RowBox[{
       "Text", "[", 
        "\"\<come puoi vedere il grafico passa  per \
l\[CloseCurlyQuote]origine\>\"", "]"}]}], ",", " ", 
      RowBox[{"Text", "[", "\"\<\>\"", "]"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7352977392638197`*^9, 3.7352977926878757`*^9}, {
  3.735297833655219*^9, 3.7352978602227383`*^9}, {3.735297985110882*^9, 
  3.7352979913522387`*^9}, {3.736174564676012*^9, 3.736174570130097*^9}, {
  3.736177270177587*^9, 3.73617727540961*^9}, {3.7361792554192147`*^9, 
  3.7361792616840534`*^9}, {3.73618884575804*^9, 3.736188871318081*^9}, {
  3.736188905776843*^9, 3.7361889338977065`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
          Automatic, Method -> "Preemptive"], StatusArea[#, "E_G3_CC"]& , 
         TagBoxNote -> "E_G3_CC"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
           Automatic, Method -> "Preemptive"], StatusArea[#, "E_G3_CC"]& , 
          TagBoxNote -> "E_G3_CC"], {"HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "E_G3_CC"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "E_G3_CC"}, "Hyperlink"]& ],
   "\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> (MClib`p7 = 1), Appearance -> Automatic, 
    Evaluator -> Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7361892686789966`*^9, 3.7363282776081343`*^9, 
  3.7363285364052525`*^9, 3.736623355185897*^9, 3.7366234910495644`*^9, 
  3.7366715518864503`*^9, 3.7366717294528427`*^9, 3.736672052572236*^9, 
  3.736672103787855*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[MClib`p7 === 1, 
    Plot[2 $CellContext`x^3 + 
      3 $CellContext`x^2 + $CellContext`x, {$CellContext`x, -5, 
       Plus[5]}, PlotLegends -> 
      "y = 2*\!\(\*SuperscriptBox[\(x\), \(3\)]\) +3*\!\(\*SuperscriptBox[\(x\
\), \(2\)]\)+ x", ImageSize -> Medium] 
    Text["come puoi vedere il grafico passa  per l\[CloseCurlyQuote]origine"], 
    Text[""]], StandardForm],
  ImageSizeCache->{0., {3., 15.}}]], "Output",
 CellChangeTimes->{3.7361892686789966`*^9, 3.7363282776081343`*^9, 
  3.7363285364052525`*^9, 3.736623355185897*^9, 3.7366234910495644`*^9, 
  3.7366715518864503`*^9, 3.7366717294528427`*^9, 3.736672052572236*^9, 
  3.7366721038034554`*^9}]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione guidata del parametro c", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.7352940246883583`*^9, 3.7352940263724546`*^9}, {
   3.7352950820538363`*^9, 3.7352950826698713`*^9}, {3.7352957197473106`*^9, 
   3.735295720286341*^9}, {3.7352973000917006`*^9, 3.7352973049559793`*^9}, {
   3.7352979210292163`*^9, 3.7352979214342394`*^9}, {3.7355411028763075`*^9, 
   3.7355411040475163`*^9}},
 CellTags->"E_G3_CC"],

Cell["\<\
Ma il parametro c come si traduce sul grafico?
\
\>", "Text",
 CellChangeTimes->{3.7352980168066945`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "*", 
         SuperscriptBox["x", "3"]}], " ", "+", 
        RowBox[{"3", "*", 
         SuperscriptBox["x", "2"]}], "+", " ", 
        RowBox[{"c", "*", "x"}], "+", " ", "1"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "3"}], ",", " ", 
         RowBox[{"+", "3"}]}], "}"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"10", ",", " ", 
          RowBox[{"-", "10"}]}], "}"}]}], ",", " ", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{
         RowBox[{"2", "*", 
          SuperscriptBox["x", "3"]}], " ", "+", 
         RowBox[{"3", "*", 
          SuperscriptBox["x", "2"]}], "+", " ", 
         RowBox[{"c", "*", "x"}], "+", " ", "1"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", " ", 
       RowBox[{"-", "10"}], ",", 
       RowBox[{"+", "10"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.735298043428217*^9, 3.735298071636831*^9}, {
   3.735541116529767*^9, 3.735541121106989*^9}, 3.7355412610912347`*^9, {
   3.7356390986134253`*^9, 3.7356391005654287`*^9}, {3.7361745816783085`*^9, 
   3.736174587596797*^9}, {3.736177280276445*^9, 3.7361772858766737`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], -10, 10}}, Typeset`size$$ = {
    432., {148., 154.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`c$71335$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$71335$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[2 $CellContext`x^3 + 
        3 $CellContext`x^2 + $CellContext`c$$ $CellContext`x + 
        1, {$CellContext`x, -3, 
         Plus[3]}, PlotRange -> {10, -10}, PlotLabel -> 
        2 $CellContext`x^3 + 
         3 $CellContext`x^2 + $CellContext`c$$ $CellContext`x + 1], 
      "Specifications" :> {{$CellContext`c$$, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{489., {200., 207.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.736189268958997*^9, 3.7363282776706324`*^9, 
  3.7363285365296507`*^9, 3.736623355252827*^9, 3.7366234911134977`*^9, 
  3.736671551965852*^9, 3.7366717295308423`*^9, 3.7366720526858373`*^9, 
  3.736672103889456*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"hyperText", "[", 
    RowBox[{
    "\"\<Hai dubbi su come cambia il grafico quando cambia c?\>\"", ",", 
     "\"\<il coefficiente del termine di primo grado della x pi\[UGrave] \
\[EGrave] grande in valore assoluto pi\[UGrave] indica quanto il grafico \
assomiglia a una retta\>\"", ",", "LinkHand"}], "]"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.735298099492424*^9, 3.735298113001197*^9}, {
  3.7357044473645725`*^9, 3.735704455536995*^9}, {3.736174592378496*^9, 
  3.736174599516842*^9}, {3.7361772902467003`*^9, 3.7361772964587383`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia c?\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "il coefficiente del termine di primo grado della x pi\[UGrave] \
\[EGrave] grande in valore assoluto pi\[UGrave] indica quanto il grafico \
assomiglia a una retta"], Method -> "Preemptive", PassEventsDown -> Automatic,
     PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{3.7361892690689974`*^9, 3.7363282780456395`*^9, 
  3.7363285369203157`*^9, 3.736623355624441*^9, 3.7366234914201803`*^9, 
  3.736671552362853*^9, 3.7366717298852463`*^9, 3.7366720530754414`*^9, 
  3.736672104276659*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["\<\
Comprensione guidata parametro b
\
\>", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345073172201977`*^9, 3.7345073271699533`*^9}, {3.7352960962278438`*^9, 
   3.7352961040232897`*^9}, {3.735297656163067*^9, 3.735297656586091*^9}, {
   3.7352981637681007`*^9, 3.735298164128121*^9}, {3.7352982309449425`*^9, 
   3.7352982401714706`*^9}, {3.735541326396946*^9, 3.7355413277625628`*^9}},
 CellTags->"E_G3_CB"],

Cell["\<\
Ma il parametro b come si traduce sul grafico?

\
\>", "Text",
 CellChangeTimes->{{3.7352982687371044`*^9, 3.735298276634556*^9}, {
  3.735541331417991*^9, 3.7355413317605968`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], " ", "+", 
      RowBox[{"b", "*", 
       SuperscriptBox["x", "2"]}], "+", " ", "x", "+", " ", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", " ", 
       RowBox[{"+", "3"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"10", ",", " ", 
        RowBox[{"-", "10"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
       SuperscriptBox["x", "3"], " ", "+", " ", 
       RowBox[{"b", " ", "*", " ", 
        SuperscriptBox["x", "2"]}], "+", " ", "x", "+", " ", "1"}]}]}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7352983018930006`*^9, 3.7352983268544283`*^9}, {
  3.7355413160444937`*^9, 3.735541322038318*^9}, {3.735639109517456*^9, 
  3.735639110941059*^9}, {3.7357044090032625`*^9, 3.735704409597066*^9}, {
  3.736174604950947*^9, 3.736174612115069*^9}, {3.736177301758773*^9, 
  3.736177306846806*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`b$$], -10, 10}}, Typeset`size$$ = {
    432., {148., 154.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`b$71415$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`b$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`b$$, $CellContext`b$71415$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`x^3 + $CellContext`b$$ $CellContext`x^2 + \
$CellContext`x + 1, {$CellContext`x, -3, 
         Plus[3]}, PlotRange -> {10, -10}, 
        PlotLabel -> $CellContext`x^3 + $CellContext`b$$ $CellContext`x^2 + \
$CellContext`x + 1], "Specifications" :> {{$CellContext`b$$, -10, 10}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{489., {200., 207.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7361892691489973`*^9, 3.736328278108147*^9, 
  3.7363285369671955`*^9, 3.736623355695367*^9, 3.7366234914771194`*^9, 
  3.736671552457854*^9, 3.736671729968648*^9, 3.7366720531690416`*^9, 
  3.7366721043400593`*^9}]
}, {2}]],

Cell["", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"hyperText", "[", 
  RowBox[{
  "\"\<Hai dubbi su come cambia il grafico quando cambia b?\>\"", ",", 
   "\"\<il coefficiente del termine di secondo grado della x pi\[UGrave] \
\[EGrave] grande in valore assoluto pi\[UGrave] indica quanto il grafico nei \
suoi rami assomiglia a una parabola\>\"", ",", "LinkHand"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.735297632286701*^9, 3.735297634622835*^9}, {
  3.735298351693849*^9, 3.7352983774893246`*^9}, {3.7355413651439533`*^9, 
  3.7355413670195646`*^9}, {3.735704429692957*^9, 3.735704461693982*^9}, {
  3.736174614580106*^9, 3.7361746212902184`*^9}, {3.736177311508837*^9, 
  3.7361773190878897`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia b?\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "il coefficiente del termine di secondo grado della x pi\[UGrave] \
\[EGrave] grande in valore assoluto pi\[UGrave] indica quanto il grafico nei \
suoi rami assomiglia a una parabola"], Method -> "Preemptive", PassEventsDown -> 
    Automatic, PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{3.736189269415998*^9, 3.7363282784831886`*^9, 
  3.7363285373266106`*^9, 3.7366233559960566`*^9, 3.7366234917488375`*^9, 
  3.7366715528434577`*^9, 3.736671730314249*^9, 3.736672053503043*^9, 
  3.7366721046396666`*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione guidata parametro a", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345073172201977`*^9, 3.7345073271699533`*^9}, {3.7352960962278438`*^9, 
   3.7352961040232897`*^9}, {3.735297656163067*^9, 3.735297656586091*^9}, {
   3.7352981637681007`*^9, 3.735298164128121*^9}, {3.7352982309449425`*^9, 
   3.7352982401714706`*^9}, {3.735298438414809*^9, 3.7352984399558973`*^9}, {
   3.735541413720219*^9, 3.735541414972226*^9}},
 CellTags->"E_G3_CA"],

Cell["\<\
cosa vuol dire graficamente il coefficiente a?
\
\>", "Text",
 CellChangeTimes->{3.7352984635272455`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "*", 
       SuperscriptBox["x", "3"]}], " ", "+", 
      RowBox[{"4", "*", 
       SuperscriptBox["x", "2"]}], "+", " ", "x", "+", " ", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", " ", 
       RowBox[{"+", "3"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"10", ",", " ", 
        RowBox[{"-", "10"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
       RowBox[{"a", "*", " ", 
        SuperscriptBox["x", "3"]}], " ", "+", " ", 
       RowBox[{"4", "*", " ", 
        SuperscriptBox["x", "2"]}], "+", " ", "x", "+", " ", "1"}]}]}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"+", "10"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.735298482453328*^9, 3.7352984986722555`*^9}, {
  3.7355414249436693`*^9, 3.7355414301878953`*^9}, {3.735639120742881*^9, 
  3.735639121745283*^9}, {3.7361746259543123`*^9, 3.736174639475527*^9}, {
  3.7361773241779184`*^9, 3.7361773295069523`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -10, 10}}, Typeset`size$$ = {
    432., {148., 154.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$71491$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$71491$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`a$$ $CellContext`x^3 + 
        4 $CellContext`x^2 + $CellContext`x + 1, {$CellContext`x, -3, 
         Plus[3]}, PlotRange -> {10, -10}, 
        PlotLabel -> $CellContext`a$$ $CellContext`x^3 + 
         4 $CellContext`x^2 + $CellContext`x + 1], 
      "Specifications" :> {{$CellContext`a$$, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{489., {200., 207.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.736189269495998*^9, 3.7363282785613213`*^9, 
  3.7363285373578653`*^9, 3.7366233562737665`*^9, 3.73662349203454*^9, 
  3.7366715532062583`*^9, 3.7366717306792526`*^9, 3.7366720538596454`*^9, 
  3.7366721049782677`*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"hyperText", "[", 
  RowBox[{
  "\"\<Hai dubbi su come cambia il grafico quando cambia a?\>\"", ",", 
   "\"\<il coefficiente del termine di terzo grado della X indica quanto il \
grafico \[EGrave] pendente\>\"", ",", "LinkHand"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.735298526108825*^9, 3.7352985554645042`*^9}, {
  3.735541418761041*^9, 3.735541418854641*^9}, {3.7361746462516727`*^9, 
  3.7361746525417767`*^9}, {3.736177333107977*^9, 3.73617733939402*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox["\<\"Hai dubbi su come cambia il grafico quando cambia a?\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0, 0, 1]],
   MouseAppearanceTag[{"LinkHand"}]],
  EventHandlerTag[{
   "MouseClicked" :> 
    MessageDialog[
     "il coefficiente del termine di terzo grado della X indica quanto il \
grafico \[EGrave] pendente"], Method -> "Preemptive", PassEventsDown -> 
    Automatic, PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{3.7361892697659993`*^9, 3.736328278920744*^9, 
  3.7363285376704288`*^9, 3.7366233563476887`*^9, 3.736623492088485*^9, 
  3.736671553276659*^9, 3.736671730772853*^9, 3.7366720539344473`*^9, 
  3.7366721050406685`*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Caso particolare ", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345073172201977`*^9, 3.7345073271699533`*^9}, {3.7352960962278438`*^9, 
   3.7352961040232897`*^9}, {3.735297656163067*^9, 3.735297656586091*^9}, {
   3.735298605131345*^9, 3.735298606005395*^9}},
 CellTags->"E3_CP_A"],

Cell["\<\
Hai notato cosa cambia se a<0 o a>0?

\
\>", "Text",
 CellChangeTimes->{{3.735298627672634*^9, 3.7352986288447013`*^9}, 
   3.73529886082697*^9, {3.7352991109652767`*^9, 3.7352991114993076`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"  ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Hyperlink", "[", 
         RowBox[{
          RowBox[{"StatusArea", "[", 
           RowBox[{
            RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
            "\"\<E3_CP_A0\>\""}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
            "\"\<E3_CP_A0\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<No\>\"", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"p8", "\[Equal]", " ", "0"}], ",", 
            RowBox[{
             RowBox[{"p8", "=", "1"}], ";", 
             RowBox[{"Print", "[", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["x", "3"], " ", "+", " ", 
                   SuperscriptBox["x", "2"], "+", " ", "x", " ", "+", " ", 
                   "1"}], ",", " ", 
                  RowBox[{
                   RowBox[{"-", " ", 
                    SuperscriptBox["x", "3"]}], " ", "+", " ", 
                   SuperscriptBox["x", "2"], "+", " ", "x", " ", "+", " ", 
                   "1"}]}], "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"x", ",", 
                  RowBox[{"-", "10"}], ",", 
                  RowBox[{"+", "10"}]}], "}"}], ",", " ", 
                RowBox[{
                "PlotLabels", "\[Rule]", " ", "\"\<Expressions\>\""}]}], 
               "]"}], "]"}], ";", " ", 
             RowBox[{
             "Print", "[", 
              "\"\<come puoi vedere dai grafici se a>0 allora il grafico \
cresce al crescere delle X, se a<0 il grafico decresce al decrescere delle \
X\>\"", "]"}]}]}], "]"}]}], "]"}]}], "}"}], "]"}], " ", "\[IndentingNewLine]", 
     RowBox[{"AutoCollapse", "[", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{
        RowBox[{"StatusArea", "[", 
         RowBox[{
          RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
          "\"\<E3_CP_A0\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
          "\"\<E3_CP_A0\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<No\>\"", ",", " ", 
        RowBox[{"p8", " ", "=", " ", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"p8", " ", "===", " ", "1"}], ",", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SuperscriptBox["x", "3"], " ", "+", " ", 
            SuperscriptBox["x", "2"], "+", " ", "x", " ", "+", " ", "1"}], 
           ",", " ", 
           RowBox[{
            RowBox[{"-", " ", 
             SuperscriptBox["x", "3"]}], " ", "+", " ", 
            SuperscriptBox["x", "2"], "+", " ", "x", " ", "+", " ", "1"}]}], 
          "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "10"}], ",", 
           RowBox[{"+", "10"}]}], "}"}], ",", " ", 
         RowBox[{"PlotLabels", "\[Rule]", " ", "\"\<Expressions\>\""}], ",", 
         " ", 
         RowBox[{"ImageSize", " ", "\[Rule]", " ", "Medium"}]}], "]"}], 
       RowBox[{
       "Text", "[", 
        "\"\<come puoi vedere dai grafici se a>0 allora il grafico cresce al \
crescere delle X, se a<0 il grafico decresce al decrescere delle X\>\"", 
        "]"}]}], ",", " ", 
      RowBox[{"Text", "[", "\"\<\>\"", "]"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7352986564962826`*^9, 3.735298663398678*^9}, {
  3.7352987643964543`*^9, 3.735298812244191*^9}, {3.7352988505363812`*^9, 
  3.7352989272387686`*^9}, {3.7352989748274903`*^9, 3.7352990467246027`*^9}, {
  3.7352991758399878`*^9, 3.735299179922221*^9}, {3.7357044963103313`*^9, 
  3.7357045092960443`*^9}, {3.736174664486992*^9, 3.7361746710202847`*^9}, {
  3.736177345028057*^9, 3.7361773510768814`*^9}, {3.736179289610214*^9, 
  3.736179297410266*^9}, {3.7361889628747888`*^9, 3.7361891115841265`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
          Automatic, Method -> "Preemptive"], StatusArea[#, "E3_CP_A0"]& , 
         TagBoxNote -> "E3_CP_A0"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
           Automatic, Method -> "Preemptive"], StatusArea[#, "E3_CP_A0"]& , 
          TagBoxNote -> "E3_CP_A0"], {"HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "E3_CP_A0"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "E3_CP_A0"}, "Hyperlink"]& ],
   "\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> (MClib`p8 = 1), Appearance -> Automatic, 
    Evaluator -> Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7361892698359995`*^9, 3.736328279045751*^9, 
  3.736328537733244*^9, 3.7366233564236093`*^9, 3.736623492139433*^9, 
  3.736671553372259*^9, 3.7366717308618536`*^9, 3.73667205401165*^9, 
  3.736672105115069*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[MClib`p8 === 1, 
    Plot[{$CellContext`x^3 + $CellContext`x^2 + $CellContext`x + 
       1, -$CellContext`x^3 + $CellContext`x^2 + $CellContext`x + 
       1}, {$CellContext`x, -10, 
       Plus[10]}, PlotLabels -> "Expressions", ImageSize -> Medium] 
    Text["come puoi vedere dai grafici se a>0 allora il grafico cresce al \
crescere delle X, se a<0 il grafico decresce al decrescere delle X"], 
    Text[""]], StandardForm],
  ImageSizeCache->{0., {3., 15.}}]], "Output",
 CellChangeTimes->{3.7361892698359995`*^9, 3.736328279045751*^9, 
  3.736328537733244*^9, 3.7366233564236093`*^9, 3.736623492139433*^9, 
  3.736671553372259*^9, 3.7366717308618536`*^9, 3.73667205401165*^9, 
  3.7366721051220694`*^9}]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Caso particolare  a = 0", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345073172201977`*^9, 3.7345073271699533`*^9}, {3.7352960962278438`*^9, 
   3.7352961040232897`*^9}, {3.735297656163067*^9, 3.735297656586091*^9}, {
   3.735298605131345*^9, 3.735298606005395*^9}, {3.7352991021097703`*^9, 
   3.7352991049159307`*^9}, {3.7355414442081733`*^9, 3.735541444390576*^9}},
 CellTags->"E3_CP_A0"],

Cell["Hai posto attenzione a cosa succede quando a=0?", "Text",
 CellChangeTimes->{{3.7352991332625523`*^9, 3.735299134959649*^9}, {
  3.7352991891827507`*^9, 3.7352991986782937`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Hyperlink", "[", 
         RowBox[{
          RowBox[{"StatusArea", "[", 
           RowBox[{
            RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
            "\"\<E3_CP_A0\>\""}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
            "\"\<E3_CP_A0\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<No\>\"", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"p9", "\[Equal]", " ", "0"}], ",", 
            RowBox[{
             RowBox[{"p9", "=", "1"}], ";", 
             RowBox[{"Print", "[", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"0", "*", 
                  SuperscriptBox["x", "3"]}], " ", "+", " ", 
                 RowBox[{"4", "*", 
                  SuperscriptBox["x", "2"]}], "+", " ", "x", " ", "+", " ", 
                 "1"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"x", ",", 
                  RowBox[{"-", "5"}], ",", 
                  RowBox[{"+", "5"}]}], "}"}], ",", " ", 
                RowBox[{
                "PlotLegends", "\[Rule]", " ", 
                 "\"\< 0*\!\(\*SuperscriptBox[\(x\), \(3\)]\) + \
4*\!\(\*SuperscriptBox[\(x\), \(2\)]\)+ x + 1\>\""}]}], "]"}], "]"}], ";", 
             " ", 
             RowBox[{
             "Print", "[", 
              "\"\<come puoi vedere il grafico non e\[CloseCurlyQuote] piu\
\[CloseCurlyQuote] una cubica ma degenera in una parabola\>\"", "]"}]}]}], 
           "]"}]}], "]"}]}], "}"}], "]"}], " ", "\[IndentingNewLine]", 
     RowBox[{"AutoCollapse", "[", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{
        RowBox[{"StatusArea", "[", 
         RowBox[{
          RowBox[{"Button", "[", "\"\<Si\>\"", "]"}], ",", " ", 
          "\"\<E3_CP_0\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
          "\"\<E3_CP_0\>\""}], "}"}]}], "]"}], ",", "\"\<\\t\>\"", ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<No\>\"", ",", " ", 
        RowBox[{"p9", "=", " ", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"p9", " ", "===", " ", "1"}], ",", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"0", "*", 
           SuperscriptBox["x", "3"]}], " ", "+", " ", 
          RowBox[{"4", "*", 
           SuperscriptBox["x", "2"]}], "+", " ", "x", " ", "+", " ", "1"}], 
         ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"+", "5"}]}], "}"}], ",", " ", 
         RowBox[{
         "PlotLegends", "\[Rule]", " ", 
          "\"\< 0*\!\(\*SuperscriptBox[\(x\), \(3\)]\) + \
4*\!\(\*SuperscriptBox[\(x\), \(2\)]\)+ x + 1\>\""}], ",", " ", 
         RowBox[{"ImageSize", " ", "\[Rule]", " ", "Medium"}]}], "]"}], 
       RowBox[{
       "Text", "[", 
        "\"\<come puoi vedere il grafico non e\[CloseCurlyQuote] piu\
\[CloseCurlyQuote] una cubica ma degenera in una parabola\>\"", "]"}]}], ",", 
      " ", 
      RowBox[{"Text", "[", "\"\<\>\"", "]"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.735299209483912*^9, 3.7352993043703394`*^9}, {
  3.7361746862219534`*^9, 3.7361746911000423`*^9}, {3.736177355502099*^9, 
  3.7361773608537273`*^9}, {3.736179365158907*^9, 3.7361793757129755`*^9}, {
  3.736189130370173*^9, 3.736189209087372*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
          Automatic, Method -> "Preemptive"], StatusArea[#, "E3_CP_0"]& , 
         TagBoxNote -> "E3_CP_0"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Si\"", ButtonFunction :> {}, Evaluator -> None, Appearance -> 
           Automatic, Method -> "Preemptive"], StatusArea[#, "E3_CP_0"]& , 
          TagBoxNote -> "E3_CP_0"], {"HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "E3_CP_0"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "E3_CP_0"}, "Hyperlink"]& ],
   "\"\\t\"",ButtonBox[
   "\"No\"", ButtonFunction :> (MClib`p9 = 1), Appearance -> Automatic, 
    Evaluator -> Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7361892699*^9, 3.7363282791863856`*^9, 
  3.736328537842288*^9, 3.7366233565324965`*^9, 3.736623492253313*^9, 
  3.73667155349706*^9, 3.736671731050054*^9, 3.7366720541920524`*^9, 
  3.73667210529767*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[MClib`p9 === 1, 
    Plot[0 $CellContext`x^3 + 4 $CellContext`x^2 + $CellContext`x + 
      1, {$CellContext`x, -5, 
       Plus[5]}, PlotLegends -> 
      " 0*\!\(\*SuperscriptBox[\(x\), \(3\)]\) + \
4*\!\(\*SuperscriptBox[\(x\), \(2\)]\)+ x + 1", ImageSize -> Medium] 
    Text["come puoi vedere il grafico non e\[CloseCurlyQuote] piu\
\[CloseCurlyQuote] una cubica ma degenera in una parabola"], 
    Text[""]], StandardForm],
  ImageSizeCache->{0., {3., 15.}}]], "Output",
 CellChangeTimes->{3.7361892699*^9, 3.7363282791863856`*^9, 
  3.736328537842288*^9, 3.7366233565324965`*^9, 3.736623492253313*^9, 
  3.73667155349706*^9, 3.736671731050054*^9, 3.7366720541920524`*^9, 
  3.73667210529767*^9}]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Comprensione degli zeri", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345073172201977`*^9, 3.7345073271699533`*^9}, {3.7352960962278438`*^9, 
   3.7352961040232897`*^9}, {3.735297656163067*^9, 3.735297656586091*^9}, {
   3.735298605131345*^9, 3.735298606005395*^9}, {3.7352991021097703`*^9, 
   3.7352991049159307`*^9}, {3.73529939373045*^9, 3.735299400526839*^9}},
 CellTags->"E3_CP_0"],

Cell[TextData[{
 "Per capire quante volte la curva interseca l\[CloseCurlyQuote]asse X e \
quindi quanti rami diversi di curva possediamo dobbiamo scoprire quanti \
risultati ha l\[CloseCurlyQuote]equazione 0=a",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "3"], TraditionalForm]]],
 "+b",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]]],
 "+cx+d, dobbiamo considerare anche la molteplicit\[AGrave] con cui \
compaiono. Conosciamo gi\[AGrave] dalla parabola alcuni tipi di zero ora \
zoomando osserviamo quali tipoligie abbiamo nei seguenti casi.\n\n"
}], "Text",
 CellChangeTimes->{{3.735299437486953*^9, 3.7352994403661175`*^9}, {
   3.7356183238609056`*^9, 3.7356184481617975`*^9}, 3.7357046004641314`*^9, {
   3.735704633091035*^9, 3.7357048817703247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"plotWithZoomButtonsA", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], " ", "+", 
      RowBox[{"3", 
       SuperscriptBox["x", "2"]}], "+", " ", 
      RowBox[{"4", "x"}]}], ",", " ", 
     RowBox[{"Symbol", "[", "\"\<x\>\"", "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plotWithZoomButtonsB", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], " ", "+", 
      SuperscriptBox["x", "2"]}], ",", " ", 
     RowBox[{"Symbol", "[", "\"\<x\>\"", "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plotWithZoomButtonsC", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], " ", "+", 
      RowBox[{"3", "*", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"3", "*", "x"}], "+", " ", "1"}], ",", " ", 
     RowBox[{"Symbol", "[", "\"\<x\>\"", "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7352994786383066`*^9, 3.73529949320214*^9}, {
  3.735299527222086*^9, 3.7352995923838124`*^9}, {3.735538450346656*^9, 
  3.735538516467458*^9}, {3.7355390514387894`*^9, 3.735539070094082*^9}, {
  3.7355391165033712`*^9, 3.7355392465242815`*^9}, {3.73561830224599*^9, 
  3.7356183072934046`*^9}, {3.7356398321020155`*^9, 3.7356398456347895`*^9}, {
  3.736174715025445*^9, 3.7361747204185286`*^9}, {3.7361773681357727`*^9, 
  3.736177378658844*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"Zoom sugli zeri:\"",TemplateBox[{
         ButtonBox["1", ButtonFunction :> (MClib`Private`l$71646 = Part[
              Solve[
               Reduce[
                And[
                4 $CellContext`x + 3 $CellContext`x^2 + $CellContext`x^3 == 
                 0, -11 < $CellContext`x < 
                 11], $CellContext`x], $CellContext`x], 1]; 
           MClib`Private`j$71646 = 1; 
           MClib`Private`y$71646 = ReplaceAll[$CellContext`x, 
              Part[MClib`Private`l$71646, 1]]; Null), Appearance -> Automatic,
           Evaluator -> Automatic, Method -> "Preemptive"]}, "RowDefault"]},
      "RowDefault"]},
    {
     RowBox[{
      DynamicModuleBox[{}, 
       DynamicBox[ToBoxes[
         If[
          And[MClib`Private`j$71646 === 5, MClib`Private`y$71646 === 0], 
          Text[""], 
          Text["zero di molteplicit\[AGrave] 1"]], StandardForm],
        ImageSizeCache->{0., {3., 15.}}],
       DynamicModuleValues:>{}], " ", 
      TemplateBox[{DynamicBox[
         ToBoxes[
          Plot[
          4 $CellContext`x + 
           3 $CellContext`x^2 + $CellContext`x^3, {$CellContext`x, 
            MClib`Private`y$71646 - MClib`Private`j$71646, 
            MClib`Private`y$71646 + MClib`Private`j$71646}, ImageSize -> 
           Medium, PlotLegends -> 
           Placed[{4 $CellContext`x + 3 $CellContext`x^2 + $CellContext`x^3}, 
             Above]], StandardForm]]},
       "RowDefault"]}]},
    {
     ButtonBox["\<\"Reset Zoom\"\>",
      Appearance->Automatic,
      ButtonFunction:>(MClib`Private`j$71646 = 5; MClib`Private`y$71646 = 0),
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.736189270313002*^9, 3.7363282793426547`*^9, 
  3.7363285379829288`*^9, 3.736623356788231*^9, 3.7366234923821783`*^9, 
  3.736671553809461*^9, 3.7366717312226543`*^9, 3.7366720543716536`*^9, 
  3.736672105511876*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"Zoom sugli zeri:\"",TemplateBox[{
         ButtonBox["1", ButtonFunction :> (MClib`Private`l$71653 = Part[
              Solve[
               Reduce[
                
                And[$CellContext`x^2 + $CellContext`x^3 == 
                 0, -11 < $CellContext`x < 
                 11], $CellContext`x], $CellContext`x], 1]; 
           MClib`Private`j$71653 = 1; 
           MClib`Private`y$71653 = ReplaceAll[$CellContext`x, 
              Part[MClib`Private`l$71653, 1]]; MClib`Private`ind$71653 = 1), 
          Appearance -> Automatic, Evaluator -> Automatic, Method -> 
          "Preemptive"], 
         ButtonBox["2", ButtonFunction :> (MClib`Private`l$71653 = Part[
              Solve[
               Reduce[
                
                And[$CellContext`x^2 + $CellContext`x^3 == 
                 0, -11 < $CellContext`x < 
                 11], $CellContext`x], $CellContext`x], 2]; 
           MClib`Private`j$71653 = 1; 
           MClib`Private`y$71653 = ReplaceAll[$CellContext`x, 
              Part[MClib`Private`l$71653, 1]]; MClib`Private`ind$71653 = 2), 
          Appearance -> Automatic, Evaluator -> Automatic, Method -> 
          "Preemptive"]}, "RowDefault"]},
      "RowDefault"]},
    {
     RowBox[{
      DynamicModuleBox[{}, 
       DynamicBox[ToBoxes[
         If[MClib`Private`ind$71653 === 0, 
          Text[""], 
          If[MClib`Private`ind$71653 === 1, 
           Text["zero di molteplicit\[AGrave] 1"], 
           Text["zero di molteplicit\[AGrave] 2"]]], StandardForm],
        ImageSizeCache->{0., {3., 15.}}],
       DynamicModuleValues:>{}], " ", 
      TemplateBox[{DynamicBox[
         ToBoxes[
          
          Plot[$CellContext`x^2 + $CellContext`x^3, {$CellContext`x, 
            MClib`Private`y$71653 - MClib`Private`j$71653, 
            MClib`Private`y$71653 + MClib`Private`j$71653}, ImageSize -> 
           Medium, PlotLegends -> 
           Placed[{$CellContext`x^2 + $CellContext`x^3}, Above]], 
          StandardForm]]},
       "RowDefault"]}]},
    {
     ButtonBox["\<\"Reset Zoom\"\>",
      Appearance->Automatic,
      ButtonFunction:>(MClib`Private`j$71653 = 5; MClib`Private`y$71653 = 0; 
       MClib`Private`ind$71653 = 0),
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.736189270313002*^9, 3.7363282793426547`*^9, 
  3.7363285379829288`*^9, 3.736623356788231*^9, 3.7366234923821783`*^9, 
  3.736671553809461*^9, 3.7366717312226543`*^9, 3.7366720543716536`*^9, 
  3.7366721056772776`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"Zoom sugli zeri:\"",TemplateBox[{
         ButtonBox["1", ButtonFunction :> (MClib`Private`l$71660 = Part[
              Solve[
               Reduce[
                And[
                1 + 3 $CellContext`x + 3 $CellContext`x^2 + $CellContext`x^3 == 
                 0, -11 < $CellContext`x < 
                 11], $CellContext`x], $CellContext`x], 1]; 
           MClib`Private`j$71660 = 1; 
           MClib`Private`y$71660 = ReplaceAll[$CellContext`x, 
              Part[MClib`Private`l$71660, 1]]; Null), Appearance -> Automatic,
           Evaluator -> Automatic, Method -> "Preemptive"]}, "RowDefault"]},
      "RowDefault"]},
    {
     DynamicModuleBox[{}, 
      DynamicBox[ToBoxes[
        If[
         And[MClib`Private`j$71660 === 5, MClib`Private`y$71660 === 0], 
         Text[""], 
         Text["zero di molteplicit\[AGrave] 3"]], StandardForm],
       ImageSizeCache->{0., {3., 15.}}],
      DynamicModuleValues:>{}]},
    {
     TemplateBox[{DynamicBox[
        ToBoxes[
         Plot[
         1 + 3 $CellContext`x + 
          3 $CellContext`x^2 + $CellContext`x^3, {$CellContext`x, 
           MClib`Private`y$71660 - MClib`Private`j$71660, 
           MClib`Private`y$71660 + MClib`Private`j$71660}, ImageSize -> 
          Medium, PlotLegends -> 
          Placed[{1 + 3 $CellContext`x + 
             3 $CellContext`x^2 + $CellContext`x^3}, Above]], StandardForm]]},
      
      "RowDefault"]},
    {
     ButtonBox["\<\"Reset Zoom\"\>",
      Appearance->Automatic,
      ButtonFunction:>(MClib`Private`j$71660 = 5; MClib`Private`y$71660 = 0),
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.736189270313002*^9, 3.7363282793426547`*^9, 
  3.7363285379829288`*^9, 3.736623356788231*^9, 3.7366234923821783`*^9, 
  3.736671553809461*^9, 3.7366717312226543`*^9, 3.7366720543716536`*^9, 
  3.73667210590148*^9}]
}, {2, 3, 4}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Ora tocca a te!", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}},
 CellTags->"TS3"],

Cell["\<\
ora tocca a puoi sperimentare. Inserisci tu le funzioni polinomiali e osserva \
come sono rappresentate graficamente. Puoi confrontarne contemporaneamente 5.
\
\>", "Text",
 CellChangeTimes->{
  3.7352997151638355`*^9, {3.735618504699855*^9, 3.7356185098410273`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Panel", "[", 
    RowBox[{"Column", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"InputField", "[", 
           RowBox[{
            RowBox[{"Dynamic", "[", "currentEq3", "]"}], ",", "String"}], 
           "]"}], ",", 
          RowBox[{"Button", "[", 
           RowBox[{"\"\<Confronta\>\"", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "freeEq3", "]"}], "<", "5"}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"freeEq3", ",", 
                RowBox[{"ToExpression", "[", "currentEq3", "]"}]}], "]"}], 
              ",", 
              RowBox[{
              "MessageDialog", "[", 
               "\"\<Hai gi\[AGrave] inserito 5 grafici, eliminane uno prima \
di aggiungerne uno nuovo!\>\"", "]"}]}], "]"}]}], "]"}]}], "}"}], "]"}], ",", 
       
       RowBox[{"Dynamic", "[", 
        RowBox[{"Row", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", "=", "i"}], "}"}], ",", 
             RowBox[{"Column", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Plot", "[", 
                 RowBox[{
                  RowBox[{"freeEq3", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"x", ",", 
                    RowBox[{"-", "10"}], ",", 
                    RowBox[{"+", "10"}]}], "}"}], ",", 
                  RowBox[{"PlotLabel", "\[Rule]", 
                   RowBox[{"ToString", "[", 
                    RowBox[{"freeEq3", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
                  RowBox[{"ImageSize", "->", "Small"}]}], "]"}], ",", 
                "\"\<\\t\>\"", ",", 
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<Elimina\>\"", ",", 
                  RowBox[{"freeEq3", "=", 
                   RowBox[{"Delete", "[", 
                    RowBox[{"freeEq3", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{"freeEq3", ",", 
                    RowBox[{"freeEq3", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
                 "]"}]}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "freeEq3", "]"}]}], "}"}]}], "]"}], "]"}],
         "]"}]}], "}"}], "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Drawing", " ", "the", " ", "list", " ", "of", " ", "the", " ", 
      "functions", " ", "that", " ", "the", " ", "user", " ", "want", " ", 
      "to", " ", "compare"}], ",", " ", 
     RowBox[{
      RowBox[{
      "Delete", " ", "button", " ", "allow", " ", "to", " ", "remove", " ", 
       "that", " ", "expression", " ", "from", " ", "the", " ", "list"}], ";",
       " ", 
      RowBox[{"TODO", " ", "Insert", " ", "in", " ", "package"}]}]}], " ", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.735299743857476*^9, 3.7352997825386887`*^9}, {
  3.736174725935647*^9, 3.736174731728737*^9}, {3.7361773860388937`*^9, 
  3.736177394989959*^9}, {3.736179439724389*^9, 3.736179448974451*^9}}],

Cell[BoxData[
 PanelBox[
  TagBox[GridBox[{
     {
      TemplateBox[{InputFieldBox[
         Dynamic[MClib`currentEq3], String],ButtonBox[
        "\"Confronta\"", ButtonFunction :> If[Length[MClib`freeEq3] < 5, 
           AppendTo[MClib`freeEq3, 
            ToExpression[MClib`currentEq3]], 
           MessageDialog[
           "Hai gi\[AGrave] inserito 5 grafici, eliminane uno prima di \
aggiungerne uno nuovo!"]], Appearance -> Automatic, Evaluator -> Automatic, 
         Method -> "Preemptive"]},
       "RowDefault"]},
     {
      DynamicBox[ToBoxes[
        Row[
         Table[
          With[{$CellContext`i = $CellContext`i}, 
           Column[{
             Plot[
              Part[MClib`freeEq3, $CellContext`i], {$CellContext`x, -10, 
               Plus[10]}, PlotLabel -> ToString[
                Part[MClib`freeEq3, $CellContext`i]], ImageSize -> Small], 
             "\t", 
             Button["Elimina", MClib`freeEq3 = Delete[MClib`freeEq3, 
                Position[MClib`freeEq3, 
                 Part[MClib`freeEq3, $CellContext`i]]]]}]], {$CellContext`i, 
           Length[MClib`freeEq3]}]], StandardForm],
       ImageSizeCache->{4., {0., 0.}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"]]], "Output",
 CellChangeTimes->{3.736189272340007*^9, 3.736328280092797*^9, 
  3.7363285387330093`*^9, 3.736623357468522*^9, 3.736623492914624*^9, 
  3.7366715545744705`*^9, 3.736671732010458*^9, 3.736672055040859*^9, 
  3.7366721062944813`*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"       ", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
       "Print", "[", "\"\<Ti senti pronto per gli esercizi?\>\"", "]"}], ";", 
       
       RowBox[{"Hyperlink", "[", 
        RowBox[{
         RowBox[{"StatusArea", "[", 
          RowBox[{
           RowBox[{"Button", "[", "\"\<Vai Esercizi\>\"", "]"}], ",", " ", 
           "\"\<ES_G3\>\""}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
           "\"\<ES_G3\>\""}], "}"}]}], "]"}]}], ",", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{
        RowBox[{"StatusArea", "[", 
         RowBox[{
          RowBox[{"Button", "[", "\"\<Torna alla teoria\>\"", "]"}], ",", 
          " ", "\"\<E_G3\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
          "\"\<E_G3\>\""}], "}"}]}], "]"}]}], "}"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   "  "}]}]], "Input",
 CellChangeTimes->{{3.735299837163813*^9, 3.7352998417220736`*^9}, {
  3.7356445577590103`*^9, 3.735644572526855*^9}, {3.736174736954851*^9, 
  3.7361747429509497`*^9}, {3.73617740851005*^9, 3.7361774294801855`*^9}}],

Cell[BoxData["\<\"Ti senti pronto per gli esercizi?\"\>"], "Print",
 CellChangeTimes->{3.73618927338801*^9, 3.73632828035839*^9, 
  3.7363285387955155`*^9, 3.7366233577222586`*^9, 3.7366234929885473`*^9, 
  3.736671554910873*^9, 3.7366717321518583`*^9, 3.7366720551206613`*^9, 
  3.7366721063880816`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Vai Esercizi\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "ES_G3"]& , TagBoxNote -> "ES_G3"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Vai Esercizi\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "ES_G3"]& , TagBoxNote -> "ES_G3"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "ES_G3"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "ES_G3"}, "Hyperlink"]& ],TagBox[
   
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Torna alla teoria\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "E_G3"]& , TagBoxNote -> "E_G3"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Torna alla teoria\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "E_G3"]& , TagBoxNote -> "E_G3"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "E_G3"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "E_G3"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7361892733980103`*^9, 3.73632828035839*^9, 
  3.736328538811143*^9, 3.7366233577282524`*^9, 3.736623493002533*^9, 
  3.7366715549264727`*^9, 3.7366717321674585`*^9, 3.736672055151861*^9, 
  3.736672106404681*^9}]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Esercizi Tipologia 1", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}, {3.7352999844192357`*^9, 3.735299988081445*^9}, {
   3.7353291428609905`*^9, 3.735329149030343*^9}},
 CellTags->"ES_G3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"exKindAPrinter", "[", "5", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.735329199620237*^9, 3.735329199776246*^9}, {
  3.736174764409728*^9, 3.7361747693588095`*^9}, {3.736177434572607*^9, 
  3.7361774470514736`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            StyleBox[
            "\"A quale funzione corrisponde la seguente retta?\"", FontWeight -> 
             Bold, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TemplateBox[{"\"Zoom sugli zeri:\"", 
                  TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$72082 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 5, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$72082 = 1; 
                    MClib`Private`y$72082 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72082, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                   "RowDefault"]}, "RowDefault"]}, {
                TemplateBox[{
                  DynamicBox[
                   ToBoxes[
                    Plot[
                    Part[
                    MClib`teacherEQ, 5, 1], {$CellContext`x, 
                    MClib`Private`y$72082 - MClib`Private`j$72082, 
                    MClib`Private`y$72082 + MClib`Private`j$72082}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                ButtonBox[
                "\"Reset Zoom\"", 
                 ButtonFunction :> (MClib`Private`j$72082 = 5; 
                  MClib`Private`y$72082 = 0), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]}, {
            DynamicBox[
             ToBoxes[
              RadioButtonBar[
               Dynamic[
                Part[MClib`userAnswer, 5, 1]], 
               Part[MClib`exercises, 5, 1], Enabled -> Dynamic[
                 Part[MClib`enableAnswer, 5, 1]]], StandardForm]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            StyleBox[
            "\"A quale funzione corrisponde la seguente retta?\"", FontWeight -> 
             Bold, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TemplateBox[{"\"Zoom sugli zeri:\"", 
                  TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$72083 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 5, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$72083 = 1; 
                    MClib`Private`y$72083 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72083, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                   "RowDefault"]}, "RowDefault"]}, {
                TemplateBox[{
                  DynamicBox[
                   ToBoxes[
                    Plot[
                    Part[
                    MClib`teacherEQ, 5, 2], {$CellContext`x, 
                    MClib`Private`y$72083 - MClib`Private`j$72083, 
                    MClib`Private`y$72083 + MClib`Private`j$72083}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                ButtonBox[
                "\"Reset Zoom\"", 
                 ButtonFunction :> (MClib`Private`j$72083 = 5; 
                  MClib`Private`y$72083 = 0), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]}, {
            DynamicBox[
             ToBoxes[
              RadioButtonBar[
               Dynamic[
                Part[MClib`userAnswer, 5, 2]], 
               Part[MClib`exercises, 5, 2], Enabled -> Dynamic[
                 Part[MClib`enableAnswer, 5, 2]]], StandardForm]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            StyleBox[
            "\"A quale funzione corrisponde la seguente retta?\"", FontWeight -> 
             Bold, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TemplateBox[{"\"Zoom sugli zeri:\"", 
                  TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$72084 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`teacherEQ, 5, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$72084 = 1; 
                    MClib`Private`y$72084 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72084, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                   "RowDefault"]}, "RowDefault"]}, {
                TemplateBox[{
                  DynamicBox[
                   ToBoxes[
                    Plot[
                    Part[
                    MClib`teacherEQ, 5, 3], {$CellContext`x, 
                    MClib`Private`y$72084 - MClib`Private`j$72084, 
                    MClib`Private`y$72084 + MClib`Private`j$72084}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                ButtonBox[
                "\"Reset Zoom\"", 
                 ButtonFunction :> (MClib`Private`j$72084 = 5; 
                  MClib`Private`y$72084 = 0), Appearance -> Automatic, 
                 Evaluator -> Automatic, Method -> "Preemptive"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]}, {
            DynamicBox[
             ToBoxes[
              RadioButtonBar[
               Dynamic[
                Part[MClib`userAnswer, 5, 3]], 
               Part[MClib`exercises, 5, 3], Enabled -> Dynamic[
                 Part[MClib`enableAnswer, 5, 3]]], StandardForm]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7361892762410183`*^9, 3.736328280483399*^9, 
  3.7363285398112884`*^9, 3.736623357890084*^9, 3.7366234937107964`*^9, 
  3.7366715550894737`*^9, 3.7366717331590624`*^9, 3.736672056202469*^9, 
  3.736672107355688*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"  ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Dynamic", "[", 
    RowBox[{"Button", "[", 
     RowBox[{"\"\<Verifica\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"userAnswer", "[", 
           RowBox[{"[", 
            RowBox[{"5", ",", "1"}], "]"}], "]"}], " ", "===", "   ", "0"}], 
         "  ", "||", " ", 
         RowBox[{
          RowBox[{"userAnswer", "[", 
           RowBox[{"[", 
            RowBox[{"5", ",", "2"}], "]"}], "]"}], " ", "===", " ", "0"}], 
         " ", "||", " ", 
         RowBox[{
          RowBox[{"userAnswer", "[", 
           RowBox[{"[", 
            RowBox[{"5", ",", "3"}], "]"}], "]"}], " ", "===", "  ", "0"}]}], 
        ",", "  ", 
        RowBox[{
        "MessageDialog", "[", 
         "\"\<Rispondi a tutte le domande prima di verificare\>\"", "]"}], 
        " ", ",", " ", 
        RowBox[{
         RowBox[{"checkAnswer", "[", "5", "]"}], ";", " ", 
         RowBox[{"clicked3", " ", "=", "1"}]}]}], "]"}]}], " ", "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"clicked3", "===", " ", "1"}], ",", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{
        RowBox[{"StatusArea", "[", 
         RowBox[{
          RowBox[{"Button", "[", "\"\<Vai alla prossima sezione\>\"", "]"}], 
          ",", "\"\<ES_G3_B\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
          "\"\<ES_G3_B\>\""}], "}"}]}], "]"}], ",", " ", 
      "\"\<Verifica la risposta prima di passare alla prossima sezione\>\""}],
      "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.735329241250618*^9, 3.7353292668330812`*^9}, {
   3.735329302842141*^9, 3.7353293072563934`*^9}, {3.7361747826950407`*^9, 
   3.736174788048133*^9}, {3.736177453061513*^9, 3.7361774588315535`*^9}, 
   3.736179566968007*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Button["Verifica", 
    If[
     Or[Part[MClib`userAnswer, 5, 1] === 0, Part[MClib`userAnswer, 5, 2] === 
      0, Part[MClib`userAnswer, 5, 3] === 0], 
     MessageDialog["Rispondi a tutte le domande prima di verificare"], 
     MClib`checkAnswer[5]; MClib`clicked3 = 1]], StandardForm],
  ImageSizeCache->{54., {9., 20.}}]], "Output",
 CellChangeTimes->{3.7361892764510183`*^9, 3.736328284593246*^9, 
  3.736328544005474*^9, 3.736623360814042*^9, 3.736623496659728*^9, 
  3.7366715607215147`*^9, 3.7366717379276876`*^9, 3.7366720600849533`*^9, 
  3.7366721114973164`*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[MClib`clicked3 === 1, 
    Hyperlink[
     StatusArea[
      Button["Vai alla prossima sezione"], "ES_G3_B"], {
      EvaluationNotebook[], "ES_G3_B"}], 
    "Verifica la risposta prima di passare alla prossima sezione"], 
   StandardForm],
  ImageSizeCache->{531., {3., 11.}}]], "Output",
 CellChangeTimes->{3.7361892764510183`*^9, 3.736328284593246*^9, 
  3.736328544005474*^9, 3.736623360814042*^9, 3.736623496659728*^9, 
  3.7366715607215147`*^9, 3.7366717379276876`*^9, 3.7366720600849533`*^9, 
  3.7366721115053167`*^9}]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Esercizi Tipologia 2", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}, {3.7352999844192357`*^9, 3.735299988081445*^9}, {
   3.7353291428609905`*^9, 3.7353291707335844`*^9}},
 CellTags->"ES_G3_B"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"exKindBPrinter", "[", "6", "]"}], "\[IndentingNewLine]", 
 RowBox[{"AutoCollapse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.7353293789474936`*^9, 3.7353293790254984`*^9}, {
  3.736174792930213*^9, 3.7361747976353064`*^9}, {3.736177463841588*^9, 
  3.7361774674816093`*^9}, {3.736179636859437*^9, 3.7361796427804756`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            DynamicBox[
             ToBoxes[
              Style[
               StringJoin[
                ToString[
                 Part[MClib`teacherEQ, 6, 1]], " \t Qual e' il suo grafico?"],
                FontWeight -> Bold], StandardForm]]}, {
            TemplateBox[{
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 1]], 
                   Part[MClib`exercises, 6, 1, 1], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$72926 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 1, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$72926 = 1; 
                    MClib`Private`y$72926 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72926, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 1, 1], {$CellContext`x, 
                    MClib`Private`y$72926 - MClib`Private`j$72926, 
                    MClib`Private`y$72926 + MClib`Private`j$72926}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$72926 = 5; 
                    MClib`Private`y$72926 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 1]], 
                   Part[MClib`exercises, 6, 1, 2], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$72927 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 1, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$72927 = 1; 
                    MClib`Private`y$72927 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72927, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$72927 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 1, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$72927 = 1; 
                    MClib`Private`y$72927 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72927, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "3", ButtonFunction :> (MClib`Private`l$72927 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 1, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 3]; 
                    MClib`Private`j$72927 = 1; 
                    MClib`Private`y$72927 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72927, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 1, 2], {$CellContext`x, 
                    MClib`Private`y$72927 - MClib`Private`j$72927, 
                    MClib`Private`y$72927 + MClib`Private`j$72927}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$72927 = 5; 
                    MClib`Private`y$72927 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 1]], 
                   Part[MClib`exercises, 6, 1, 3], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$72928 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 1, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$72928 = 1; 
                    MClib`Private`y$72928 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72928, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 1, 3], {$CellContext`x, 
                    MClib`Private`y$72928 - MClib`Private`j$72928, 
                    MClib`Private`y$72928 + MClib`Private`j$72928}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$72928 = 5; 
                    MClib`Private`y$72928 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 1]], 
                   Part[MClib`exercises, 6, 1, 4], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 1]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$72929 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 1, 4] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$72929 = 1; 
                    MClib`Private`y$72929 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72929, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 1, 4], {$CellContext`x, 
                    MClib`Private`y$72929 - MClib`Private`j$72929, 
                    MClib`Private`y$72929 + MClib`Private`j$72929}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$72929 = 5; 
                    MClib`Private`y$72929 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            DynamicBox[
             ToBoxes[
              Style[
               StringJoin[
                ToString[
                 Part[MClib`teacherEQ, 6, 2]], " \t Qual e' il suo grafico?"],
                FontWeight -> Bold], StandardForm]]}, {
            TemplateBox[{
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 2]], 
                   Part[MClib`exercises, 6, 2, 1], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$72930 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 2, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$72930 = 1; 
                    MClib`Private`y$72930 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72930, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 2, 1], {$CellContext`x, 
                    MClib`Private`y$72930 - MClib`Private`j$72930, 
                    MClib`Private`y$72930 + MClib`Private`j$72930}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$72930 = 5; 
                    MClib`Private`y$72930 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 2]], 
                   Part[MClib`exercises, 6, 2, 2], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$72931 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 2, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$72931 = 1; 
                    MClib`Private`y$72931 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72931, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$72931 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 2, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$72931 = 1; 
                    MClib`Private`y$72931 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72931, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "3", ButtonFunction :> (MClib`Private`l$72931 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 2, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 3]; 
                    MClib`Private`j$72931 = 1; 
                    MClib`Private`y$72931 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72931, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 2, 2], {$CellContext`x, 
                    MClib`Private`y$72931 - MClib`Private`j$72931, 
                    MClib`Private`y$72931 + MClib`Private`j$72931}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$72931 = 5; 
                    MClib`Private`y$72931 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 2]], 
                   Part[MClib`exercises, 6, 2, 3], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$72932 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 2, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$72932 = 1; 
                    MClib`Private`y$72932 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72932, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 2, 3], {$CellContext`x, 
                    MClib`Private`y$72932 - MClib`Private`j$72932, 
                    MClib`Private`y$72932 + MClib`Private`j$72932}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$72932 = 5; 
                    MClib`Private`y$72932 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 2]], 
                   Part[MClib`exercises, 6, 2, 4], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 2]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$72933 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 2, 4] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$72933 = 1; 
                    MClib`Private`y$72933 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72933, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 2, 4], {$CellContext`x, 
                    MClib`Private`y$72933 - MClib`Private`j$72933, 
                    MClib`Private`y$72933 + MClib`Private`j$72933}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$72933 = 5; 
                    MClib`Private`y$72933 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]},
    {
     TemplateBox[{PanelBox[
        TagBox[
         GridBox[{{
            DynamicBox[
             ToBoxes[
              Style[
               StringJoin[
                ToString[
                 Part[MClib`teacherEQ, 6, 3]], " \t Qual e' il suo grafico?"],
                FontWeight -> Bold], StandardForm]]}, {
            TemplateBox[{
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 3]], 
                   Part[MClib`exercises, 6, 3, 1], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$72934 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 3, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$72934 = 1; 
                    MClib`Private`y$72934 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72934, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "2", ButtonFunction :> (MClib`Private`l$72934 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 3, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 2]; 
                    MClib`Private`j$72934 = 1; 
                    MClib`Private`y$72934 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72934, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                    ButtonBox[
                    "3", ButtonFunction :> (MClib`Private`l$72934 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 3, 1] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 3]; 
                    MClib`Private`j$72934 = 1; 
                    MClib`Private`y$72934 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72934, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 3, 1], {$CellContext`x, 
                    MClib`Private`y$72934 - MClib`Private`j$72934, 
                    MClib`Private`y$72934 + MClib`Private`j$72934}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$72934 = 5; 
                    MClib`Private`y$72934 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 3]], 
                   Part[MClib`exercises, 6, 3, 2], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$72935 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 3, 2] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$72935 = 1; 
                    MClib`Private`y$72935 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72935, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 3, 2], {$CellContext`x, 
                    MClib`Private`y$72935 - MClib`Private`j$72935, 
                    MClib`Private`y$72935 + MClib`Private`j$72935}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$72935 = 5; 
                    MClib`Private`y$72935 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 3]], 
                   Part[MClib`exercises, 6, 3, 3], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$72937 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 3, 3] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$72937 = 1; 
                    MClib`Private`y$72937 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72937, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 3, 3], {$CellContext`x, 
                    MClib`Private`y$72937 - MClib`Private`j$72937, 
                    MClib`Private`y$72937 + MClib`Private`j$72937}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$72937 = 5; 
                    MClib`Private`y$72937 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"], 
              TemplateBox[{
                DynamicBox[
                 ToBoxes[
                  RadioButton[
                   Dynamic[
                    Part[MClib`userAnswer, 6, 3]], 
                   Part[MClib`exercises, 6, 3, 4], Enabled -> Dynamic[
                    Part[MClib`enableAnswer, 6, 3]]], StandardForm]], 
                TagBox[
                 GridBox[{{
                    TemplateBox[{"\"Zoom sugli zeri:\"", 
                    TemplateBox[{
                    ButtonBox[
                    "1", ButtonFunction :> (MClib`Private`l$72977 = Part[
                    Solve[
                    Reduce[
                    And[
                    Part[MClib`exercises, 6, 3, 4] == 0, -11 < $CellContext`x < 
                    11], $CellContext`x], $CellContext`x], 1]; 
                    MClib`Private`j$72977 = 1; 
                    MClib`Private`y$72977 = ReplaceAll[$CellContext`x, 
                    Part[MClib`Private`l$72977, 1]]), Appearance -> Automatic,
                     Evaluator -> Automatic, Method -> "Preemptive"]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TemplateBox[{
                    DynamicBox[
                    ToBoxes[
                    Plot[
                    Part[
                    MClib`exercises, 6, 3, 4], {$CellContext`x, 
                    MClib`Private`y$72977 - MClib`Private`j$72977, 
                    MClib`Private`y$72977 + MClib`Private`j$72977}, ImageSize -> 
                    Medium], StandardForm]]}, "RowDefault"]}, {
                    ButtonBox[
                    "\"Reset Zoom\"", 
                    ButtonFunction :> (MClib`Private`j$72977 = 5; 
                    MClib`Private`y$72977 = 0), Appearance -> Automatic, 
                    Evaluator -> Automatic, Method -> "Preemptive"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, "RowDefault"]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]]},
      
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.736189279160024*^9, 3.736328284811987*^9, 
  3.7363285451310325`*^9, 3.736623361175666*^9, 3.7366234974608965`*^9, 
  3.7366715611315165`*^9, 3.7366717390424967`*^9, 3.736672061173558*^9, 
  3.736672112593526*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Dynamic", "[", 
    RowBox[{"Button", "[", 
     RowBox[{"\"\<Verifica\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"userAnswer", "[", 
           RowBox[{"[", 
            RowBox[{"6", ",", "1"}], "]"}], "]"}], " ", "===", "   ", "0"}], 
         "  ", "||", " ", 
         RowBox[{
          RowBox[{"userAnswer", "[", 
           RowBox[{"[", 
            RowBox[{"6", ",", "2"}], "]"}], "]"}], " ", "===", " ", "0"}], 
         " ", "||", " ", 
         RowBox[{
          RowBox[{"userAnswer", "[", 
           RowBox[{"[", 
            RowBox[{"6", ",", "3"}], "]"}], "]"}], " ", "===", "  ", "0"}]}], 
        ",", "  ", 
        RowBox[{
        "MessageDialog", "[", 
         "\"\<Rispondi a tutte le domande prima di verificare\>\"", "]"}], 
        " ", ",", " ", 
        RowBox[{
         RowBox[{"checkAnswer", "[", "4", "]"}], ";", " ", 
         RowBox[{"clicked3B", " ", "=", "1"}]}]}], "]"}]}], " ", "]"}], "]"}],
    "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"clicked3B", "===", " ", "1"}], ",", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{
        RowBox[{"StatusArea", "[", 
         RowBox[{
          RowBox[{"Button", "[", "\"\<Vai alla prossima sezione\>\"", "]"}], 
          ",", "\"\<RS_G3\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
          "\"\<RS_G3\>\""}], "}"}]}], "]"}], ",", " ", 
      "\"\<Verifica la risposta prima di passare alla prossima sezione\>\""}],
      "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AutoCollapse", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.73532941682066*^9, 3.7353294412680583`*^9}, {
   3.735329493700057*^9, 3.7353294938030634`*^9}, {3.7361748047824497`*^9, 
   3.7361748111025553`*^9}, {3.736177469463621*^9, 3.7361774749016557`*^9}, 
   3.736179632949413*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Button["Verifica", 
    If[
     Or[Part[MClib`userAnswer, 6, 1] === 0, Part[MClib`userAnswer, 6, 2] === 
      0, Part[MClib`userAnswer, 6, 3] === 0], 
     MessageDialog["Rispondi a tutte le domande prima di verificare"], 
     MClib`checkAnswer[4]; MClib`clicked3B = 1]], StandardForm],
  ImageSizeCache->{54., {9., 20.}}]], "Output",
 CellChangeTimes->{3.7361892792700243`*^9, 3.736328288546791*^9, 
  3.736328548787553*^9, 3.73662336382491*^9, 3.7366235000901647`*^9, 
  3.7366715649341345`*^9, 3.736671742700921*^9, 3.7366720648639803`*^9, 
  3.736672115874407*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[MClib`clicked3B === 1, 
    Hyperlink[
     StatusArea[
      Button["Vai alla prossima sezione"], "RS_G3"], {
      EvaluationNotebook[], "RS_G3"}], 
    "Verifica la risposta prima di passare alla prossima sezione"], 
   StandardForm],
  ImageSizeCache->{531., {3., 11.}}]], "Output",
 CellChangeTimes->{3.7361892792700243`*^9, 3.736328288546791*^9, 
  3.736328548787553*^9, 3.73662336382491*^9, 3.7366235000901647`*^9, 
  3.7366715649341345`*^9, 3.736671742700921*^9, 3.7366720648639803`*^9, 
  3.7366721158994083`*^9}]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Risultati", "Subsection",
 CellChangeTimes->{{3.734265185397483*^9, 3.734265225381525*^9}, 
   3.7342653603872137`*^9, {3.734500660983714*^9, 3.734500663140008*^9}, {
   3.734500985649597*^9, 3.734500987422016*^9}, {3.7345010226495113`*^9, 
   3.734501031540242*^9}, {3.734502917691106*^9, 3.7345029504485426`*^9}, {
   3.73450453105163*^9, 3.734504533082904*^9}, 3.7345065986464386`*^9, {
   3.7345066322712517`*^9, 3.7345066341384797`*^9}, {3.734584527664571*^9, 
   3.734584533153314*^9}, {3.7353000069875264`*^9, 3.7353000084746113`*^9}},
 CellTags->"RS_G3"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7353196821399794`*^9, 3.7353196893273907`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"correctAnswerG3", " ", "=", " ", 
    RowBox[{
    "correctCounter", " ", "-", " ", "correctAnswerG1", " ", "-", " ", 
     "correctAnswerG2"}]}], " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"correct", " ", "Answer", " ", "total"}], " ", "-", 
    RowBox[{"g1", " ", "g2"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"correctAnswerG3", "  ", "<", " ", "4"}], ",", " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<Su 6 domande hai risposto correttamente a ``.\>\"", ",", 
      "correctAnswerG3"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{
    "Text", "[", 
     "\"\<volendo puoi proseguire ma sarebbe meglio ripassare un po di teoria \
e poi riprovare gli esercizi\>\"", "]"}]}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<Su 6 domande hai risposto correttamente a ``.\>\"", ",", 
      "correctAnswerG3"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{
    "Text", "[", 
     "\"\<hai compreso bene l\[CloseCurlyQuote]argomento ora puoi proseguire, \
ma se hai ancora qualche dubbio puoi comunque tornare indietro e riguardare \
le equazioni di primo grado\>\"", "]"}]}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Text", "[", "\"\<Qualcosa \[EGrave] andato storto!!\>\"", "]"}]}],
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Row", "[", 
   RowBox[{"{", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Torna alla teoria\>\"", "]"}], ",", " ", 
        "\"\<E_G3\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<E_G3\>\""}], 
       "}"}]}], "]"}], "}"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"chiama", " ", "funzione", " ", "reset"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Row", "[", 
   RowBox[{"{", 
    RowBox[{"Hyperlink", "[", 
     RowBox[{
      RowBox[{"StatusArea", "[", 
       RowBox[{
        RowBox[{"Button", "[", "\"\<Torna all' indice\>\"", "]"}], ",", " ", 
        "\"\<Index\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\"\<Index\>\""}],
        "}"}]}], "]"}], "}"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Ricarica Esercizi\>\"", ",", " ", 
   RowBox[{
    RowBox[{"resetGrade", "[", 
     RowBox[{"3", ",", " ", "correctAnswerG1"}], "]"}], ";", " ", 
    RowBox[{"NotebookLocate", "[", "\"\<ES_G3\>\"", "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"StringForm", "[", 
  RowBox[{
  "\"\<Su 18 domande hai risposto correttamente a ``.\>\"", ",", 
   "correctCounter"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoCollapse", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.735319554744693*^9, 3.735319619769412*^9}, {
   3.735319657953596*^9, 3.735319675360592*^9}, {3.735329571303496*^9, 
   3.7353296088706446`*^9}, {3.7354622232002544`*^9, 3.735462225387659*^9}, {
   3.735490238530573*^9, 3.73549026903448*^9}, {3.7355418413993635`*^9, 
   3.735541871122727*^9}, {3.7361748214817224`*^9, 3.73617483411333*^9}, {
   3.7361774818417006`*^9, 3.736177488053741*^9}, 3.7361817866562953`*^9}],

Cell[BoxData[
 RowBox[{
  InterpretationBox["\<\"Su 6 domande hai risposto correttamente a \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\).\"\>",
   StringForm["Su 6 domande hai risposto correttamente a ``.", 0],
   Editable->False], " ", 
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"volendo puoi proseguire ma sarebbe meglio ripassare un po di \
teoria e poi riprovare gli esercizi\"\>", TextForm]], "InlineText"],
   Text["volendo puoi proseguire ma sarebbe meglio ripassare un po di teoria \
e poi riprovare gli esercizi"]]}]], "Output",
 CellChangeTimes->{3.7361892793600245`*^9, 3.7363282886092978`*^9, 
  3.7363285488813133`*^9, 3.7366233638968353`*^9, 3.736623500156091*^9, 
  3.7366715650277348`*^9, 3.7366717427945213`*^9, 3.7366720649605803`*^9, 
  3.7366721159770117`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Torna alla teoria\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "E_G3"]& , TagBoxNote -> "E_G3"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Torna alla teoria\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "E_G3"]& , TagBoxNote -> "E_G3"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "E_G3"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "E_G3"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7361892793600245`*^9, 3.7363282886092978`*^9, 
  3.7363285488813133`*^9, 3.7366233638968353`*^9, 3.736623500156091*^9, 
  3.7366715650277348`*^9, 3.7366717427945213`*^9, 3.7366720649605803`*^9, 
  3.736672115992612*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    ButtonBox[
     PaneSelectorBox[{False -> TagBox[
         ButtonBox[
         "\"Torna all' indice\"", ButtonFunction :> {}, Evaluator -> None, 
          Appearance -> Automatic, Method -> "Preemptive"], 
         StatusArea[#, "Index"]& , TagBoxNote -> "Index"], True -> StyleBox[
         TagBox[
          ButtonBox[
          "\"Torna all' indice\"", ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> Automatic, Method -> "Preemptive"], 
          StatusArea[#, "Index"]& , TagBoxNote -> "Index"], {
         "HyperlinkActive"}]}, 
      Dynamic[
       CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, FrameMargins -> 
      0, ImageSize -> Automatic], BaseStyle -> "Hyperlink", ButtonData :> {
       NotebookObject[
        FrontEndObject[
         LinkObject["5gwj4_shm", 3, 1]], 19], "Index"}, ButtonNote -> 
     ButtonData], Annotation[#, {
      NotebookObject[
       FrontEndObject[
        LinkObject["5gwj4_shm", 3, 1]], 19], "Index"}, "Hyperlink"]& ]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7361892793600245`*^9, 3.7363282886092978`*^9, 
  3.7363285488813133`*^9, 3.7366233638968353`*^9, 3.736623500156091*^9, 
  3.7366715650277348`*^9, 3.7366717427945213`*^9, 3.7366720649605803`*^9, 
  3.736672116008212*^9}],

Cell[BoxData[
 ButtonBox["\<\"Ricarica Esercizi\"\>",
  Appearance->Automatic,
  ButtonFunction:>(MClib`resetGrade[3, MClib`correctAnswerG1]; 
   NotebookLocate["ES_G3"]),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{3.7361892793600245`*^9, 3.7363282886092978`*^9, 
  3.7363285488813133`*^9, 3.7366233638968353`*^9, 3.736623500156091*^9, 
  3.7366715650277348`*^9, 3.7366717427945213`*^9, 3.7366720649605803`*^9, 
  3.7366721160238123`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Su 18 domande hai risposto correttamente a \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\).\"\>",
  StringForm["Su 18 domande hai risposto correttamente a ``.", 0],
  Editable->False]], "Output",
 CellChangeTimes->{3.7361892793600245`*^9, 3.7363282886092978`*^9, 
  3.7363285488813133`*^9, 3.7366233638968353`*^9, 3.736623500156091*^9, 
  3.7366715650277348`*^9, 3.7366717427945213`*^9, 3.7366720649605803`*^9, 
  3.7366721160308123`*^9}]
}, {2, 3, 4, 5, 6}]],

Cell[BoxData[
 RowBox[{"NotebookLocate", "[", "\"\<Introduction\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.736671669946862*^9, 3.736671683042161*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1350, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
TaggingRules->{"SlideShow" -> True},
ShowCellTags->True,
Magnification:>1.2 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 4407, 98, 93, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[143896, 2431, 64, 1, 92, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[158935, 2741, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[172096, 3002, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[174757, 3073, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[184584, 3295, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[191035, 3455, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[198136, 3617, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[203714, 3762, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[208996, 3901, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[213820, 4021, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[218553, 4146, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[229957, 4423, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[244320, 4759, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[276775, 5472, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[286424, 5710, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[301767, 6015, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[307032, 6152, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[313980, 6329, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[319354, 6469, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[325997, 6639, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[331588, 6781, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[336821, 6916, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[359876, 7397, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[370809, 7667, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[383581, 7972, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[417982, 8712, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[427925, 8952, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[447915, 9337, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[453455, 9479, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[460592, 9664, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[466461, 9813, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[472434, 9964, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[478114, 10107, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[485914, 10300, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[493253, 10482, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[503441, 10738, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[513510, 10995, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[525668, 11290, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[561324, 12055, 64, 1, 110, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]},
 "Home"->{
  Cell[4990, 122, 136811, 2251, 307, "Title",
   CellTags->"Home"]},
 "Introduction"->{
  Cell[143985, 2436, 128, 2, 93, "Section",
   CellTags->"Introduction"]},
 "Setup"->{
  Cell[159024, 2746, 169, 3, 111, "Section",
   CellTags->"Setup"]},
 "Index"->{
  Cell[172163, 3005, 310, 4, 81, "Subsection",
   CellTags->"Index"]},
 "E_G1"->{
  Cell[174824, 3076, 278, 5, 86, "Text",
   CellTags->"E_G1"]},
 "AG_C1_G1"->{
  Cell[198225, 3622, 431, 6, 81, "Subsection",
   CellTags->"AG_C1_G1"]},
 "CP_1_A"->{
  Cell[209085, 3906, 493, 7, 81, "Subsection",
   CellTags->"CP_1_A"]},
 "CP_1_K"->{
  Cell[213909, 4026, 629, 15, 84, "Subsection",
   CellTags->"CP_1_K"]},
 "TS1"->{
  Cell[218642, 4151, 522, 8, 81, "Subsection",
   CellTags->"TS1"]},
 "ES_G1"->{
  Cell[230046, 4428, 629, 9, 81, "Subsection",
   CellTags->"ES_G1"]},
 "ES_G1_B"->{
  Cell[244409, 4764, 683, 10, 81, "Subsection",
   CellTags->"ES_G1_B"]},
 "RS1"->{
  Cell[276864, 5477, 116, 2, 111, "Section",
   CellTags->"RS1"]},
 "E_2G"->{
  Cell[286491, 5713, 326, 5, 86, "Text",
   CellTags->"E_2G"]},
 "CG_G2_PC"->{
  Cell[301856, 6020, 427, 6, 81, "Subsection",
   CellTags->"CG_G2_PC"]},
 "E2_CP_C0"->{
  Cell[307121, 6157, 495, 7, 81, "Subsection",
   CellTags->"E2_CP_C0"]},
 "CG_G2_PB"->{
  Cell[314069, 6334, 481, 7, 81, "Subsection",
   CellTags->"CG_G2_PB"]},
 "E2_CP_B0"->{
  Cell[319443, 6474, 478, 7, 81, "Subsection",
   CellTags->"E2_CP_B0"]},
 "E_G2_CA"->{
  Cell[326086, 6644, 528, 7, 81, "Subsection",
   CellTags->"E_G2_CA"]},
 "E2_CP_A0"->{
  Cell[331677, 6786, 645, 13, 118, "Subsection",
   CellTags->"E2_CP_A0"]},
 "TS2"->{
  Cell[359965, 7402, 522, 8, 81, "Subsection",
   CellTags->"TS2"]},
 "ES_G2"->{
  Cell[370898, 7672, 628, 9, 81, "Subsection",
   CellTags->"ES_G2"]},
 "ES_G2_B"->{
  Cell[383670, 7977, 684, 10, 81, "Subsection",
   CellTags->"ES_G2_B"]},
 "RS_G2"->{
  Cell[418071, 8717, 615, 9, 81, "Subsection",
   CellTags->"RS_G2"]},
 "E_G3"->{
  Cell[427992, 8955, 325, 5, 86, "Text",
   CellTags->"E_G3"]},
 "E_G3_CD"->{
  Cell[448004, 9342, 580, 8, 81, "Subsection",
   CellTags->"E_G3_CD"]},
 "E3_CP_D0"->{
  Cell[453544, 9484, 693, 14, 84, "Subsection",
   CellTags->"E3_CP_D0"]},
 "E_G3_CC"->{
  Cell[460681, 9669, 636, 9, 81, "Subsection",
   CellTags->"E_G3_CC"]},
 "E_G3_CB"->{
  Cell[466550, 9818, 756, 13, 116, "Subsection",
   CellTags->"E_G3_CB"]},
 "E_G3_CA"->{
  Cell[472523, 9969, 797, 11, 81, "Subsection",
   CellTags->"E_G3_CA"]},
 "E3_CP_A"->{
  Cell[478203, 10112, 628, 9, 81, "Subsection",
   CellTags->"E3_CP_A"]},
 "E3_CP_A0"->{
  Cell[486003, 10305, 737, 10, 81, "Subsection",
   CellTags->"E3_CP_A0"]},
 "E3_CP_0"->{
  Cell[493342, 10487, 733, 10, 81, "Subsection",
   CellTags->"E3_CP_0"]},
 "TS3"->{
  Cell[503530, 10743, 522, 8, 81, "Subsection",
   CellTags->"TS3"]},
 "ES_G3"->{
  Cell[513599, 11000, 629, 9, 81, "Subsection",
   CellTags->"ES_G3"]},
 "ES_G3_B"->{
  Cell[525757, 11295, 633, 9, 81, "Subsection",
   CellTags->"ES_G3_B"]},
 "RS_G3"->{
  Cell[561413, 12060, 568, 8, 81, "Subsection",
   CellTags->"RS_G3"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 570448, 12280},
 {"Home", 574143, 12361},
 {"Introduction", 574231, 12364},
 {"Setup", 574318, 12367},
 {"Index", 574399, 12370},
 {"E_G1", 574481, 12373},
 {"AG_C1_G1", 574560, 12376},
 {"CP_1_A", 574647, 12379},
 {"CP_1_K", 574732, 12382},
 {"TS1", 574815, 12385},
 {"ES_G1", 574896, 12388},
 {"ES_G1_B", 574981, 12391},
 {"RS1", 575065, 12394},
 {"E_2G", 575143, 12397},
 {"CG_G2_PC", 575222, 12400},
 {"E2_CP_C0", 575311, 12403},
 {"CG_G2_PB", 575400, 12406},
 {"E2_CP_B0", 575489, 12409},
 {"E_G2_CA", 575577, 12412},
 {"E2_CP_A0", 575665, 12415},
 {"TS2", 575751, 12418},
 {"ES_G2", 575832, 12421},
 {"ES_G2_B", 575917, 12424},
 {"RS_G2", 576003, 12427},
 {"E_G3", 576085, 12430},
 {"E_G3_CD", 576163, 12433},
 {"E3_CP_D0", 576251, 12436},
 {"E_G3_CC", 576340, 12439},
 {"E_G3_CB", 576427, 12442},
 {"E_G3_CA", 576516, 12445},
 {"E3_CP_A", 576604, 12448},
 {"E3_CP_A0", 576693, 12451},
 {"E3_CP_0", 576783, 12454},
 {"TS3", 576868, 12457},
 {"ES_G3", 576950, 12460},
 {"ES_G3_B", 577036, 12463},
 {"RS_G3", 577122, 12466}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4407, 98, 93, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[4990, 122, 136811, 2251, 307, "Title",
 CellTags->"Home"],
Cell[141804, 2375, 212, 4, 60, "Subtitle"],
Cell[142019, 2381, 211, 3, 35, "Text"],
Cell[CellGroupData[{
Cell[142255, 2388, 1172, 24, 206, "Input"],
Cell[143430, 2414, 420, 11, 43, "Output"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143896, 2431, 64, 1, 92, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[143985, 2436, 128, 2, 93, "Section",
 CellTags->"Introduction"],
Cell[144116, 2440, 642, 12, 81, "Text"],
Cell[CellGroupData[{
Cell[144783, 2456, 974, 25, 103, "Input"],
Cell[145760, 2483, 960, 22, 37, "Output"],
Cell[146723, 2507, 11977, 217, 234, "Output"]
}, {2, 3}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[158749, 2730, 19, 0, 77, "Chapter"],
Cell[158771, 2732, 96, 1, 37, "Input"],
Cell[158870, 2735, 16, 0, 35, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[158935, 2741, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[159024, 2746, 169, 3, 111, "Section",
 CellTags->"Setup"],
Cell[159196, 2751, 269, 6, 97, "Text"],
Cell[CellGroupData[{
Cell[159490, 2761, 598, 15, 74, "Input"],
Cell[160091, 2778, 11947, 217, 280, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[172096, 3002, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[172163, 3005, 310, 4, 81, "Subsection",
 CellTags->"Index"],
Cell[CellGroupData[{
Cell[172498, 3013, 219, 4, 40, "Subsubtitle"],
Cell[172720, 3019, 222, 4, 40, "Subsubtitle"],
Cell[172945, 3025, 340, 4, 61, "Subsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173322, 3034, 217, 4, 40, "Subsubtitle"],
Cell[173542, 3040, 271, 5, 40, "Subsubtitle"],
Cell[173816, 3047, 362, 4, 61, "Subsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174215, 3056, 217, 4, 40, "Subsubtitle"],
Cell[174435, 3062, 273, 5, 40, "Subsubtitle"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[174757, 3073, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[174824, 3076, 278, 5, 86, "Text",
 CellTags->"E_G1"],
Cell[CellGroupData[{
Cell[175127, 3085, 175, 2, 61, "Subsection"],
Cell[175305, 3089, 420, 9, 123, "Text"],
Cell[CellGroupData[{
Cell[175750, 3102, 957, 27, 74, "Input"],
Cell[176710, 3131, 7696, 153, 284, "Output"]
}, {2}]],
Cell[184418, 3287, 117, 2, 44, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[184584, 3295, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[184651, 3298, 92, 1, 44, "Input"],
Cell[CellGroupData[{
Cell[184768, 3303, 346, 4, 61, "Subsection"],
Cell[185117, 3309, 243, 7, 42, "Text"],
Cell[CellGroupData[{
Cell[185385, 3320, 1588, 39, 103, "Input"],
Cell[186976, 3361, 1903, 38, 507, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[188913, 3404, 1230, 23, 132, "Input"],
Cell[190146, 3429, 831, 19, 44, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[191035, 3455, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[191124, 3460, 345, 4, 61, "Subsection"],
Cell[191472, 3466, 239, 3, 42, "Text"],
Cell[CellGroupData[{
Cell[191736, 3473, 4108, 86, 362, "Input"],
Cell[195847, 3561, 1583, 34, 58, "Output"],
Cell[197433, 3597, 545, 10, 44, "Output"]
}, {2, 3}]],
Cell[197993, 3610, 94, 1, 44, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[198136, 3617, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[198225, 3622, 431, 6, 81, "Subsection",
 CellTags->"AG_C1_G1"],
Cell[198659, 3630, 249, 5, 42, "Text"],
Cell[CellGroupData[{
Cell[198933, 3639, 1100, 28, 74, "Input"],
Cell[200036, 3669, 1903, 38, 507, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[201973, 3712, 927, 24, 103, "Input"],
Cell[202903, 3738, 753, 17, 44, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[203714, 3762, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[203803, 3767, 472, 6, 61, "Subsection"],
Cell[204278, 3775, 267, 11, 42, "Text"],
Cell[CellGroupData[{
Cell[204570, 3790, 2200, 54, 304, "Input"],
Cell[206773, 3846, 1411, 30, 58, "Output"],
Cell[208187, 3878, 626, 12, 44, "Output"]
}, {2, 3}]],
Cell[208828, 3893, 119, 2, 44, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[208996, 3901, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[209085, 3906, 493, 7, 81, "Subsection",
 CellTags->"CP_1_A"],
Cell[209581, 3915, 117, 1, 42, "Text"],
Cell[CellGroupData[{
Cell[209723, 3920, 2045, 50, 247, "Input"],
Cell[211771, 3972, 1420, 30, 58, "Output"],
Cell[213194, 4004, 565, 10, 44, "Output"]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[213820, 4021, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[213909, 4026, 629, 15, 84, "Subsection",
 CellTags->"CP_1_K"],
Cell[214541, 4043, 407, 8, 97, "Text"],
Cell[214951, 4053, 87, 1, 74, "Input"],
Cell[CellGroupData[{
Cell[215063, 4058, 1471, 39, 132, "Input"],
Cell[216537, 4099, 1958, 40, 500, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[218553, 4146, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[218642, 4151, 522, 8, 81, "Subsection",
 CellTags->"TS1"],
Cell[219167, 4161, 476, 9, 97, "Text"],
Cell[219646, 4172, 297, 4, 44, "Input"],
Cell[CellGroupData[{
Cell[219968, 4180, 4288, 96, 362, "Input"],
Cell[224259, 4278, 1594, 38, 114, "Output"]
}, {2}]],
Cell[225865, 4319, 91, 1, 44, "Input"],
Cell[CellGroupData[{
Cell[225981, 4324, 1307, 33, 132, "Input"],
Cell[227291, 4359, 306, 4, 31, "Print"],
Cell[227600, 4365, 2296, 51, 58, "Output"]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[229957, 4423, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[230046, 4428, 629, 9, 81, "Subsection",
 CellTags->"ES_G1"],
Cell[CellGroupData[{
Cell[230700, 4441, 624, 10, 74, "Input"],
Cell[231327, 4453, 7767, 175, 1503, "Output"]
}, {2}]],
Cell[239106, 4631, 546, 7, 44, "Input"],
Cell[CellGroupData[{
Cell[239677, 4642, 1612, 40, 189, "Input"],
Cell[241292, 4684, 607, 12, 58, "Output"],
Cell[241902, 4698, 197, 4, 31, "Print"]
}, {2}]],
Cell[CellGroupData[{
Cell[242133, 4707, 1556, 30, 103, "Input"],
Cell[243692, 4739, 570, 13, 44, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[244320, 4759, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[244409, 4764, 683, 10, 81, "Subsection",
 CellTags->"ES_G1_B"],
Cell[CellGroupData[{
Cell[245117, 4778, 369, 8, 103, "Input"],
Cell[245489, 4788, 27643, 580, 2797, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[273166, 5373, 1458, 37, 132, "Input"],
Cell[274627, 5412, 608, 12, 58, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[275269, 5429, 886, 21, 103, "Input"],
Cell[276158, 5452, 559, 13, 44, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[276775, 5472, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[276864, 5477, 116, 2, 111, "Section",
 CellTags->"RS1"],
Cell[CellGroupData[{
Cell[277005, 5483, 4198, 102, 621, "Input"],
Cell[281206, 5587, 770, 14, 44, "Output"],
Cell[281979, 5603, 1296, 28, 58, "Output"],
Cell[283278, 5633, 1302, 28, 58, "Output"],
Cell[284583, 5663, 470, 10, 58, "Output"],
Cell[285056, 5675, 1298, 28, 58, "Output"]
}, {2, 3, 4, 5, 6}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[286424, 5710, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[286491, 5713, 326, 5, 86, "Text",
 CellTags->"E_2G"],
Cell[CellGroupData[{
Cell[286842, 5722, 101, 1, 61, "Subsection"],
Cell[286946, 5725, 445, 10, 73, "Text"],
Cell[CellGroupData[{
Cell[287416, 5739, 1050, 26, 74, "Input"],
Cell[288469, 5767, 13240, 241, 267, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[301767, 6015, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[301856, 6020, 427, 6, 81, "Subsection",
 CellTags->"CG_G2_PC"],
Cell[302286, 6028, 133, 4, 69, "Text"],
Cell[CellGroupData[{
Cell[302444, 6036, 1263, 33, 105, "Input"],
Cell[303710, 6071, 1940, 39, 512, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[305684, 6115, 554, 11, 103, "Input"],
Cell[306241, 6128, 733, 17, 44, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[307032, 6152, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[307121, 6157, 495, 7, 81, "Subsection",
 CellTags->"E2_CP_C0"],
Cell[307619, 6166, 114, 4, 69, "Text"],
Cell[CellGroupData[{
Cell[307758, 6174, 4109, 102, 403, "Input"],
Cell[311870, 6278, 1430, 30, 58, "Output"],
Cell[313303, 6310, 616, 12, 44, "Output"]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[313980, 6329, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[314069, 6334, 481, 7, 81, "Subsection",
 CellTags->"CG_G2_PB"],
Cell[314553, 6343, 115, 4, 69, "Text"],
Cell[CellGroupData[{
Cell[314693, 6351, 1241, 34, 76, "Input"],
Cell[315937, 6387, 1941, 39, 512, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[317912, 6431, 608, 12, 132, "Input"],
Cell[318523, 6445, 773, 17, 44, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[319354, 6469, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[319443, 6474, 478, 7, 81, "Subsection",
 CellTags->"E2_CP_B0"],
Cell[319924, 6483, 208, 3, 42, "Text"],
Cell[CellGroupData[{
Cell[320157, 6490, 3739, 96, 374, "Input"],
Cell[323899, 6588, 1424, 30, 58, "Output"],
Cell[325326, 6620, 610, 12, 44, "Output"]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[325997, 6639, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[326086, 6644, 528, 7, 81, "Subsection",
 CellTags->"E_G2_CA"],
Cell[326617, 6653, 115, 4, 69, "Text"],
Cell[CellGroupData[{
Cell[326757, 6661, 1193, 31, 76, "Input"],
Cell[327953, 6694, 1956, 39, 512, "Output"]
}, {2}]],
Cell[329921, 6736, 96, 1, 44, "Input"],
Cell[CellGroupData[{
Cell[330042, 6741, 664, 13, 132, "Input"],
Cell[330709, 6756, 821, 18, 44, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[331588, 6781, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[331677, 6786, 645, 13, 118, "Subsection",
 CellTags->"E2_CP_A0"],
Cell[332325, 6801, 245, 7, 97, "Text"],
Cell[CellGroupData[{
Cell[332595, 6812, 2142, 52, 276, "Input"],
Cell[334740, 6866, 1398, 30, 58, "Output"],
Cell[336141, 6898, 619, 11, 44, "Output"]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[336821, 6916, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[336910, 6921, 106, 1, 61, "Subsection"],
Cell[337019, 6924, 286, 8, 97, "Text"],
Cell[CellGroupData[{
Cell[337330, 6936, 2374, 63, 340, "Input"],
Cell[CellGroupData[{
Cell[339729, 7003, 14691, 264, 294, "Print"],
Cell[354423, 7269, 349, 5, 31, "Print"]
}, {1, 2}]],
Cell[354787, 7277, 1701, 40, 475, "Output"],
Cell[356491, 7319, 417, 6, 31, "Print"],
Cell[356911, 7327, 2477, 55, 492, "Output"],
Cell[359391, 7384, 418, 6, 31, "Print"]
}, {4, 5, 6, 7}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[359876, 7397, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[359965, 7402, 522, 8, 81, "Subsection",
 CellTags->"TS2"],
Cell[360490, 7412, 242, 5, 42, "Text"],
Cell[CellGroupData[{
Cell[360757, 7421, 3617, 87, 391, "Input"],
Cell[364377, 7510, 2273, 47, 114, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[366684, 7562, 1357, 36, 132, "Input"],
Cell[368044, 7600, 308, 4, 31, "Print"],
Cell[368355, 7606, 2294, 51, 58, "Output"]
}, {2, 3}]],
Cell[370664, 7660, 96, 1, 44, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[370809, 7667, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[370898, 7672, 628, 9, 81, "Subsection",
 CellTags->"ES_G2"],
Cell[CellGroupData[{
Cell[371551, 7685, 317, 6, 74, "Input"],
Cell[371871, 7693, 8345, 185, 1489, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[380250, 7883, 2084, 53, 189, "Input"],
Cell[382337, 7938, 613, 12, 58, "Output"],
Cell[382953, 7952, 567, 13, 44, "Output"]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[383581, 7972, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[383670, 7977, 684, 10, 81, "Subsection",
 CellTags->"ES_G2_B"],
Cell[CellGroupData[{
Cell[384379, 7991, 366, 6, 74, "Input"],
Cell[384748, 7999, 29970, 620, 2907, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[414752, 8624, 1993, 52, 189, "Input"],
Cell[416748, 8678, 608, 12, 58, "Output"],
Cell[417359, 8692, 562, 13, 44, "Output"]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[417982, 8712, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[418071, 8717, 615, 9, 81, "Subsection",
 CellTags->"RS_G2"],
Cell[CellGroupData[{
Cell[418711, 8730, 3981, 97, 621, "Input"],
Cell[422695, 8829, 774, 14, 44, "Output"],
Cell[423472, 8845, 1298, 28, 58, "Output"],
Cell[424773, 8875, 1304, 28, 58, "Output"],
Cell[426080, 8905, 472, 10, 58, "Output"],
Cell[426555, 8917, 1300, 28, 58, "Output"]
}, {2, 3, 4, 5, 6}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[427925, 8952, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[427992, 8955, 325, 5, 86, "Text",
 CellTags->"E_G3"],
Cell[CellGroupData[{
Cell[428342, 8964, 101, 1, 61, "Subsection"],
Cell[428446, 8967, 462, 13, 73, "Text"],
Cell[CellGroupData[{
Cell[428933, 8984, 885, 23, 74, "Input"],
Cell[429821, 9009, 17865, 317, 247, "Output"]
}, {2}]],
Cell[447698, 9329, 168, 2, 44, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[447915, 9337, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[448004, 9342, 580, 8, 81, "Subsection",
 CellTags->"E_G3_CD"],
Cell[448587, 9352, 130, 4, 69, "Text"],
Cell[CellGroupData[{
Cell[448742, 9360, 1383, 36, 105, "Input"],
Cell[450128, 9398, 1922, 38, 512, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[452084, 9441, 575, 12, 103, "Input"],
Cell[452662, 9455, 735, 17, 44, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[453455, 9479, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[453544, 9484, 693, 14, 84, "Subsection",
 CellTags->"E3_CP_D0"],
Cell[454240, 9500, 140, 4, 69, "Text"],
Cell[CellGroupData[{
Cell[454405, 9508, 3993, 101, 378, "Input"],
Cell[458401, 9611, 1424, 30, 58, "Output"],
Cell[459828, 9643, 703, 14, 44, "Output"]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[460592, 9664, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[460681, 9669, 636, 9, 81, "Subsection",
 CellTags->"E_G3_CC"],
Cell[461320, 9680, 115, 4, 69, "Text"],
Cell[CellGroupData[{
Cell[461460, 9688, 1432, 37, 76, "Input"],
Cell[462895, 9727, 2016, 41, 512, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[464945, 9773, 683, 14, 132, "Input"],
Cell[465631, 9789, 772, 17, 44, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[466461, 9813, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[466550, 9818, 756, 13, 116, "Subsection",
 CellTags->"E_G3_CB"],
Cell[467309, 9833, 191, 6, 97, "Text"],
Cell[CellGroupData[{
Cell[467525, 9843, 1266, 33, 76, "Input"],
Cell[468794, 9878, 1977, 39, 512, "Output"]
}, {2}]],
Cell[470783, 9920, 16, 0, 42, "Text"],
Cell[CellGroupData[{
Cell[470824, 9924, 758, 14, 132, "Input"],
Cell[471585, 9940, 791, 17, 44, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[472434, 9964, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[472523, 9969, 797, 11, 81, "Subsection",
 CellTags->"E_G3_CA"],
Cell[473323, 9982, 115, 4, 69, "Text"],
Cell[CellGroupData[{
Cell[473463, 9990, 1273, 34, 76, "Input"],
Cell[474739, 10026, 2006, 40, 512, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[476779, 10071, 570, 11, 103, "Input"],
Cell[477352, 10084, 704, 16, 44, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[478114, 10107, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[478203, 10112, 628, 9, 81, "Subsection",
 CellTags->"E3_CP_A"],
Cell[478834, 10123, 205, 6, 97, "Text"],
Cell[CellGroupData[{
Cell[479064, 10133, 4609, 112, 490, "Input"],
Cell[483676, 10247, 1423, 30, 58, "Output"],
Cell[485102, 10279, 751, 14, 44, "Output"]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[485914, 10300, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[486003, 10305, 737, 10, 81, "Subsection",
 CellTags->"E3_CP_A0"],
Cell[486743, 10317, 184, 2, 42, "Text"],
Cell[CellGroupData[{
Cell[486952, 10323, 4080, 103, 406, "Input"],
Cell[491035, 10428, 1411, 30, 58, "Output"],
Cell[492449, 10460, 743, 15, 44, "Output"]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[493253, 10482, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[493342, 10487, 733, 10, 81, "Subsection",
 CellTags->"E3_CP_0"],
Cell[494078, 10499, 792, 17, 158, "Text"],
Cell[CellGroupData[{
Cell[494895, 10520, 1490, 37, 199, "Input"],
Cell[496388, 10559, 2124, 51, 475, "Output"],
Cell[498515, 10612, 2750, 65, 475, "Output"],
Cell[501268, 10679, 2109, 52, 504, "Output"]
}, {2, 3, 4}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[503441, 10738, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[503530, 10743, 522, 8, 81, "Subsection",
 CellTags->"TS3"],
Cell[504055, 10753, 277, 6, 69, "Text"],
Cell[CellGroupData[{
Cell[504357, 10763, 3508, 85, 362, "Input"],
Cell[507868, 10850, 1603, 38, 114, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[509505, 10893, 1343, 36, 160, "Input"],
Cell[510851, 10931, 304, 4, 31, "Print"],
Cell[511158, 10937, 2291, 51, 58, "Output"]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[513510, 10995, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[513599, 11000, 629, 9, 81, "Subsection",
 CellTags->"ES_G3"],
Cell[CellGroupData[{
Cell[514253, 11013, 316, 6, 74, "Input"],
Cell[514572, 11021, 7770, 175, 1508, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[522376, 11201, 2047, 53, 189, "Input"],
Cell[524426, 11256, 611, 12, 58, "Output"],
Cell[525040, 11270, 567, 13, 44, "Output"]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[525668, 11290, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[525757, 11295, 633, 9, 81, "Subsection",
 CellTags->"ES_G3_B"],
Cell[CellGroupData[{
Cell[526415, 11308, 350, 5, 74, "Input"],
Cell[526768, 11315, 31243, 646, 2900, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[558045, 11966, 2040, 53, 189, "Input"],
Cell[560088, 12021, 609, 12, 58, "Output"],
Cell[560700, 12035, 563, 13, 44, "Output"]
}, {2, 3}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[561324, 12055, 64, 1, 110, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[561413, 12060, 568, 8, 81, "Subsection",
 CellTags->"RS_G3"],
Cell[561984, 12070, 96, 1, 44, "Input"],
Cell[CellGroupData[{
Cell[562105, 12075, 3419, 85, 506, "Input"],
Cell[565527, 12162, 776, 14, 44, "Output"],
Cell[566306, 12178, 1298, 28, 58, "Output"],
Cell[567607, 12208, 1304, 28, 58, "Output"],
Cell[568914, 12238, 474, 10, 58, "Output"],
Cell[569391, 12250, 462, 8, 44, "Output"]
}, {2, 3, 4, 5, 6}]],
Cell[569877, 12261, 152, 2, 44, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

